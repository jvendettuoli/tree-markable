[{"/home/justin/Documents/Springboard/SECT/Capstone_tree_markable/client/src/index.js":"1","/home/justin/Documents/Springboard/SECT/Capstone_tree_markable/client/src/App.js":"2","/home/justin/Documents/Springboard/SECT/Capstone_tree_markable/client/src/Routes.js":"3","/home/justin/Documents/Springboard/SECT/Capstone_tree_markable/client/src/Home.js":"4","/home/justin/Documents/Springboard/SECT/Capstone_tree_markable/client/src/firebase/firebaseIndex.js":"5","/home/justin/Documents/Springboard/SECT/Capstone_tree_markable/client/src/NavBar.js":"6","/home/justin/Documents/Springboard/SECT/Capstone_tree_markable/client/src/firebase/firebaseAuth.js":"7","/home/justin/Documents/Springboard/SECT/Capstone_tree_markable/client/src/SignOut.js":"8","/home/justin/Documents/Springboard/SECT/Capstone_tree_markable/client/src/firebase/firebaseStorage.js":"9","/home/justin/Documents/Springboard/SECT/Capstone_tree_markable/client/src/SignUp.js":"10","/home/justin/Documents/Springboard/SECT/Capstone_tree_markable/client/src/TreeForm.js":"11","/home/justin/Documents/Springboard/SECT/Capstone_tree_markable/client/src/styles/formStyle.js":"12","/home/justin/Documents/Springboard/SECT/Capstone_tree_markable/client/src/TreeMarkableApi.js":"13","/home/justin/Documents/Springboard/SECT/Capstone_tree_markable/client/src/SelectLocationMap.js":"14","/home/justin/Documents/Springboard/SECT/Capstone_tree_markable/client/src/ShowTreesMap.js":"15","/home/justin/Documents/Springboard/SECT/Capstone_tree_markable/client/src/store.js":"16","/home/justin/Documents/Springboard/SECT/Capstone_tree_markable/client/src/reducers/root.js":"17","/home/justin/Documents/Springboard/SECT/Capstone_tree_markable/client/src/reducers/trees.js":"18","/home/justin/Documents/Springboard/SECT/Capstone_tree_markable/client/src/actions/types.js":"19","/home/justin/Documents/Springboard/SECT/Capstone_tree_markable/client/src/actions/trees.js":"20","/home/justin/Documents/Springboard/SECT/Capstone_tree_markable/client/src/actions/reset.js":"21","/home/justin/Documents/Springboard/SECT/Capstone_tree_markable/client/src/reducers/auth.js":"22","/home/justin/Documents/Springboard/SECT/Capstone_tree_markable/client/src/actions/auth.js":"23","/home/justin/Documents/Springboard/SECT/Capstone_tree_markable/client/src/SignIn.js":"24","/home/justin/Documents/Springboard/SECT/Capstone_tree_markable/client/src/UploadImagesToFirebase.js":"25","/home/justin/Documents/Springboard/SECT/Capstone_tree_markable/client/src/ImagesInput.js":"26","/home/justin/Documents/Springboard/SECT/Capstone_tree_markable/client/src/TreeList.js":"27","/home/justin/Documents/Springboard/SECT/Capstone_tree_markable/client/src/TreePage.js":"28"},{"size":606,"mtime":1608857723029,"results":"29","hashOfConfig":"30"},{"size":681,"mtime":1609268223565,"results":"31","hashOfConfig":"30"},{"size":1040,"mtime":1609298782129,"results":"32","hashOfConfig":"30"},{"size":315,"mtime":1607120269014,"results":"33","hashOfConfig":"30"},{"size":839,"mtime":1609204545378,"results":"34","hashOfConfig":"30"},{"size":1621,"mtime":1609290617957,"results":"35","hashOfConfig":"30"},{"size":973,"mtime":1609372922967,"results":"36","hashOfConfig":"30"},{"size":689,"mtime":1608855045351,"results":"37","hashOfConfig":"30"},{"size":3522,"mtime":1609373581575,"results":"38","hashOfConfig":"30"},{"size":1358,"mtime":1608855211774,"results":"39","hashOfConfig":"30"},{"size":6068,"mtime":1609374434695,"results":"40","hashOfConfig":"30"},{"size":236,"mtime":1609457507011,"results":"41","hashOfConfig":"30"},{"size":3832,"mtime":1609372952183,"results":"42","hashOfConfig":"30"},{"size":2121,"mtime":1608674288491,"results":"43","hashOfConfig":"30"},{"size":2843,"mtime":1609272104045,"results":"44","hashOfConfig":"30"},{"size":815,"mtime":1609203098930,"results":"45","hashOfConfig":"30"},{"size":260,"mtime":1609286371325,"results":"46","hashOfConfig":"30"},{"size":709,"mtime":1609286502977,"results":"47","hashOfConfig":"30"},{"size":316,"mtime":1608841177040,"results":"48","hashOfConfig":"30"},{"size":776,"mtime":1608858596301,"results":"49","hashOfConfig":"30"},{"size":163,"mtime":1608684770631,"results":"50","hashOfConfig":"30"},{"size":1009,"mtime":1609286469749,"results":"51","hashOfConfig":"30"},{"size":2082,"mtime":1609268085541,"results":"52","hashOfConfig":"30"},{"size":1426,"mtime":1608846521659,"results":"53","hashOfConfig":"30"},{"size":2594,"mtime":1609361844163,"results":"54","hashOfConfig":"30"},{"size":1941,"mtime":1609538640383,"results":"55","hashOfConfig":"30"},{"size":2138,"mtime":1609298740969,"results":"56","hashOfConfig":"30"},{"size":1746,"mtime":1609373348511,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"1bgogi4",{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"60"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"60"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"60"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"60"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"60"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"60"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"60"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"118","messages":"119","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"60"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"60"},"/home/justin/Documents/Springboard/SECT/Capstone_tree_markable/client/src/index.js",[],["124","125"],"/home/justin/Documents/Springboard/SECT/Capstone_tree_markable/client/src/App.js",[],"/home/justin/Documents/Springboard/SECT/Capstone_tree_markable/client/src/Routes.js",[],"/home/justin/Documents/Springboard/SECT/Capstone_tree_markable/client/src/Home.js",[],"/home/justin/Documents/Springboard/SECT/Capstone_tree_markable/client/src/firebase/firebaseIndex.js",[],"/home/justin/Documents/Springboard/SECT/Capstone_tree_markable/client/src/NavBar.js",[],"/home/justin/Documents/Springboard/SECT/Capstone_tree_markable/client/src/firebase/firebaseAuth.js",[],"/home/justin/Documents/Springboard/SECT/Capstone_tree_markable/client/src/SignOut.js",["126","127","128"],"import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { signOutUser } from './actions/auth';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles({});\n\nfunction Login() {\n\tconst classes = useStyles();\n\tconst dispatch = useDispatch();\n\n\tconst handleClick = (evt) => {\n\t\tdispatch(signOutUser());\n\t};\n\n\treturn (\n\t\t<Grid container className=\"Login\">\n\t\t\tSign Out Page\n\t\t\t<Button type=\"submit\" onClick={handleClick}>\n\t\t\t\tSign Out\n\t\t\t</Button>\n\t\t</Grid>\n\t);\n}\nexport default Login;\n","/home/justin/Documents/Springboard/SECT/Capstone_tree_markable/client/src/firebase/firebaseStorage.js",[],"/home/justin/Documents/Springboard/SECT/Capstone_tree_markable/client/src/SignUp.js",["129"],"import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { signUpUser } from './actions/auth';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles({});\n\nfunction SignUp() {\n\tconst classes = useStyles();\n\tconst dispatch = useDispatch();\n\tconst INITIAL_FORM_DATA = {\n\t\temail    : '',\n\t\tpassword : ''\n\t};\n\tconst [ formData, setFormData ] = useState(INITIAL_FORM_DATA);\n\n\tconst handleChange = (evt) => {\n\t\tconst { name, value } = evt.target;\n\n\t\tsetFormData((fData) => ({\n\t\t\t...fData,\n\t\t\t[name] : value\n\t\t}));\n\t};\n\n\tconst handleSubmit = (evt) => {\n\t\tevt.preventDefault();\n\t\tdispatch(signUpUser(formData));\n\t};\n\treturn (\n\t\t<Grid container className=\"Signup\">\n\t\t\tSignup Page\n\t\t\t<form onSubmit={handleSubmit}>\n\t\t\t\t<TextField\n\t\t\t\t\tid=\"email\"\n\t\t\t\t\tname=\"email\"\n\t\t\t\t\tlabel=\"Email\"\n\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\tvalue={formData.email}\n\t\t\t\t\tautoComplete=\"email\"\n\t\t\t\t/>\n\t\t\t\t<TextField\n\t\t\t\t\tid=\"password\"\n\t\t\t\t\tname=\"password\"\n\t\t\t\t\tlabel=\"Password\"\n\t\t\t\t\ttype=\"password\"\n\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\tvalue={formData.password}\n\t\t\t\t\tautoComplete=\"password\"\n\t\t\t\t/>\n\t\t\t\t<Button type=\"submit\">Signup</Button>\n\t\t\t</form>\n\t\t</Grid>\n\t);\n}\nexport default SignUp;\n","/home/justin/Documents/Springboard/SECT/Capstone_tree_markable/client/src/TreeForm.js",["130"],"import React, { useState, useRef, useEffect } from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Button from '@material-ui/core/Button';\nimport useStyles from './styles/formStyle';\n\nimport TreeMarkableApi from './TreeMarkableApi';\nimport SelectLocationMap from './SelectLocationMap';\nimport {\n\ttreesRef,\n\tuploadImagesToFirebase\n} from './firebase/firebaseStorage';\nimport ImagesInput from './ImagesInput';\n\nfunction TreeForm() {\n\tconst classes = useStyles();\n\tconst INITIAL_FORM_DATA = {\n\t\tname            : '',\n\t\tdescription     : '',\n\t\tcommon_name     : '',\n\t\tscientific_name : '',\n\t\tgeolocation_lat : '',\n\t\tgeolocation_lng : '',\n\t\theight          : '',\n\t\tdsh             : '',\n\t\tleaf_type       : ''\n\t};\n\tconst [ formData, setFormData ] = useState(INITIAL_FORM_DATA);\n\tconst [ showSelectMap, setShowSelectMap ] = useState(false);\n\tconst [ imageFiles, setImageFiles ] = useState([]);\n\n\t// Scroll to map when shown for selecting tree location\n\tconst mapToggleRef = useRef(null);\n\tuseEffect(\n\t\t() => {\n\t\t\tif (showSelectMap && mapToggleRef.current) {\n\t\t\t\tmapToggleRef.current.scrollIntoView({\n\t\t\t\t\tbehavior : 'smooth'\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\t\t[ showSelectMap ]\n\t);\n\n\tconst handleChange = (evt) => {\n\t\tconst { name, value } = evt.target;\n\n\t\tsetFormData((fData) => ({\n\t\t\t...fData,\n\t\t\t[name] : value\n\t\t}));\n\t};\n\n\tconst handleImagesInput = (files) => {\n\t\tconsole.log('files,', files);\n\t\tsetImageFiles(files);\n\t};\n\n\t// passes clicked coordinates from map to formData\n\tconst passTreeLocation = (treeCoors) => {\n\t\tsetFormData((fData) => ({\n\t\t\t...fData,\n\t\t\tgeolocation_lat : treeCoors.lat,\n\t\t\tgeolocation_lng : treeCoors.lng\n\t\t}));\n\t};\n\n\tconst toggleSelectMap = (evt) => {\n\t\tsetShowSelectMap(!showSelectMap);\n\t};\n\tconst selectMapBtn = () => {\n\t\treturn !showSelectMap ? (\n\t\t\t<Typography>Select Via Map</Typography>\n\t\t) : (\n\t\t\t<Typography>Hide Map</Typography>\n\t\t);\n\t};\n\tconst displaySelectMap = () => {\n\t\tif (showSelectMap)\n\t\t\treturn <SelectLocationMap setLocation={passTreeLocation} />;\n\t};\n\n\t// On form submit, convert data to type expected by server\n\t// and make POST request to create new tree\n\tconst handleSubmit = async (evt) => {\n\t\tevt.preventDefault();\n\t\tconsole.log('Submit - form data', formData);\n\n\t\t/*\n\t\tTODO: Convert the data to fit the schema requirements. Remove empty fields\n\t\t*/\n\t\tlet newTree = {\n\t\t\t...formData,\n\t\t\tgeolocation : {\n\t\t\t\tlatitude  : formData.geolocation_lat,\n\t\t\t\tlongitude : formData.geolocation_lng\n\t\t\t}\n\t\t};\n\n\t\tfor (let field in newTree) {\n\t\t\tif (newTree[field] === '') {\n\t\t\t\tdelete newTree[field];\n\t\t\t}\n\t\t\telse if (field === 'height' || field === 'dsh') {\n\t\t\t\tnewTree[field] = parseFloat(newTree[field]);\n\t\t\t}\n\t\t}\n\n\t\tdelete newTree.geolocation_lat;\n\t\tdelete newTree.geolocation_lng;\n\n\t\tconsole.log('newtree', newTree);\n\n\t\tconst res = await TreeMarkableApi.createTree(newTree);\n\t\tconsole.log('Trees Submit res', res);\n\t\tconsole.log('ImageFiles', imageFiles);\n\t\tawait uploadImagesToFirebase(treesRef, res.id, imageFiles);\n\t};\n\treturn (\n\t\t<Grid container className=\"Signup\">\n\t\t\tNew Tree Form\n\t\t\t<form onSubmit={handleSubmit} className={classes.form}>\n\t\t\t\t<TextField\n\t\t\t\t\tid=\"name\"\n\t\t\t\t\tname=\"name\"\n\t\t\t\t\tlabel=\"Tree Name\"\n\t\t\t\t\tplaceholder=\"The Giant on 8th Street\"\n\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\tvalue={formData.name}\n\t\t\t\t\trequired\n\t\t\t\t/>\n\t\t\t\t<TextField\n\t\t\t\t\tid=\"description\"\n\t\t\t\t\tname=\"description\"\n\t\t\t\t\tlabel=\"Description\"\n\t\t\t\t\tmultiline\n\t\t\t\t\tplaceholder=\"Amazing tree with wide spreading limbs!\"\n\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\tvalue={formData.description}\n\t\t\t\t/>\n\n\t\t\t\t<TextField\n\t\t\t\t\tid=\"common_name\"\n\t\t\t\t\tname=\"common_name\"\n\t\t\t\t\tlabel=\"Species Common Name\"\n\t\t\t\t\tplaceholder=\"Bigleaf Maple\"\n\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\tvalue={formData.common_name}\n\t\t\t\t/>\n\n\t\t\t\t<TextField\n\t\t\t\t\tid=\"scientific_name\"\n\t\t\t\t\tname=\"scientific_name\"\n\t\t\t\t\tlabel=\"Species Scientifc Name\"\n\t\t\t\t\tplaceholder=\"Acer Macrophyllum\"\n\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\tvalue={formData.scientific_name}\n\t\t\t\t/>\n\t\t\t\t<TextField\n\t\t\t\t\tid=\"height\"\n\t\t\t\t\tname=\"height\"\n\t\t\t\t\tlabel=\"Height (ft.)\"\n\t\t\t\t\ttype=\"number\"\n\t\t\t\t\tplaceholder=\"From base to the tallest branch.\"\n\t\t\t\t\tinputProps={{ min: 0, max: 500, step: 0.01 }}\n\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\tvalue={formData.height}\n\t\t\t\t/>\n\t\t\t\t<TextField\n\t\t\t\t\tid=\"dsh\"\n\t\t\t\t\tname=\"dsh\"\n\t\t\t\t\tlabel=\"Diameter Standard Height (in.)\"\n\t\t\t\t\ttype=\"number\"\n\t\t\t\t\tinputProps={{ min: 0, max: 500, step: 0.01 }}\n\t\t\t\t\tplaceholder=\"Trunk circumference 4.5ft above the ground.\"\n\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\tvalue={formData.dsh}\n\t\t\t\t/>\n\t\t\t\t<TextField\n\t\t\t\t\tid=\"leaf_type\"\n\t\t\t\t\tname=\"leaf_type\"\n\t\t\t\t\tlabel=\"Leaf Type\"\n\t\t\t\t\tselect\n\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\tvalue={formData.leaf_type}\n\t\t\t\t>\n\t\t\t\t\t<MenuItem value=\"\">Unknown</MenuItem>\n\t\t\t\t\t<MenuItem value=\"deciduous\">Deciduous</MenuItem>\n\t\t\t\t\t<MenuItem value=\"evergreen\">Evergreen</MenuItem>\n\t\t\t\t</TextField>\n\t\t\t\t<Grid item container>\n\t\t\t\t\t<TextField\n\t\t\t\t\t\tid=\"geolocation_lat\"\n\t\t\t\t\t\tname=\"geolocation_lat\"\n\t\t\t\t\t\tlabel=\"Latitude\"\n\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\tinputProps={{ step: 'any', min: -90, max: 90 }}\n\t\t\t\t\t\tInputLabelProps={{ shrink: true }}\n\t\t\t\t\t\tplaceholder=\"-90 to 90 (eg. 48.10045)\"\n\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\tvalue={formData.geolocation_lat}\n\t\t\t\t\t\trequired\n\t\t\t\t\t/>\n\t\t\t\t\t<TextField\n\t\t\t\t\t\tid=\"geolocation_lng\"\n\t\t\t\t\t\tname=\"geolocation_lng\"\n\t\t\t\t\t\tlabel=\"Longitude\"\n\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\tinputProps={{ step: 'any', min: -180, max: 180 }}\n\t\t\t\t\t\tInputLabelProps={{ shrink: true }}\n\t\t\t\t\t\tplaceholder=\"-180 to 180 (eg. -123.45316)\"\n\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\tvalue={formData.geolocation_lng}\n\t\t\t\t\t\trequired\n\t\t\t\t\t/>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\tonClick={toggleSelectMap}\n\t\t\t\t\t\tref={mapToggleRef}\n\t\t\t\t\t>\n\t\t\t\t\t\t{selectMapBtn()}\n\t\t\t\t\t</Button>\n\t\t\t\t\t{displaySelectMap()}\n\t\t\t\t</Grid>\n\t\t\t\t<ImagesInput handleImagesInput={handleImagesInput} />\n\t\t\t\t<Button type=\"submit\">Create Tree</Button>\n\t\t\t</form>\n\t\t</Grid>\n\t);\n}\nexport default TreeForm;\n","/home/justin/Documents/Springboard/SECT/Capstone_tree_markable/client/src/styles/formStyle.js",[],"/home/justin/Documents/Springboard/SECT/Capstone_tree_markable/client/src/TreeMarkableApi.js",[],"/home/justin/Documents/Springboard/SECT/Capstone_tree_markable/client/src/SelectLocationMap.js",["131","132"],"import React, { useState } from 'react';\n\nimport {\n\tMapContainer,\n\tuseMap,\n\tuseMapEvents,\n\tMarker,\n\tPopup,\n\tTileLayer\n} from 'react-leaflet';\n\nimport {\n\tGeoSearchControl,\n\tOpenStreetMapProvider\n} from 'leaflet-geosearch';\nimport 'leaflet-geosearch/dist/geosearch.css';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst useStyles = makeStyles({\n\tmapContainer : {\n\t\twidth  : '90%',\n\t\theight : '90vh'\n\t}\n});\n\n// Set up search provider for Leaflet map\nconst searchControl = new GeoSearchControl({\n\tposition : 'topright',\n\tprovider : new OpenStreetMapProvider()\n});\n\nfunction SelectLocationMap({ setLocation }) {\n\tconst [ clickCoords, setClickCoords ] = useState([\n\t\t48.1181,\n\t\t-123.4307\n\t]);\n\n\tconst classes = useStyles();\n\n\tconst GetClickCoordinates = () => {\n\t\tconst [ position, setPosition ] = useState(null);\n\t\tconst map = useMapEvents({\n\t\t\tclick(evt) {\n\t\t\t\tsetClickCoords([ evt.latlng.lat, evt.latlng.lng ]);\n\t\t\t\tsetLocation({\n\t\t\t\t\tlat : evt.latlng.lat,\n\t\t\t\t\tlng : evt.latlng.lng\n\t\t\t\t});\n\t\t\t\tconsole.log('EVENT', evt.latlng);\n\t\t\t}\n\t\t});\n\n\t\treturn position === null ? null : (\n\t\t\t<Marker position={position}>\n\t\t\t\t<Popup>You are here</Popup>\n\t\t\t</Marker>\n\t\t);\n\t};\n\n\tconst CenterOnUser = () => {\n\t\tconst map = useMap();\n\t\tmap.locate({ setView: true });\n\n\t\tconsole.log('Mapcenter:', map.getCenter());\n\n\t\treturn null;\n\t};\n\n\tconst SearchComponent = () => {\n\t\tconst map = useMap();\n\t\tmap.addControl(searchControl);\n\t\treturn null;\n\t};\n\n\tconst loadingPlaceholder = <CircularProgress />;\n\n\treturn (\n\t\t<MapContainer\n\t\t\tclassName={classes.mapContainer}\n\t\t\tplaceholder={loadingPlaceholder}\n\t\t\tcenter={[ 48.09933034129291, -123.42563836030864 ]}\n\t\t\tzoom={13}\n\t\t>\n\t\t\t<TileLayer\n\t\t\t\turl=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n\t\t\t\tattribution=\"&copy; <a href=&quot;http://osm.org/copyright&quot;>OpenStreetMap</a> contributors\"\n\t\t\t/>\n\t\t\t<Marker position={clickCoords}>\n\t\t\t\t<Popup>{clickCoords}</Popup>\n\t\t\t</Marker>\n\t\t\t<GetClickCoordinates />\n\t\t\t<SearchComponent />\n\t\t\t<CenterOnUser />\n\t\t</MapContainer>\n\t);\n}\nexport default SelectLocationMap;\n","/home/justin/Documents/Springboard/SECT/Capstone_tree_markable/client/src/ShowTreesMap.js",["133","134","135","136","137","138","139","140","141","142","143","144"],"import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport {\n\tMapContainer,\n\tuseMap,\n\tuseMapEvents,\n\tMarker,\n\tPopup,\n\tTileLayer\n} from 'react-leaflet';\n\nimport {\n\tGeoSearchControl,\n\tOpenStreetMapProvider\n} from 'leaflet-geosearch';\nimport 'leaflet-geosearch/dist/geosearch.css';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport TreeMarkableApi from './TreeMarkableApi';\nimport { getTreeFromApi, getTreesFromApi } from './actions/trees';\nimport { signInAnonUser } from './actions/auth';\nimport { resetAll } from './actions/reset';\n\nconst useStyles = makeStyles({\n\tmapContainer : {\n\t\twidth  : '90%',\n\t\theight : '90vh'\n\t}\n});\n\n// Set up search provider for Leaflet map\nconst searchControl = new GeoSearchControl({\n\tposition : 'topright',\n\tprovider : new OpenStreetMapProvider()\n});\n\nfunction ShowTreesMap() {\n\tconst classes = useStyles();\n\tconst [ treeMarkers, setTreeMarkers ] = useState([]);\n\tconst [ searchParams, setSearchParams ] = useState([]);\n\tlet userUid = useSelector((st) => st.auth.uid);\n\tconst [ isLoading, setIsLoading ] = useState(true);\n\n\tconst dispatch = useDispatch();\n\n\tuseEffect(\n\t\t() => {\n\t\t\tif (isLoading) {\n\t\t\t\tdispatch(getTreesFromApi());\n\t\t\t\tsetIsLoading(false);\n\t\t\t}\n\t\t},\n\t\t[ isLoading, dispatch ]\n\t);\n\n\tlet trees = useSelector((st) =>\n\t\tObject.values(st.trees).map((tree) => tree)\n\t);\n\tconsole.log('TREEESSSSS', trees);\n\tconst CenterOnUser = () => {\n\t\tconst map = useMap();\n\t\tmap.locate({ setView: true });\n\t\treturn null;\n\t};\n\n\tconst SearchComponent = () => {\n\t\tconst map = useMap();\n\t\tmap.addControl(searchControl);\n\t\treturn null;\n\t};\n\n\tconst createMarkers = (items) => {\n\t\treturn items.map((item) => {\n\t\t\t<Marker\n\t\t\t\tkey={`marker-${item.id}`}\n\t\t\t\tposition={[ item.geolocation.y, item.geolocation.y ]}\n\t\t\t>\n\t\t\t\t<Popup>{item.name}</Popup>\n\t\t\t</Marker>;\n\t\t});\n\t};\n\n\tif (isLoading) {\n\t\treturn (\n\t\t\t<div\n\t\t\t\tstyle={{\n\t\t\t\t\tdisplay        : 'flex',\n\t\t\t\t\tjustifyContent : 'center',\n\t\t\t\t\tmarginTop      : 80\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<CircularProgress style={{ color: 'black' }} size={120} />\n\t\t\t</div>\n\t\t);\n\t}\n\n\tconst loadingPlaceholder = <CircularProgress />;\n\n\treturn (\n\t\t<MapContainer\n\t\t\tclassName={classes.mapContainer}\n\t\t\tplaceholder={loadingPlaceholder}\n\t\t\tcenter={[ 48.09933034129291, -123.42563836030864 ]}\n\t\t\tzoom={13}\n\t\t>\n\t\t\t<TileLayer\n\t\t\t\turl=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n\t\t\t\tattribution=\"&copy; <a href=&quot;http://osm.org/copyright&quot;>OpenStreetMap</a> contributors\"\n\t\t\t/>\n\t\t\t<SearchComponent />\n\t\t\t<CenterOnUser />\n\t\t\t{trees.map((tree) => (\n\t\t\t\t<Marker\n\t\t\t\t\tkey={`marker-${tree.id}`}\n\t\t\t\t\tposition={[ tree.geolocation.y, tree.geolocation.x ]}\n\t\t\t\t>\n\t\t\t\t\t<Popup>{tree.name}</Popup>\n\t\t\t\t</Marker>\n\t\t\t))}\n\t\t</MapContainer>\n\t);\n}\nexport default ShowTreesMap;\n","/home/justin/Documents/Springboard/SECT/Capstone_tree_markable/client/src/store.js",[],"/home/justin/Documents/Springboard/SECT/Capstone_tree_markable/client/src/reducers/root.js",[],"/home/justin/Documents/Springboard/SECT/Capstone_tree_markable/client/src/reducers/trees.js",[],"/home/justin/Documents/Springboard/SECT/Capstone_tree_markable/client/src/actions/types.js",[],"/home/justin/Documents/Springboard/SECT/Capstone_tree_markable/client/src/actions/trees.js",[],"/home/justin/Documents/Springboard/SECT/Capstone_tree_markable/client/src/actions/reset.js",[],"/home/justin/Documents/Springboard/SECT/Capstone_tree_markable/client/src/reducers/auth.js",[],"/home/justin/Documents/Springboard/SECT/Capstone_tree_markable/client/src/actions/auth.js",[],"/home/justin/Documents/Springboard/SECT/Capstone_tree_markable/client/src/SignIn.js",["145"],"import React, { useState } from 'react';\nimport { signInUser } from './actions/auth';\nimport { useDispatch } from 'react-redux';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles({});\n\nfunction SignIn() {\n\tconst classes = useStyles();\n\tconst INITIAL_FORM_DATA = {\n\t\temail    : '',\n\t\tpassword : ''\n\t};\n\tconst [ formData, setFormData ] = useState(INITIAL_FORM_DATA);\n\tconst dispatch = useDispatch();\n\n\tconst handleChange = (evt) => {\n\t\tconst { name, value } = evt.target;\n\n\t\tsetFormData((fData) => ({\n\t\t\t...fData,\n\t\t\t[name] : value\n\t\t}));\n\t};\n\n\tconst handleSubmit = (evt) => {\n\t\tevt.preventDefault();\n\t\tconsole.log('SignIn submit');\n\t\tdispatch(signInUser(formData));\n\t\tconsole.log('SignIn submit post');\n\t};\n\treturn (\n\t\t<Grid container className=\"SignIn\">\n\t\t\tSignIn Page\n\t\t\t<form onSubmit={handleSubmit}>\n\t\t\t\t<TextField\n\t\t\t\t\tid=\"email\"\n\t\t\t\t\tname=\"email\"\n\t\t\t\t\tlabel=\"Email\"\n\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\tvalue={formData.email}\n\t\t\t\t\tautoComplete=\"email\"\n\t\t\t\t/>\n\t\t\t\t<TextField\n\t\t\t\t\tid=\"password\"\n\t\t\t\t\tname=\"password\"\n\t\t\t\t\tlabel=\"Password\"\n\t\t\t\t\ttype=\"password\"\n\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\tvalue={formData.password}\n\t\t\t\t\tautoComplete=\"password\"\n\t\t\t\t/>\n\t\t\t\t<Button type=\"submit\">SignIn</Button>\n\t\t\t</form>\n\t\t</Grid>\n\t);\n}\nexport default SignIn;\n","/home/justin/Documents/Springboard/SECT/Capstone_tree_markable/client/src/UploadImagesToFirebase.js",["146","147","148","149","150","151","152","153"],"import React, { useState } from 'react';\nimport { storageRef } from './firebase/firebaseStorage';\nimport { useSelector } from 'react-redux';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Input from '@material-ui/core/Input';\nimport Button from '@material-ui/core/Button';\nimport Box from '@material-ui/core/Box';\n\nconst useStyles = makeStyles({});\n\nfunction UploadImagesToFirebase({ collectionRef }) {\n\tconst classes = useStyles();\n\tconst INITIAL_FORM_DATA = {};\n\tconst [ formData, setFormData ] = useState(INITIAL_FORM_DATA);\n\tconst [ imgSrc, setImgSrc ] = useState('');\n\tconst uid = useSelector((st) => st.auth.uid);\n\n\tconst handleChange = (evt) => {\n\t\tconsole.log(evt.target.files);\n\n\t\t[ ...evt.target.files ].forEach((file, idx) => {\n\t\t\tconst imageRef = collectionRef.child(`${uid}/`);\n\t\t\tif (idx === 0) {\n\t\t\t}\n\t\t\telse {\n\t\t\t\tconsole.log(file);\n\t\t\t}\n\t\t});\n\n\t\tconst fileRef = collectionRef.child(``);\n\n\t\tconst file = evt.target.files.item(0);\n\t\tconst imagesRef = storageRef.child(`images/${file.name}`);\n\n\t\timagesRef.put(file).then(function(snapshot) {\n\t\t\tconsole.log('Uploaded');\n\t\t});\n\n\t\tconsole.log(file);\n\t};\n\n\tconst handleSubmit = (evt) => {\n\t\tevt.preventDefault();\n\t};\n\tconst handleDownload = (evt) => {\n\t\tevt.preventDefault();\n\t\tstorageRef\n\t\t\t.child('images/tree-of-life-3.jpg')\n\t\t\t.getDownloadURL()\n\t\t\t.then(function(url) {\n\t\t\t\tconsole.log(url);\n\n\t\t\t\tsetImgSrc(url);\n\t\t\t})\n\t\t\t.catch(function(error) {\n\t\t\t\tswitch (error.code) {\n\t\t\t\t\tcase 'storage/object-not-found':\n\t\t\t\t\t\t// File doesn't exist\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'storage/unauthorized':\n\t\t\t\t\t\t// User doesn't have permission to access the object\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'storage/canceled':\n\t\t\t\t\t\t// User canceled the upload\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'storage/unknown':\n\t\t\t\t\t\t// Unknown error occurred, inspect the server response\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t});\n\t};\n\n\treturn (\n\t\t<Grid container className=\"Signup\">\n\t\t\tUploadImagesToFirebase File\n\t\t\t<Input\n\t\t\t\taccept=\"image/*\"\n\t\t\t\tstyle={{ display: 'none' }}\n\t\t\t\tid=\"file-upload\"\n\t\t\t\ttype=\"file\"\n\t\t\t\tinputProps={{ multiple: true }}\n\t\t\t\tonChange={handleChange}\n\t\t\t/>\n\t\t\t<Button htmlFor=\"file-upload\" component=\"label\">\n\t\t\t\tChoose File\n\t\t\t</Button>\n\t\t\t<Button onClick={handleDownload}>Download </Button>\n\t\t\t<Box\n\t\t\t\tstyle={{\n\t\t\t\t\twidth  : '100vw',\n\t\t\t\t\theight : '100vh',\n\t\t\t\t\tborder : '1px solid red'\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\tImage\n\t\t\t\t<img\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\twidth  : '100vw',\n\t\t\t\t\t\theight : '100vh',\n\t\t\t\t\t\tborder : '1px solid red'\n\t\t\t\t\t}}\n\t\t\t\t\tsrc={imgSrc}\n\t\t\t\t/>\n\t\t\t\t);\n\t\t\t</Box>\n\t\t</Grid>\n\t);\n}\nexport default UploadImagesToFirebase;\n","/home/justin/Documents/Springboard/SECT/Capstone_tree_markable/client/src/ImagesInput.js",["154","155","156","157","158"],"/home/justin/Documents/Springboard/SECT/Capstone_tree_markable/client/src/TreeList.js",["159","160","161","162","163","164","165","166","167","168","169","170","171","172","173","174"],"import React, { useState, useRef, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Button from '@material-ui/core/Button';\nimport useStyles from './styles/formStyle';\n\nimport { getTreesFromApi } from './actions/trees';\nimport SelectLocationMap from './SelectLocationMap';\nimport {\n\ttreesRef,\n\tuploadImagesToFirebase\n} from './firebase/firebaseStorage';\nimport ImagesInput from './ImagesInput';\n\n// const useStyles = makeStyles((theme) => ({\n// \troot : {\n// \t\twidth           : '100%',\n// \t\tmaxWidth        : 360,\n// \t\tbackgroundColor : theme.palette.background.paper\n// \t}\n// }));\n\nfunction ListItemLink(props) {\n\treturn <ListItem button component=\"a\" {...props} />;\n}\n\nfunction TreeList() {\n\tconst classes = useStyles();\n\tconst [ treeMarkers, setTreeMarkers ] = useState([]);\n\tconst [ searchParams, setSearchParams ] = useState([]);\n\tlet userUid = useSelector((st) => st.auth.uid);\n\tconst [ isLoading, setIsLoading ] = useState(true);\n\n\tconst dispatch = useDispatch();\n\n\tuseEffect(\n\t\t() => {\n\t\t\tif (isLoading) {\n\t\t\t\tdispatch(getTreesFromApi());\n\t\t\t\tsetIsLoading(false);\n\t\t\t}\n\t\t},\n\t\t[ isLoading, dispatch ]\n\t);\n\n\tlet trees = useSelector((st) =>\n\t\tObject.values(st.trees).map((tree) => tree)\n\t);\n\n\tif (isLoading) {\n\t\treturn <div>Loading</div>;\n\t}\n\n\treturn (\n\t\t<div className={classes.root}>\n\t\t\tTEST\n\t\t\t<List component=\"nav\" aria-label=\"trees list\">\n\t\t\t\t<ListItem button>\n\t\t\t\t\t<ListItemText primary=\"test\" />\n\t\t\t\t</ListItem>\n\t\t\t\t{trees.map((tree) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<ListItemLink\n\t\t\t\t\t\t\tkey={tree.id}\n\t\t\t\t\t\t\thref={`trees/${tree.id}`}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<ListItemText primary={tree.name} />\n\t\t\t\t\t\t</ListItemLink>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</List>\n\t\t</div>\n\t);\n}\nexport default TreeList;\n","/home/justin/Documents/Springboard/SECT/Capstone_tree_markable/client/src/TreePage.js",["175","176","177","178","179","180","181","182","183","184","185","186","187","188","189","190"],"import React, { useState, useRef, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useParams } from 'react-router-dom';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Button from '@material-ui/core/Button';\nimport useStyles from './styles/formStyle';\n\nimport { getTreesFromApi } from './actions/trees';\nimport SelectLocationMap from './SelectLocationMap';\nimport ImagesInput from './ImagesInput';\nimport {\n\ttreesRef,\n\tdownloadImageUrlsFromFirebase\n} from './firebase/firebaseStorage';\n\nfunction TreePage() {\n\tconst classes = useStyles();\n\tconst { id } = useParams();\n\n\tconst [ isLoading, setIsLoading ] = useState(true);\n\tconst [ imageUrls, setImageUrls ] = useState({\n\t\tprimary : '',\n\t\talbum   : []\n\t});\n\n\tconst dispatch = useDispatch();\n\n\tuseEffect(\n\t\t() => {\n\t\t\tconst getImageUrls = async (collectionRef, id) => {\n\t\t\t\tconst imgUrls = await downloadImageUrlsFromFirebase(\n\t\t\t\t\tcollectionRef,\n\t\t\t\t\tid\n\t\t\t\t);\n\t\t\t\tsetImageUrls((imageUrls) => imgUrls);\n\t\t\t\tsetIsLoading(false);\n\t\t\t};\n\n\t\t\tif (isLoading) {\n\t\t\t\tgetImageUrls(treesRef, id);\n\t\t\t}\n\t\t},\n\t\t[ isLoading, dispatch ]\n\t);\n\n\tif (isLoading) {\n\t\treturn <div>Loading</div>;\n\t}\n\n\treturn (\n\t\t<div className={classes.root}>\n\t\t\tTree Images\n\t\t\t{imageUrls.album.map((imageUrl, idx) => (\n\t\t\t\t<img key={`album-${idx}`} src={imageUrl} />\n\t\t\t))}\n\t\t</div>\n\t);\n}\nexport default TreePage;\n",{"ruleId":"191","replacedBy":"192"},{"ruleId":"193","replacedBy":"194"},{"ruleId":"195","severity":1,"message":"196","line":1,"column":17,"nodeType":"197","messageId":"198","endLine":1,"endColumn":25},{"ruleId":"195","severity":1,"message":"199","line":8,"column":8,"nodeType":"197","messageId":"198","endLine":8,"endColumn":17},{"ruleId":"195","severity":1,"message":"200","line":14,"column":8,"nodeType":"197","messageId":"198","endLine":14,"endColumn":15},{"ruleId":"195","severity":1,"message":"200","line":14,"column":8,"nodeType":"197","messageId":"198","endLine":14,"endColumn":15},{"ruleId":"195","severity":1,"message":"201","line":3,"column":10,"nodeType":"197","messageId":"198","endLine":3,"endColumn":20},{"ruleId":"195","severity":1,"message":"202","line":43,"column":21,"nodeType":"197","messageId":"198","endLine":43,"endColumn":32},{"ruleId":"195","severity":1,"message":"203","line":44,"column":9,"nodeType":"197","messageId":"198","endLine":44,"endColumn":12},{"ruleId":"195","severity":1,"message":"204","line":7,"column":2,"nodeType":"197","messageId":"198","endLine":7,"endColumn":14},{"ruleId":"195","severity":1,"message":"205","line":21,"column":8,"nodeType":"197","messageId":"198","endLine":21,"endColumn":23},{"ruleId":"195","severity":1,"message":"206","line":22,"column":10,"nodeType":"197","messageId":"198","endLine":22,"endColumn":24},{"ruleId":"195","severity":1,"message":"207","line":23,"column":10,"nodeType":"197","messageId":"198","endLine":23,"endColumn":24},{"ruleId":"195","severity":1,"message":"208","line":24,"column":10,"nodeType":"197","messageId":"198","endLine":24,"endColumn":18},{"ruleId":"195","severity":1,"message":"209","line":41,"column":10,"nodeType":"197","messageId":"198","endLine":41,"endColumn":21},{"ruleId":"195","severity":1,"message":"210","line":41,"column":23,"nodeType":"197","messageId":"198","endLine":41,"endColumn":37},{"ruleId":"195","severity":1,"message":"211","line":42,"column":10,"nodeType":"197","messageId":"198","endLine":42,"endColumn":22},{"ruleId":"195","severity":1,"message":"212","line":42,"column":24,"nodeType":"197","messageId":"198","endLine":42,"endColumn":39},{"ruleId":"195","severity":1,"message":"213","line":43,"column":6,"nodeType":"197","messageId":"198","endLine":43,"endColumn":13},{"ruleId":"195","severity":1,"message":"214","line":74,"column":8,"nodeType":"197","messageId":"198","endLine":74,"endColumn":21},{"ruleId":"215","severity":1,"message":"216","line":75,"column":27,"nodeType":"217","messageId":"218","endLine":75,"endColumn":29},{"ruleId":"195","severity":1,"message":"200","line":13,"column":8,"nodeType":"197","messageId":"198","endLine":13,"endColumn":15},{"ruleId":"195","severity":1,"message":"200","line":14,"column":8,"nodeType":"197","messageId":"198","endLine":14,"endColumn":15},{"ruleId":"195","severity":1,"message":"219","line":16,"column":10,"nodeType":"197","messageId":"198","endLine":16,"endColumn":18},{"ruleId":"195","severity":1,"message":"220","line":16,"column":20,"nodeType":"197","messageId":"198","endLine":16,"endColumn":31},{"ruleId":"195","severity":1,"message":"221","line":24,"column":10,"nodeType":"197","messageId":"198","endLine":24,"endColumn":18},{"ruleId":"195","severity":1,"message":"222","line":32,"column":9,"nodeType":"197","messageId":"198","endLine":32,"endColumn":16},{"ruleId":"195","severity":1,"message":"223","line":44,"column":8,"nodeType":"197","messageId":"198","endLine":44,"endColumn":20},{"ruleId":"224","severity":1,"message":"225","line":58,"column":5,"nodeType":"226","messageId":"227","endLine":74,"endColumn":6},{"ruleId":"228","severity":1,"message":"229","line":101,"column":5,"nodeType":"230","endLine":108,"endColumn":7},{"ruleId":"195","severity":1,"message":"231","line":2,"column":10,"nodeType":"197","messageId":"198","endLine":2,"endColumn":20},{"ruleId":"195","severity":1,"message":"232","line":3,"column":10,"nodeType":"197","messageId":"198","endLine":3,"endColumn":21},{"ruleId":"195","severity":1,"message":"201","line":5,"column":10,"nodeType":"197","messageId":"198","endLine":5,"endColumn":20},{"ruleId":"195","severity":1,"message":"233","line":9,"column":8,"nodeType":"197","messageId":"198","endLine":9,"endColumn":11},{"ruleId":"228","severity":1,"message":"229","line":69,"column":6,"nodeType":"230","endLine":73,"endColumn":8},{"ruleId":"195","severity":1,"message":"234","line":1,"column":27,"nodeType":"197","messageId":"198","endLine":1,"endColumn":33},{"ruleId":"195","severity":1,"message":"201","line":4,"column":10,"nodeType":"197","messageId":"198","endLine":4,"endColumn":20},{"ruleId":"195","severity":1,"message":"235","line":5,"column":8,"nodeType":"197","messageId":"198","endLine":5,"endColumn":12},{"ruleId":"195","severity":1,"message":"236","line":6,"column":8,"nodeType":"197","messageId":"198","endLine":6,"endColumn":18},{"ruleId":"195","severity":1,"message":"199","line":7,"column":8,"nodeType":"197","messageId":"198","endLine":7,"endColumn":17},{"ruleId":"195","severity":1,"message":"237","line":10,"column":8,"nodeType":"197","messageId":"198","endLine":10,"endColumn":20},{"ruleId":"195","severity":1,"message":"238","line":12,"column":8,"nodeType":"197","messageId":"198","endLine":12,"endColumn":14},{"ruleId":"195","severity":1,"message":"239","line":16,"column":8,"nodeType":"197","messageId":"198","endLine":16,"endColumn":25},{"ruleId":"195","severity":1,"message":"240","line":18,"column":2,"nodeType":"197","messageId":"198","endLine":18,"endColumn":10},{"ruleId":"195","severity":1,"message":"241","line":19,"column":2,"nodeType":"197","messageId":"198","endLine":19,"endColumn":24},{"ruleId":"195","severity":1,"message":"242","line":21,"column":8,"nodeType":"197","messageId":"198","endLine":21,"endColumn":19},{"ruleId":"195","severity":1,"message":"209","line":37,"column":10,"nodeType":"197","messageId":"198","endLine":37,"endColumn":21},{"ruleId":"195","severity":1,"message":"210","line":37,"column":23,"nodeType":"197","messageId":"198","endLine":37,"endColumn":37},{"ruleId":"195","severity":1,"message":"211","line":38,"column":10,"nodeType":"197","messageId":"198","endLine":38,"endColumn":22},{"ruleId":"195","severity":1,"message":"212","line":38,"column":24,"nodeType":"197","messageId":"198","endLine":38,"endColumn":39},{"ruleId":"195","severity":1,"message":"213","line":39,"column":6,"nodeType":"197","messageId":"198","endLine":39,"endColumn":13},{"ruleId":"195","severity":1,"message":"234","line":1,"column":27,"nodeType":"197","messageId":"198","endLine":1,"endColumn":33},{"ruleId":"195","severity":1,"message":"232","line":2,"column":10,"nodeType":"197","messageId":"198","endLine":2,"endColumn":21},{"ruleId":"195","severity":1,"message":"201","line":5,"column":10,"nodeType":"197","messageId":"198","endLine":5,"endColumn":20},{"ruleId":"195","severity":1,"message":"235","line":6,"column":8,"nodeType":"197","messageId":"198","endLine":6,"endColumn":12},{"ruleId":"195","severity":1,"message":"236","line":7,"column":8,"nodeType":"197","messageId":"198","endLine":7,"endColumn":18},{"ruleId":"195","severity":1,"message":"199","line":8,"column":8,"nodeType":"197","messageId":"198","endLine":8,"endColumn":17},{"ruleId":"195","severity":1,"message":"243","line":9,"column":8,"nodeType":"197","messageId":"198","endLine":9,"endColumn":12},{"ruleId":"195","severity":1,"message":"244","line":10,"column":8,"nodeType":"197","messageId":"198","endLine":10,"endColumn":16},{"ruleId":"195","severity":1,"message":"237","line":11,"column":8,"nodeType":"197","messageId":"198","endLine":11,"endColumn":20},{"ruleId":"195","severity":1,"message":"245","line":12,"column":8,"nodeType":"197","messageId":"198","endLine":12,"endColumn":20},{"ruleId":"195","severity":1,"message":"238","line":13,"column":8,"nodeType":"197","messageId":"198","endLine":13,"endColumn":14},{"ruleId":"195","severity":1,"message":"246","line":16,"column":10,"nodeType":"197","messageId":"198","endLine":16,"endColumn":25},{"ruleId":"195","severity":1,"message":"239","line":17,"column":8,"nodeType":"197","messageId":"198","endLine":17,"endColumn":25},{"ruleId":"195","severity":1,"message":"242","line":18,"column":8,"nodeType":"197","messageId":"198","endLine":18,"endColumn":19},{"ruleId":"247","severity":1,"message":"248","line":51,"column":3,"nodeType":"249","endLine":51,"endColumn":26,"suggestions":"250"},{"ruleId":"228","severity":1,"message":"229","line":62,"column":5,"nodeType":"230","endLine":62,"endColumn":48},"no-native-reassign",["251"],"no-negated-in-lhs",["252"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'TextField' is defined but never used.","'classes' is assigned a value but never used.","'makeStyles' is defined but never used.","'setPosition' is assigned a value but never used.","'map' is assigned a value but never used.","'useMapEvents' is defined but never used.","'TreeMarkableApi' is defined but never used.","'getTreeFromApi' is defined but never used.","'signInAnonUser' is defined but never used.","'resetAll' is defined but never used.","'treeMarkers' is assigned a value but never used.","'setTreeMarkers' is assigned a value but never used.","'searchParams' is assigned a value but never used.","'setSearchParams' is assigned a value but never used.","'userUid' is assigned a value but never used.","'createMarkers' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'formData' is assigned a value but never used.","'setFormData' is assigned a value but never used.","'imageRef' is assigned a value but never used.","'fileRef' is assigned a value but never used.","'handleSubmit' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'storageRef' is defined but never used.","'useSelector' is defined but never used.","'Box' is defined but never used.","'useRef' is defined but never used.","'Grid' is defined but never used.","'Typography' is defined but never used.","'ListItemIcon' is defined but never used.","'Button' is defined but never used.","'SelectLocationMap' is defined but never used.","'treesRef' is defined but never used.","'uploadImagesToFirebase' is defined but never used.","'ImagesInput' is defined but never used.","'List' is defined but never used.","'ListItem' is defined but never used.","'ListItemText' is defined but never used.","'getTreesFromApi' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["253"],"no-global-assign","no-unsafe-negation",{"desc":"254","fix":"255"},"Update the dependencies array to be: [isLoading, dispatch, id]",{"range":"256","text":"257"},[1468,1491],"[isLoading, dispatch, id]"]