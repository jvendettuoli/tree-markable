[{"/home/justin/Documents/Springboard/SECT/Capstone_tree_markable/client/src/index.js":"1","/home/justin/Documents/Springboard/SECT/Capstone_tree_markable/client/src/App.js":"2","/home/justin/Documents/Springboard/SECT/Capstone_tree_markable/client/src/Routes.js":"3","/home/justin/Documents/Springboard/SECT/Capstone_tree_markable/client/src/Home.js":"4","/home/justin/Documents/Springboard/SECT/Capstone_tree_markable/client/src/firebase/firebaseIndex.js":"5","/home/justin/Documents/Springboard/SECT/Capstone_tree_markable/client/src/firebase/firebaseAuth.js":"6","/home/justin/Documents/Springboard/SECT/Capstone_tree_markable/client/src/SignOut.js":"7","/home/justin/Documents/Springboard/SECT/Capstone_tree_markable/client/src/firebase/firebaseStorage.js":"8","/home/justin/Documents/Springboard/SECT/Capstone_tree_markable/client/src/SignUp.js":"9","/home/justin/Documents/Springboard/SECT/Capstone_tree_markable/client/src/styles/formStyle.js":"10","/home/justin/Documents/Springboard/SECT/Capstone_tree_markable/client/src/TreeMarkableApi.js":"11","/home/justin/Documents/Springboard/SECT/Capstone_tree_markable/client/src/SelectLocationMap.js":"12","/home/justin/Documents/Springboard/SECT/Capstone_tree_markable/client/src/ShowTreesMap.js":"13","/home/justin/Documents/Springboard/SECT/Capstone_tree_markable/client/src/store.js":"14","/home/justin/Documents/Springboard/SECT/Capstone_tree_markable/client/src/reducers/root.js":"15","/home/justin/Documents/Springboard/SECT/Capstone_tree_markable/client/src/reducers/trees.js":"16","/home/justin/Documents/Springboard/SECT/Capstone_tree_markable/client/src/actions/types.js":"17","/home/justin/Documents/Springboard/SECT/Capstone_tree_markable/client/src/actions/trees.js":"18","/home/justin/Documents/Springboard/SECT/Capstone_tree_markable/client/src/actions/reset.js":"19","/home/justin/Documents/Springboard/SECT/Capstone_tree_markable/client/src/reducers/auth.js":"20","/home/justin/Documents/Springboard/SECT/Capstone_tree_markable/client/src/actions/auth.js":"21","/home/justin/Documents/Springboard/SECT/Capstone_tree_markable/client/src/SignIn.js":"22","/home/justin/Documents/Springboard/SECT/Capstone_tree_markable/client/src/UploadImagesToFirebase.js":"23","/home/justin/Documents/Springboard/SECT/Capstone_tree_markable/client/src/ImagesInput.js":"24","/home/justin/Documents/Springboard/SECT/Capstone_tree_markable/client/src/TreeList.js":"25","/home/justin/Documents/Springboard/SECT/Capstone_tree_markable/client/src/TreePage.js":"26","/home/justin/Documents/Springboard/SECT/Capstone_tree_markable/client/src/TreeSearchForm.js":"27","/home/justin/Documents/Springboard/SECT/Capstone_tree_markable/client/src/CreateNewTree.js":"28","/home/justin/Documents/Springboard/SECT/Capstone_tree_markable/client/src/SelectCoordinates.js":"29","/home/justin/Documents/Springboard/SECT/Capstone_tree_markable/client/src/TreeFormBasicFields.js":"30","/home/justin/Documents/Springboard/SECT/Capstone_tree_markable/client/src/styles/navDrawer.js":"31","/home/justin/Documents/Springboard/SECT/Capstone_tree_markable/client/src/styles/leafletMap.js":"32","/home/justin/Documents/Springboard/SECT/Capstone_tree_markable/client/src/Navigation.js":"33","/home/justin/Documents/Springboard/SECT/Capstone_tree_markable/client/src/NavDrawer.js":"34","/home/justin/Documents/Springboard/SECT/Capstone_tree_markable/client/src/NavAppBar.js":"35"},{"size":959,"mtime":1609979816337,"results":"36","hashOfConfig":"37"},{"size":870,"mtime":1610051870456,"results":"38","hashOfConfig":"37"},{"size":992,"mtime":1609979913409,"results":"39","hashOfConfig":"37"},{"size":315,"mtime":1607120269014,"results":"40","hashOfConfig":"37"},{"size":839,"mtime":1609204545378,"results":"41","hashOfConfig":"37"},{"size":973,"mtime":1609372922967,"results":"42","hashOfConfig":"37"},{"size":689,"mtime":1608855045351,"results":"43","hashOfConfig":"37"},{"size":3522,"mtime":1609373581575,"results":"44","hashOfConfig":"37"},{"size":2900,"mtime":1609893642760,"results":"45","hashOfConfig":"37"},{"size":236,"mtime":1609976687745,"results":"46","hashOfConfig":"37"},{"size":3846,"mtime":1609546166731,"results":"47","hashOfConfig":"37"},{"size":2475,"mtime":1609886685841,"results":"48","hashOfConfig":"37"},{"size":2991,"mtime":1609981483817,"results":"49","hashOfConfig":"37"},{"size":815,"mtime":1609203098930,"results":"50","hashOfConfig":"37"},{"size":260,"mtime":1609286371325,"results":"51","hashOfConfig":"37"},{"size":709,"mtime":1609286502977,"results":"52","hashOfConfig":"37"},{"size":316,"mtime":1608841177040,"results":"53","hashOfConfig":"37"},{"size":800,"mtime":1609546134763,"results":"54","hashOfConfig":"37"},{"size":163,"mtime":1608684770631,"results":"55","hashOfConfig":"37"},{"size":1009,"mtime":1610049036108,"results":"56","hashOfConfig":"37"},{"size":2479,"mtime":1610054296172,"results":"57","hashOfConfig":"37"},{"size":1426,"mtime":1608846521659,"results":"58","hashOfConfig":"37"},{"size":2594,"mtime":1609361844163,"results":"59","hashOfConfig":"37"},{"size":1915,"mtime":1609809449072,"results":"60","hashOfConfig":"37"},{"size":2138,"mtime":1609298740969,"results":"61","hashOfConfig":"37"},{"size":1746,"mtime":1609373348511,"results":"62","hashOfConfig":"37"},{"size":3558,"mtime":1609613524915,"results":"63","hashOfConfig":"37"},{"size":3205,"mtime":1609885576253,"results":"64","hashOfConfig":"37"},{"size":3212,"mtime":1609809142868,"results":"65","hashOfConfig":"37"},{"size":2513,"mtime":1609807227416,"results":"66","hashOfConfig":"37"},{"size":1025,"mtime":1610055765360,"results":"67","hashOfConfig":"37"},{"size":214,"mtime":1609981448365,"results":"68","hashOfConfig":"37"},{"size":2745,"mtime":1610055164908,"results":"69","hashOfConfig":"37"},{"size":2981,"mtime":1610051603800,"results":"70","hashOfConfig":"37"},{"size":3311,"mtime":1610056728868,"results":"71","hashOfConfig":"37"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},"1bgogi4",{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"74"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"74"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"74"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"74"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"74"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"74"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"74"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"74"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"74"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"74"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"74"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"74"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"74"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"148","messages":"149","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"74"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"155","messages":"156","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/justin/Documents/Springboard/SECT/Capstone_tree_markable/client/src/index.js",[],["157","158"],"/home/justin/Documents/Springboard/SECT/Capstone_tree_markable/client/src/App.js",["159"],"/home/justin/Documents/Springboard/SECT/Capstone_tree_markable/client/src/Routes.js",[],"/home/justin/Documents/Springboard/SECT/Capstone_tree_markable/client/src/Home.js",[],"/home/justin/Documents/Springboard/SECT/Capstone_tree_markable/client/src/firebase/firebaseIndex.js",[],"/home/justin/Documents/Springboard/SECT/Capstone_tree_markable/client/src/firebase/firebaseAuth.js",[],"/home/justin/Documents/Springboard/SECT/Capstone_tree_markable/client/src/SignOut.js",["160","161","162"],"import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { signOutUser } from './actions/auth';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles({});\n\nfunction Login() {\n\tconst classes = useStyles();\n\tconst dispatch = useDispatch();\n\n\tconst handleClick = (evt) => {\n\t\tdispatch(signOutUser());\n\t};\n\n\treturn (\n\t\t<Grid container className=\"Login\">\n\t\t\tSign Out Page\n\t\t\t<Button type=\"submit\" onClick={handleClick}>\n\t\t\t\tSign Out\n\t\t\t</Button>\n\t\t</Grid>\n\t);\n}\nexport default Login;\n","/home/justin/Documents/Springboard/SECT/Capstone_tree_markable/client/src/firebase/firebaseStorage.js",[],"/home/justin/Documents/Springboard/SECT/Capstone_tree_markable/client/src/SignUp.js",["163"],"import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { signUpUser } from './actions/auth';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\nimport useStyles from './styles/formStyle';\nimport SelectCoordinates from './SelectCoordinates';\n// TODO change geolocation request to use my location\n\nfunction SignUp() {\n\tconst classes = useStyles();\n\tconst dispatch = useDispatch();\n\tconst INITIAL_FORM_DATA = {\n\t\tusername : '',\n\t\temail    : '',\n\t\tpassword : '',\n\t\timg_url  : ''\n\t};\n\tconst [ formData, setFormData ] = useState(INITIAL_FORM_DATA);\n\tconst [ coordinates, setCoordinates ] = useState({ lat: '', lng: '' });\n\n\tconst handleChange = (evt) => {\n\t\tconst { name, value } = evt.target;\n\n\t\tsetFormData((fData) => ({\n\t\t\t...fData,\n\t\t\t[name] : value\n\t\t}));\n\t};\n\n\tconst handleCoordinatesChange = (data) => {\n\t\tconsole.log('handleCoordinatesChange', data);\n\t\tconst { name, value } = data;\n\n\t\tsetCoordinates((fData) => ({\n\t\t\t...fData,\n\t\t\t[name] : value\n\t\t}));\n\t};\n\n\tconst handleMapCoordinatesChange = (coords) => {\n\t\tconsole.log('handleMapCoordinatesChange', coords);\n\n\t\tsetCoordinates(coords);\n\t};\n\n\tconst handleSubmit = (evt) => {\n\t\tevt.preventDefault();\n\t\t// email and password required by Firebase Authentication\n\t\tconst credentials = {\n\t\t\temail    : formData.email,\n\t\t\tpassword : formData.password\n\t\t};\n\t\t// user data required by TreeMarkableApi to create user\n\t\tdelete formData.password;\n\t\tconst userData = {\n\t\t\t...formData,\n\t\t\thome_geolocation : {\n\t\t\t\tlatitude  : coordinates.lat,\n\t\t\t\tlongitude : coordinates.lng\n\t\t\t},\n\t\t\tis_admin         : false\n\t\t};\n\t\tdispatch(signUpUser(credentials, userData));\n\t};\n\n\treturn (\n\t\t<Grid container className=\"Signup\">\n\t\t\tSignup Page\n\t\t\t<form onSubmit={handleSubmit} className={classes.form}>\n\t\t\t\t<TextField\n\t\t\t\t\tid=\"username\"\n\t\t\t\t\tname=\"username\"\n\t\t\t\t\tlabel=\"Username\"\n\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\tvalue={formData.username}\n\t\t\t\t\tautoComplete=\"username\"\n\t\t\t\t/>\n\t\t\t\t<TextField\n\t\t\t\t\tid=\"email\"\n\t\t\t\t\tname=\"email\"\n\t\t\t\t\tlabel=\"Email\"\n\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\tvalue={formData.email}\n\t\t\t\t\tautoComplete=\"email\"\n\t\t\t\t/>\n\t\t\t\t<TextField\n\t\t\t\t\tid=\"password\"\n\t\t\t\t\tname=\"password\"\n\t\t\t\t\tlabel=\"Password\"\n\t\t\t\t\ttype=\"password\"\n\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\tvalue={formData.password}\n\t\t\t\t\tautoComplete=\"password\"\n\t\t\t\t/>\n\t\t\t\t<TextField\n\t\t\t\t\tid=\"img_url\"\n\t\t\t\t\tname=\"img_url\"\n\t\t\t\t\tlabel=\"Profile Image URL\"\n\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\tvalue={formData.img_url}\n\t\t\t\t\tautoComplete=\"img_url\"\n\t\t\t\t/>\n\t\t\t\tSelect Home Location\n\t\t\t\t<SelectCoordinates\n\t\t\t\t\tformData={coordinates}\n\t\t\t\t\tonCoordinatesChange={handleCoordinatesChange}\n\t\t\t\t\tonMapCoordinatesChange={handleMapCoordinatesChange}\n\t\t\t\t/>\n\t\t\t\t<Button type=\"submit\">Signup</Button>\n\t\t\t</form>\n\t\t</Grid>\n\t);\n}\nexport default SignUp;\n","/home/justin/Documents/Springboard/SECT/Capstone_tree_markable/client/src/styles/formStyle.js",[],"/home/justin/Documents/Springboard/SECT/Capstone_tree_markable/client/src/TreeMarkableApi.js",[],"/home/justin/Documents/Springboard/SECT/Capstone_tree_markable/client/src/SelectLocationMap.js",["164"],"import React, { useState } from 'react';\n\nimport {\n\tMapContainer,\n\tuseMap,\n\tuseMapEvents,\n\tMarker,\n\tPopup,\n\tTileLayer\n} from 'react-leaflet';\n\nimport {\n\tGeoSearchControl,\n\tOpenStreetMapProvider\n} from 'leaflet-geosearch';\nimport 'leaflet-geosearch/dist/geosearch.css';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst useStyles = makeStyles({\n\tmapContainer : {\n\t\twidth  : '50%',\n\t\theight : '50vh'\n\t}\n});\n\n// Set up search provider for Leaflet map\nconst searchControl = new GeoSearchControl({\n\tposition   : 'topright',\n\tshowMarker : false,\n\tprovider   : new OpenStreetMapProvider()\n});\n\nfunction SelectLocationMap({\n\tzoomLevel,\n\tsetZoomLevel,\n\tmapCenter,\n\tsetMapCenter,\n\tonMapCoordinatesChange\n}) {\n\tconst classes = useStyles();\n\tconst [ clickCoords, setClickCoords ] = useState(null);\n\n\tconst GetClickCoordinates = () => {\n\t\tconst map = useMapEvents({\n\t\t\tclick(evt) {\n\t\t\t\tsetClickCoords(evt.latlng);\n\n\t\t\t\tonMapCoordinatesChange({\n\t\t\t\t\tlat : evt.latlng.lat,\n\t\t\t\t\tlng : evt.latlng.lng\n\t\t\t\t});\n\t\t\t\tconsole.log('clickCoords', clickCoords);\n\t\t\t}\n\t\t});\n\t\treturn clickCoords === null ? null : (\n\t\t\t<Marker position={clickCoords}>\n\t\t\t\t<Popup>Tree Geolocation: {`${clickCoords}`}</Popup>\n\t\t\t</Marker>\n\t\t);\n\t};\n\tconst UpdateCenterAndZoom = () => {\n\t\tconst map = useMapEvents({\n\t\t\tdragend() {\n\t\t\t\tsetMapCenter(map.getCenter());\n\t\t\t},\n\t\t\tzoomend() {\n\t\t\t\tsetZoomLevel(map.getZoom());\n\t\t\t}\n\t\t});\n\t\treturn null;\n\t};\n\n\tconst CenterOnUser = () => {\n\t\tconst map = useMap();\n\t\tmap.locate({ setView: false });\n\n\t\treturn null;\n\t};\n\n\tconst SearchComponent = () => {\n\t\tconst map = useMap();\n\t\tmap.addControl(searchControl);\n\t\tmap.on('geosearch/showlocation', () => {\n\t\t\tconsole.log('Search End', map.getCenter(), map.getZoom());\n\t\t\tsetMapCenter(map.getCenter());\n\t\t\tsetZoomLevel(map.getZoom());\n\t\t\tconsole.log('map, soom', mapCenter, zoomLevel);\n\t\t});\n\t\treturn null;\n\t};\n\n\tconst loadingPlaceholder = <CircularProgress />;\n\n\treturn (\n\t\t<MapContainer\n\t\t\tclassName={classes.mapContainer}\n\t\t\tplaceholder={loadingPlaceholder}\n\t\t\tcenter={mapCenter}\n\t\t\tzoom={zoomLevel}\n\t\t>\n\t\t\t<TileLayer\n\t\t\t\turl=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n\t\t\t\tattribution=\"&copy; <a href=&quot;http://osm.org/copyright&quot;>OpenStreetMap</a> contributors\"\n\t\t\t/>\n\n\t\t\t<GetClickCoordinates />\n\t\t\t<UpdateCenterAndZoom />\n\t\t\t<SearchComponent />\n\t\t\t<CenterOnUser />\n\t\t</MapContainer>\n\t);\n}\nexport default React.memo(SelectLocationMap);\n","/home/justin/Documents/Springboard/SECT/Capstone_tree_markable/client/src/ShowTreesMap.js",["165","166","167","168","169","170","171","172","173","174","175","176","177"],"import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport {\n\tMapContainer,\n\tuseMap,\n\tuseMapEvents,\n\tMarker,\n\tPopup,\n\tTileLayer\n} from 'react-leaflet';\n\nimport {\n\tGeoSearchControl,\n\tOpenStreetMapProvider\n} from 'leaflet-geosearch';\nimport 'leaflet-geosearch/dist/geosearch.css';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport TreeMarkableApi from './TreeMarkableApi';\nimport { getTreeFromApi, getTreesFromApi } from './actions/trees';\nimport { signInAnonUser } from './actions/auth';\nimport { resetAll } from './actions/reset';\nimport TreeSearchForm from './TreeSearchForm';\nimport useStyles from './styles/leafletMap';\n\n// Set up search provider for Leaflet map\nconst searchControl = new GeoSearchControl({\n\tposition : 'topright',\n\tprovider : new OpenStreetMapProvider()\n});\n\nfunction ShowTreesMap() {\n\tconst classes = useStyles();\n\tconst [ treeMarkers, setTreeMarkers ] = useState([]);\n\tconst [ searchParams, setSearchParams ] = useState([]);\n\tlet userUid = useSelector((st) => st.auth.uid);\n\tconst [ isLoading, setIsLoading ] = useState(true);\n\n\tconst dispatch = useDispatch();\n\n\tuseEffect(\n\t\t() => {\n\t\t\tif (isLoading) {\n\t\t\t\tdispatch(getTreesFromApi());\n\t\t\t\tsetIsLoading(false);\n\t\t\t}\n\t\t},\n\t\t[ isLoading, dispatch ]\n\t);\n\n\tlet trees = useSelector((st) =>\n\t\tObject.values(st.trees).map((tree) => tree)\n\t);\n\tconsole.log('TREEESSSSS', trees);\n\tconst CenterOnUser = () => {\n\t\tconst map = useMap();\n\t\tmap.locate({ setView: true });\n\t\treturn null;\n\t};\n\n\tconst SearchComponent = () => {\n\t\tconst map = useMap();\n\t\tmap.addControl(searchControl);\n\t\treturn null;\n\t};\n\n\tconst createMarkers = (items) => {\n\t\treturn items.map((item) => {\n\t\t\t<Marker\n\t\t\t\tkey={`marker-${item.id}`}\n\t\t\t\tposition={[ item.geolocation.y, item.geolocation.y ]}\n\t\t\t>\n\t\t\t\t<Popup>{item.name}</Popup>\n\t\t\t</Marker>;\n\t\t});\n\t};\n\n\tif (isLoading) {\n\t\treturn (\n\t\t\t<div\n\t\t\t\tstyle={{\n\t\t\t\t\tdisplay        : 'flex',\n\t\t\t\t\tjustifyContent : 'center',\n\t\t\t\t\tmarginTop      : 80\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<CircularProgress style={{ color: 'black' }} size={120} />\n\t\t\t</div>\n\t\t);\n\t}\n\n\tconst loadingPlaceholder = <CircularProgress />;\n\n\treturn (\n\t\t<main className={classes.content}>\n\t\t\t<div className={classes.toolbar} />\n\t\t\t<TreeSearchForm />\n\t\t\t<MapContainer\n\t\t\t\tclassName={classes.mapContainer}\n\t\t\t\tplaceholder={loadingPlaceholder}\n\t\t\t\tcenter={[ 48.09933034129291, -123.42563836030864 ]}\n\t\t\t\tzoom={13}\n\t\t\t>\n\t\t\t\t<TileLayer\n\t\t\t\t\turl=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n\t\t\t\t\tattribution=\"&copy; <a href=&quot;http://osm.org/copyright&quot;>OpenStreetMap</a> contributors\"\n\t\t\t\t/>\n\t\t\t\t<SearchComponent />\n\t\t\t\t<CenterOnUser />\n\t\t\t\t{trees.map((tree) => (\n\t\t\t\t\t<Marker\n\t\t\t\t\t\tkey={`marker-${tree.id}`}\n\t\t\t\t\t\tposition={[\n\t\t\t\t\t\t\ttree.geolocation.y,\n\t\t\t\t\t\t\ttree.geolocation.x\n\t\t\t\t\t\t]}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Popup>{tree.name}</Popup>\n\t\t\t\t\t</Marker>\n\t\t\t\t))}\n\t\t\t</MapContainer>\n\t\t</main>\n\t);\n}\nexport default ShowTreesMap;\n","/home/justin/Documents/Springboard/SECT/Capstone_tree_markable/client/src/store.js",[],"/home/justin/Documents/Springboard/SECT/Capstone_tree_markable/client/src/reducers/root.js",[],"/home/justin/Documents/Springboard/SECT/Capstone_tree_markable/client/src/reducers/trees.js",[],"/home/justin/Documents/Springboard/SECT/Capstone_tree_markable/client/src/actions/types.js",[],"/home/justin/Documents/Springboard/SECT/Capstone_tree_markable/client/src/actions/trees.js",[],"/home/justin/Documents/Springboard/SECT/Capstone_tree_markable/client/src/actions/reset.js",[],"/home/justin/Documents/Springboard/SECT/Capstone_tree_markable/client/src/reducers/auth.js",[],"/home/justin/Documents/Springboard/SECT/Capstone_tree_markable/client/src/actions/auth.js",[],"/home/justin/Documents/Springboard/SECT/Capstone_tree_markable/client/src/SignIn.js",["178"],"import React, { useState } from 'react';\nimport { signInUser } from './actions/auth';\nimport { useDispatch } from 'react-redux';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles({});\n\nfunction SignIn() {\n\tconst classes = useStyles();\n\tconst INITIAL_FORM_DATA = {\n\t\temail    : '',\n\t\tpassword : ''\n\t};\n\tconst [ formData, setFormData ] = useState(INITIAL_FORM_DATA);\n\tconst dispatch = useDispatch();\n\n\tconst handleChange = (evt) => {\n\t\tconst { name, value } = evt.target;\n\n\t\tsetFormData((fData) => ({\n\t\t\t...fData,\n\t\t\t[name] : value\n\t\t}));\n\t};\n\n\tconst handleSubmit = (evt) => {\n\t\tevt.preventDefault();\n\t\tconsole.log('SignIn submit');\n\t\tdispatch(signInUser(formData));\n\t\tconsole.log('SignIn submit post');\n\t};\n\treturn (\n\t\t<Grid container className=\"SignIn\">\n\t\t\tSignIn Page\n\t\t\t<form onSubmit={handleSubmit}>\n\t\t\t\t<TextField\n\t\t\t\t\tid=\"email\"\n\t\t\t\t\tname=\"email\"\n\t\t\t\t\tlabel=\"Email\"\n\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\tvalue={formData.email}\n\t\t\t\t\tautoComplete=\"email\"\n\t\t\t\t/>\n\t\t\t\t<TextField\n\t\t\t\t\tid=\"password\"\n\t\t\t\t\tname=\"password\"\n\t\t\t\t\tlabel=\"Password\"\n\t\t\t\t\ttype=\"password\"\n\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\tvalue={formData.password}\n\t\t\t\t\tautoComplete=\"password\"\n\t\t\t\t/>\n\t\t\t\t<Button type=\"submit\">SignIn</Button>\n\t\t\t</form>\n\t\t</Grid>\n\t);\n}\nexport default SignIn;\n","/home/justin/Documents/Springboard/SECT/Capstone_tree_markable/client/src/UploadImagesToFirebase.js",["179","180","181","182","183","184","185","186"],"import React, { useState } from 'react';\nimport { storageRef } from './firebase/firebaseStorage';\nimport { useSelector } from 'react-redux';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Input from '@material-ui/core/Input';\nimport Button from '@material-ui/core/Button';\nimport Box from '@material-ui/core/Box';\n\nconst useStyles = makeStyles({});\n\nfunction UploadImagesToFirebase({ collectionRef }) {\n\tconst classes = useStyles();\n\tconst INITIAL_FORM_DATA = {};\n\tconst [ formData, setFormData ] = useState(INITIAL_FORM_DATA);\n\tconst [ imgSrc, setImgSrc ] = useState('');\n\tconst uid = useSelector((st) => st.auth.uid);\n\n\tconst handleChange = (evt) => {\n\t\tconsole.log(evt.target.files);\n\n\t\t[ ...evt.target.files ].forEach((file, idx) => {\n\t\t\tconst imageRef = collectionRef.child(`${uid}/`);\n\t\t\tif (idx === 0) {\n\t\t\t}\n\t\t\telse {\n\t\t\t\tconsole.log(file);\n\t\t\t}\n\t\t});\n\n\t\tconst fileRef = collectionRef.child(``);\n\n\t\tconst file = evt.target.files.item(0);\n\t\tconst imagesRef = storageRef.child(`images/${file.name}`);\n\n\t\timagesRef.put(file).then(function(snapshot) {\n\t\t\tconsole.log('Uploaded');\n\t\t});\n\n\t\tconsole.log(file);\n\t};\n\n\tconst handleSubmit = (evt) => {\n\t\tevt.preventDefault();\n\t};\n\tconst handleDownload = (evt) => {\n\t\tevt.preventDefault();\n\t\tstorageRef\n\t\t\t.child('images/tree-of-life-3.jpg')\n\t\t\t.getDownloadURL()\n\t\t\t.then(function(url) {\n\t\t\t\tconsole.log(url);\n\n\t\t\t\tsetImgSrc(url);\n\t\t\t})\n\t\t\t.catch(function(error) {\n\t\t\t\tswitch (error.code) {\n\t\t\t\t\tcase 'storage/object-not-found':\n\t\t\t\t\t\t// File doesn't exist\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'storage/unauthorized':\n\t\t\t\t\t\t// User doesn't have permission to access the object\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'storage/canceled':\n\t\t\t\t\t\t// User canceled the upload\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'storage/unknown':\n\t\t\t\t\t\t// Unknown error occurred, inspect the server response\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t});\n\t};\n\n\treturn (\n\t\t<Grid container className=\"Signup\">\n\t\t\tUploadImagesToFirebase File\n\t\t\t<Input\n\t\t\t\taccept=\"image/*\"\n\t\t\t\tstyle={{ display: 'none' }}\n\t\t\t\tid=\"file-upload\"\n\t\t\t\ttype=\"file\"\n\t\t\t\tinputProps={{ multiple: true }}\n\t\t\t\tonChange={handleChange}\n\t\t\t/>\n\t\t\t<Button htmlFor=\"file-upload\" component=\"label\">\n\t\t\t\tChoose File\n\t\t\t</Button>\n\t\t\t<Button onClick={handleDownload}>Download </Button>\n\t\t\t<Box\n\t\t\t\tstyle={{\n\t\t\t\t\twidth  : '100vw',\n\t\t\t\t\theight : '100vh',\n\t\t\t\t\tborder : '1px solid red'\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\tImage\n\t\t\t\t<img\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\twidth  : '100vw',\n\t\t\t\t\t\theight : '100vh',\n\t\t\t\t\t\tborder : '1px solid red'\n\t\t\t\t\t}}\n\t\t\t\t\tsrc={imgSrc}\n\t\t\t\t/>\n\t\t\t\t);\n\t\t\t</Box>\n\t\t</Grid>\n\t);\n}\nexport default UploadImagesToFirebase;\n","/home/justin/Documents/Springboard/SECT/Capstone_tree_markable/client/src/ImagesInput.js",["187","188","189","190","191"],"import React, { useState } from 'react';\nimport { storageRef } from './firebase/firebaseStorage';\nimport { useSelector } from 'react-redux';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Input from '@material-ui/core/Input';\nimport Button from '@material-ui/core/Button';\nimport Box from '@material-ui/core/Box';\n\nimport useStyles from './styles/formStyle';\n\nfunction ImagesInput({ onImageFilesChange }) {\n\tconst classes = useStyles();\n\tconst [ imageUrls, setImageUrls ] = useState([]);\n\n\tconst readUploadedFileAsDataUrl = (inputFile) => {\n\t\tconst temporaryFileReader = new FileReader();\n\n\t\treturn new Promise((resolve, reject) => {\n\t\t\ttemporaryFileReader.onerror = () => {\n\t\t\t\ttemporaryFileReader.abort();\n\t\t\t\treject(new DOMException('Problem parsing input file.'));\n\t\t\t};\n\n\t\t\ttemporaryFileReader.onload = () => {\n\t\t\t\tresolve(temporaryFileReader.result);\n\t\t\t};\n\t\t\ttemporaryFileReader.readAsDataURL(inputFile);\n\t\t});\n\t};\n\n\tconst generateThumbnails = async (files) => {\n\t\tconsole.log('gneratethumbsfiles', files);\n\t\tlet urls = [];\n\n\t\tfor (let i = 0; i < files.length; i++) {\n\t\t\tconst url = await readUploadedFileAsDataUrl(files[i]);\n\t\t\turls.push(url);\n\t\t}\n\n\t\tsetImageUrls(urls);\n\t};\n\n\tconst handleChange = async (evt) => {\n\t\tconst files = evt.target.files;\n\t\tonImageFilesChange(files);\n\t\tgenerateThumbnails(files);\n\t};\n\n\treturn (\n\t\t<Grid container className=\"ImagesInput\">\n\t\t\tInput Images\n\t\t\t<Input\n\t\t\t\taccept=\"image/*\"\n\t\t\t\tstyle={{ display: 'none' }}\n\t\t\t\tid=\"file-upload\"\n\t\t\t\ttype=\"file\"\n\t\t\t\tinputProps={{ multiple: true }}\n\t\t\t\tonChange={handleChange}\n\t\t\t/>\n\t\t\t<Button htmlFor=\"file-upload\" component=\"label\">\n\t\t\t\tChoose Files\n\t\t\t</Button>\n\t\t\t<Grid item xs={12}>\n\t\t\t\t{imageUrls.map((url) => (\n\t\t\t\t\t<img\n\t\t\t\t\t\tkey={url}\n\t\t\t\t\t\tclassName={classes.imgPreview}\n\t\t\t\t\t\tsrc={url}\n\t\t\t\t\t/>\n\t\t\t\t))}\n\t\t\t</Grid>\n\t\t</Grid>\n\t);\n}\nexport default React.memo(ImagesInput);\n","/home/justin/Documents/Springboard/SECT/Capstone_tree_markable/client/src/TreeList.js",["192","193","194","195","196","197","198","199","200","201","202","203","204","205","206","207"],"import React, { useState, useRef, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Button from '@material-ui/core/Button';\nimport useStyles from './styles/formStyle';\n\nimport { getTreesFromApi } from './actions/trees';\nimport SelectLocationMap from './SelectLocationMap';\nimport {\n\ttreesRef,\n\tuploadImagesToFirebase\n} from './firebase/firebaseStorage';\nimport ImagesInput from './ImagesInput';\n\n// const useStyles = makeStyles((theme) => ({\n// \troot : {\n// \t\twidth           : '100%',\n// \t\tmaxWidth        : 360,\n// \t\tbackgroundColor : theme.palette.background.paper\n// \t}\n// }));\n\nfunction ListItemLink(props) {\n\treturn <ListItem button component=\"a\" {...props} />;\n}\n\nfunction TreeList() {\n\tconst classes = useStyles();\n\tconst [ treeMarkers, setTreeMarkers ] = useState([]);\n\tconst [ searchParams, setSearchParams ] = useState([]);\n\tlet userUid = useSelector((st) => st.auth.uid);\n\tconst [ isLoading, setIsLoading ] = useState(true);\n\n\tconst dispatch = useDispatch();\n\n\tuseEffect(\n\t\t() => {\n\t\t\tif (isLoading) {\n\t\t\t\tdispatch(getTreesFromApi());\n\t\t\t\tsetIsLoading(false);\n\t\t\t}\n\t\t},\n\t\t[ isLoading, dispatch ]\n\t);\n\n\tlet trees = useSelector((st) =>\n\t\tObject.values(st.trees).map((tree) => tree)\n\t);\n\n\tif (isLoading) {\n\t\treturn <div>Loading</div>;\n\t}\n\n\treturn (\n\t\t<div className={classes.root}>\n\t\t\tTEST\n\t\t\t<List component=\"nav\" aria-label=\"trees list\">\n\t\t\t\t<ListItem button>\n\t\t\t\t\t<ListItemText primary=\"test\" />\n\t\t\t\t</ListItem>\n\t\t\t\t{trees.map((tree) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<ListItemLink\n\t\t\t\t\t\t\tkey={tree.id}\n\t\t\t\t\t\t\thref={`trees/${tree.id}`}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<ListItemText primary={tree.name} />\n\t\t\t\t\t\t</ListItemLink>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</List>\n\t\t</div>\n\t);\n}\nexport default TreeList;\n","/home/justin/Documents/Springboard/SECT/Capstone_tree_markable/client/src/TreePage.js",["208","209","210","211","212","213","214","215","216","217","218","219","220","221","222","223"],"import React, { useState, useRef, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useParams } from 'react-router-dom';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Button from '@material-ui/core/Button';\nimport useStyles from './styles/formStyle';\n\nimport { getTreesFromApi } from './actions/trees';\nimport SelectLocationMap from './SelectLocationMap';\nimport ImagesInput from './ImagesInput';\nimport {\n\ttreesRef,\n\tdownloadImageUrlsFromFirebase\n} from './firebase/firebaseStorage';\n\nfunction TreePage() {\n\tconst classes = useStyles();\n\tconst { id } = useParams();\n\n\tconst [ isLoading, setIsLoading ] = useState(true);\n\tconst [ imageUrls, setImageUrls ] = useState({\n\t\tprimary : '',\n\t\talbum   : []\n\t});\n\n\tconst dispatch = useDispatch();\n\n\tuseEffect(\n\t\t() => {\n\t\t\tconst getImageUrls = async (collectionRef, id) => {\n\t\t\t\tconst imgUrls = await downloadImageUrlsFromFirebase(\n\t\t\t\t\tcollectionRef,\n\t\t\t\t\tid\n\t\t\t\t);\n\t\t\t\tsetImageUrls((imageUrls) => imgUrls);\n\t\t\t\tsetIsLoading(false);\n\t\t\t};\n\n\t\t\tif (isLoading) {\n\t\t\t\tgetImageUrls(treesRef, id);\n\t\t\t}\n\t\t},\n\t\t[ isLoading, dispatch ]\n\t);\n\n\tif (isLoading) {\n\t\treturn <div>Loading</div>;\n\t}\n\n\treturn (\n\t\t<div className={classes.root}>\n\t\t\tTree Images\n\t\t\t{imageUrls.album.map((imageUrl, idx) => (\n\t\t\t\t<img key={`album-${idx}`} src={imageUrl} />\n\t\t\t))}\n\t\t</div>\n\t);\n}\nexport default TreePage;\n","/home/justin/Documents/Springboard/SECT/Capstone_tree_markable/client/src/TreeSearchForm.js",["224","225","226","227"],"import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Slider from '@material-ui/core/Slider';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Button from '@material-ui/core/Button';\n\nimport { getTreeFromApi, getTreesFromApi } from './actions/trees';\n\nimport useStyles from './styles/formStyle';\n\nfunction TreeSearchForm() {\n\tconst classes = useStyles();\n\tconst dispatch = useDispatch();\n\n\tconst [ formData, setFormData ] = useState({\n\t\tsearch     : '',\n\t\tdistance   : '',\n\t\tleaf_type  : '',\n\t\theight_min : '',\n\t\theight_max : '',\n\t\tdsh_min    : '',\n\t\tdsh_max    : ''\n\t});\n\n\tconst handleChange = (evt) => {\n\t\tconst name = evt.target.name;\n\t\tconst value = evt.target.value;\n\n\t\tsetFormData((fData) => ({\n\t\t\t...fData,\n\t\t\t[name] : value\n\t\t}));\n\t};\n\n\tconst handleSubmit = (evt) => {\n\t\tevt.preventDefault();\n\t\tsetFormData(formData);\n\n\t\tconst searchParams = {\n\t\t\tsearch     : formData.search,\n\t\t\tdistance   : parseFloat(formData.distance) || '',\n\t\t\tleaf_type  : formData.leaf_type,\n\t\t\theight_min : parseFloat(formData.height_min) || '',\n\t\t\theight_max : parseFloat(formData.height_max) || '',\n\t\t\tdsh_min    : parseFloat(formData.dsh_min) || '',\n\t\t\tdsh_max    : parseFloat(formData.dsh_max) || ''\n\t\t};\n\n\t\tfor (let field in searchParams) {\n\t\t\tif (searchParams[field] === '') {\n\t\t\t\tdelete searchParams[field];\n\t\t\t}\n\t\t}\n\n\t\tconsole.log('Searchparams', searchParams);\n\t\tdispatch(getTreesFromApi(searchParams));\n\t};\n\n\treturn (\n\t\t<Grid item xs={6}>\n\t\t\t<form onSubmit={handleSubmit} className={classes.form}>\n\t\t\t\t<TextField\n\t\t\t\t\tid=\"search\"\n\t\t\t\t\tname=\"search\"\n\t\t\t\t\tlabel=\"Search\"\n\t\t\t\t\tplaceholder=\"Search Tree Name, Common Name, Scientific Name...\"\n\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\tvalue={formData.search}\n\t\t\t\t/>\n\t\t\t\t<TextField\n\t\t\t\t\tid=\"leaf_type\"\n\t\t\t\t\tname=\"leaf_type\"\n\t\t\t\t\tlabel=\"Leaf Type\"\n\t\t\t\t\tselect\n\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\tvalue={formData.leaf_type}\n\t\t\t\t>\n\t\t\t\t\t<MenuItem value=\"\">Both</MenuItem>\n\t\t\t\t\t<MenuItem value=\"deciduous\">Deciduous</MenuItem>\n\t\t\t\t\t<MenuItem value=\"evergreen\">Evergreen</MenuItem>\n\t\t\t\t</TextField>\n\t\t\t\t<TextField\n\t\t\t\t\tid=\"distance\"\n\t\t\t\t\tname=\"distance\"\n\t\t\t\t\tlabel=\"Miles from Map Center\"\n\t\t\t\t\ttype=\"number\"\n\t\t\t\t\tinputProps={{ min: 0, step: 1 }}\n\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\tvalue={formData.distance}\n\t\t\t\t/>\n\t\t\t\t<Grid item xs={6}>\n\t\t\t\t\tHeight\n\t\t\t\t\t<TextField\n\t\t\t\t\t\tid=\"height_min\"\n\t\t\t\t\t\tname=\"height_min\"\n\t\t\t\t\t\tlabel=\"Min\"\n\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\tinputProps={{ min: 0, max: 500, step: 0.01 }}\n\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\tvalue={formData.height_min}\n\t\t\t\t\t/>\n\t\t\t\t\t<TextField\n\t\t\t\t\t\tid=\"height_max\"\n\t\t\t\t\t\tname=\"height_max\"\n\t\t\t\t\t\tlabel=\"Max\"\n\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\tinputProps={{ min: 1, max: 500, step: 0.01 }}\n\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\tvalue={formData.height_max}\n\t\t\t\t\t/>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item xs={6}>\n\t\t\t\t\tDSH\n\t\t\t\t\t<TextField\n\t\t\t\t\t\tid=\"dsh_min\"\n\t\t\t\t\t\tname=\"dsh_min\"\n\t\t\t\t\t\tlabel=\"Min\"\n\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\tinputProps={{ min: 0, max: 500, step: 0.01 }}\n\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\tvalue={formData.dsh_min}\n\t\t\t\t\t/>\n\t\t\t\t\t<TextField\n\t\t\t\t\t\tid=\"dsh_max\"\n\t\t\t\t\t\tname=\"dsh_max\"\n\t\t\t\t\t\tlabel=\"Max\"\n\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\tinputProps={{ min: 1, max: 500, step: 0.01 }}\n\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\tvalue={formData.dsh_max}\n\t\t\t\t\t/>\n\t\t\t\t</Grid>\n\n\t\t\t\t<Button type=\"submit\">Search</Button>\n\t\t\t</form>\n\t\t</Grid>\n\t);\n}\n\nexport default TreeSearchForm;\n","/home/justin/Documents/Springboard/SECT/Capstone_tree_markable/client/src/CreateNewTree.js",["228","229","230","231","232","233","234"],"import React, { useState, useRef, useEffect } from 'react';\n\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Slider from '@material-ui/core/Slider';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Button from '@material-ui/core/Button';\n\nimport useStyles from './styles/formStyle';\nimport TreeMarkableApi from './TreeMarkableApi';\nimport TreeFormBasicFields from './TreeFormBasicFields';\nimport SelectCoordinates from './SelectCoordinates';\nimport {\n\ttreesRef,\n\tuploadImagesToFirebase\n} from './firebase/firebaseStorage';\nimport ImagesInput from './ImagesInput';\n\nfunction CreateNewTree() {\n\tconst INITIAL_TREE_FORM_DATA = {\n\t\tname            : '',\n\t\tdescription     : '',\n\t\tcommon_name     : '',\n\t\tscientific_name : '',\n\t\theight          : '',\n\t\tdsh             : '',\n\t\tleaf_type       : ''\n\t};\n\tconst classes = useStyles();\n\tconst [ treeFormData, setTreeFormData ] = useState(\n\t\tINITIAL_TREE_FORM_DATA\n\t);\n\tconst [ coordinates, setCoordinates ] = useState({ lat: '', lng: '' });\n\tconst [ imageFiles, setImageFiles ] = useState([]);\n\n\tconst handleTreeFormChange = (data) => {\n\t\tconsole.log('handleTreeFormChange', data);\n\t\tconst { name, value } = data;\n\n\t\tsetTreeFormData((fData) => ({\n\t\t\t...fData,\n\t\t\t[name] : value\n\t\t}));\n\t};\n\n\tconst handleCoordinatesChange = (data) => {\n\t\tconsole.log('handleCoordinatesChange', data);\n\t\tconst { name, value } = data;\n\n\t\tsetCoordinates((fData) => ({\n\t\t\t...fData,\n\t\t\t[name] : value\n\t\t}));\n\t};\n\n\tconst handleMapCoordinatesChange = (coords) => {\n\t\tconsole.log('handleMapCoordinatesChange', coords);\n\n\t\tsetCoordinates(coords);\n\t};\n\n\tconst handleImageFilesChange = (files) => {\n\t\tconsole.log('handleImageFilesChange', files);\n\n\t\tsetImageFiles(files);\n\t};\n\n\t// On form submit, convert data to type expected by server\n\t// and make POST request to create new tree\n\tconst handleSubmit = async (evt) => {\n\t\tevt.preventDefault();\n\n\t\tlet newTree = {\n\t\t\t...treeFormData,\n\t\t\tgeolocation : {\n\t\t\t\tlatitude  : parseFloat(coordinates.lat),\n\t\t\t\tlongitude : parseFloat(coordinates.lng)\n\t\t\t}\n\t\t};\n\n\t\tfor (let field in newTree) {\n\t\t\tif (newTree[field] === '') {\n\t\t\t\tdelete newTree[field];\n\t\t\t}\n\t\t\telse if (field === 'height' || field === 'dsh') {\n\t\t\t\tnewTree[field] = parseFloat(newTree[field]);\n\t\t\t}\n\t\t}\n\n\t\tconsole.log('newtree', newTree);\n\n\t\tconst res = await TreeMarkableApi.createTree(newTree);\n\t\tconsole.log('Trees Submit res', res);\n\t\tconsole.log('ImageFiles', imageFiles);\n\t\tawait uploadImagesToFirebase(treesRef, res.id, imageFiles);\n\n\t\t// TODO Add push to tree details page\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\tCreate New Tree Form\n\t\t\t<form onSubmit={handleSubmit} className={classes.form}>\n\t\t\t\t<TreeFormBasicFields\n\t\t\t\t\tformData={treeFormData}\n\t\t\t\t\tonFormChange={handleTreeFormChange}\n\t\t\t\t/>\n\t\t\t\t<SelectCoordinates\n\t\t\t\t\tformData={coordinates}\n\t\t\t\t\tonCoordinatesChange={handleCoordinatesChange}\n\t\t\t\t\tonMapCoordinatesChange={handleMapCoordinatesChange}\n\t\t\t\t/>\n\t\t\t\t<ImagesInput onImageFilesChange={handleImageFilesChange} />\n\t\t\t\t<Button color=\"primary\" variant=\"outlined\" type=\"submit\">\n\t\t\t\t\tCreate Tree\n\t\t\t\t</Button>\n\t\t\t</form>\n\t\t</div>\n\t);\n}\nexport default CreateNewTree;\n","/home/justin/Documents/Springboard/SECT/Capstone_tree_markable/client/src/SelectCoordinates.js",["235","236","237","238","239","240","241","242","243","244","245","246"],"import React, { useState, useRef, useEffect } from 'react';\n\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Slider from '@material-ui/core/Slider';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Button from '@material-ui/core/Button';\n\nimport SelectLocationMap from './SelectLocationMap';\n\nimport {\n\tMapContainer,\n\tuseMap,\n\tuseMapEvents,\n\tMarker,\n\tPopup,\n\tTileLayer\n} from 'react-leaflet';\n\nimport {\n\tGeoSearchControl,\n\tOpenStreetMapProvider\n} from 'leaflet-geosearch';\nimport 'leaflet-geosearch/dist/geosearch.css';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst useStyles = makeStyles({\n\tmapContainer : {\n\t\twidth  : '90%',\n\t\theight : '90vh'\n\t}\n});\n\nfunction SelectCoordinates({\n\tformData,\n\tonCoordinatesChange,\n\tonMapCoordinatesChange\n}) {\n\tconst classes = useStyles();\n\tconst didMountRef = useRef(false);\n\tconst [ showSelectMap, setShowSelectMap ] = useState(true);\n\tconst [ mapCenter, setMapCenter ] = useState([\n\t\t48.09574762069073,\n\t\t-123.42439143699785\n\t]);\n\tconst [ zoomLevel, setZoomLevel ] = useState(13);\n\n\tconst handleChange = (evt) => {\n\t\tonCoordinatesChange(evt.target);\n\t};\n\n\t// Scroll to map when shown for selecting tree location\n\t// Ref to map toogle button, toggle dispays Leaflet map\n\t// and changes button text. Only runs on rerenders after first\n\tconst mapToggleRef = useRef(null);\n\tuseEffect(\n\t\t() => {\n\t\t\tif (\n\t\t\t\tshowSelectMap &&\n\t\t\t\tmapToggleRef.current &&\n\t\t\t\tdidMountRef.current\n\t\t\t) {\n\t\t\t\tmapToggleRef.current.scrollIntoView({\n\t\t\t\t\tbehavior : 'smooth'\n\t\t\t\t});\n\t\t\t}\n\t\t\telse {\n\t\t\t\tdidMountRef.current = true;\n\t\t\t}\n\t\t},\n\t\t[ showSelectMap ]\n\t);\n\tconst toggleSelectMap = () => {\n\t\tsetShowSelectMap(!showSelectMap);\n\t};\n\tconst selectMapBtn = () => {\n\t\treturn showSelectMap ? (\n\t\t\t<Typography>Hide Map</Typography>\n\t\t) : (\n\t\t\t<Typography>Select Via Map</Typography>\n\t\t);\n\t};\n\tconst setDisplayMapStyle = () => {\n\t\treturn showSelectMap ? {} : { display: 'none' };\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\tSelectCoordinates\n\t\t\t<Grid item container>\n\t\t\t\t<TextField\n\t\t\t\t\tid=\"lat\"\n\t\t\t\t\tname=\"lat\"\n\t\t\t\t\tlabel=\"Latitude\"\n\t\t\t\t\ttype=\"number\"\n\t\t\t\t\tinputProps={{ step: 'any', min: -90, max: 90 }}\n\t\t\t\t\tInputLabelProps={{ shrink: true }}\n\t\t\t\t\tplaceholder=\"-90 to 90 (eg. 48.10045)\"\n\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\tvalue={formData.lat}\n\t\t\t\t\trequired\n\t\t\t\t/>\n\t\t\t\t<TextField\n\t\t\t\t\tid=\"lng\"\n\t\t\t\t\tname=\"lng\"\n\t\t\t\t\tlabel=\"Longitude\"\n\t\t\t\t\ttype=\"number\"\n\t\t\t\t\tinputProps={{ step: 'any', min: -180, max: 180 }}\n\t\t\t\t\tInputLabelProps={{ shrink: true }}\n\t\t\t\t\tplaceholder=\"-180 to 180 (eg. -123.45316)\"\n\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\tvalue={formData.lng}\n\t\t\t\t\trequired\n\t\t\t\t/>\n\t\t\t</Grid>\n\t\t\t<Button\n\t\t\t\tvariant=\"outlined\"\n\t\t\t\tonClick={toggleSelectMap}\n\t\t\t\tref={mapToggleRef}\n\t\t\t>\n\t\t\t\t{selectMapBtn()}\n\t\t\t</Button>\n\t\t\t<div style={setDisplayMapStyle()}>\n\t\t\t\t<SelectLocationMap\n\t\t\t\t\tmapCenter={mapCenter}\n\t\t\t\t\tsetMapCenter={setMapCenter}\n\t\t\t\t\tzoomLevel={zoomLevel}\n\t\t\t\t\tsetZoomLevel={setZoomLevel}\n\t\t\t\t\tonMapCoordinatesChange={onMapCoordinatesChange}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\nexport default React.memo(SelectCoordinates);\n","/home/justin/Documents/Springboard/SECT/Capstone_tree_markable/client/src/TreeFormBasicFields.js",["247","248","249","250","251","252","253","254","255","256","257"],"import React, { useState, useRef, useEffect } from 'react';\n\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Slider from '@material-ui/core/Slider';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Button from '@material-ui/core/Button';\n\nimport useStyles from './styles/formStyle';\nimport TreeMarkableApi from './TreeMarkableApi';\nimport SelectLocationMap from './SelectLocationMap';\nimport {\n\ttreesRef,\n\tuploadImagesToFirebase\n} from './firebase/firebaseStorage';\nimport ImagesInput from './ImagesInput';\n\nfunction TreeFormBasicFields({ formData, onFormChange }) {\n\tconst classes = useStyles();\n\n\tconst handleChange = (evt) => {\n\t\tonFormChange(evt.target);\n\t};\n\n\treturn (\n\t\t<Grid container className={classes.form}>\n\t\t\t<TextField\n\t\t\t\tid=\"name\"\n\t\t\t\tname=\"name\"\n\t\t\t\tlabel=\"Tree Name\"\n\t\t\t\tplaceholder=\"Hyperion\"\n\t\t\t\tonChange={handleChange}\n\t\t\t\tvalue={formData.name}\n\t\t\t\trequired\n\t\t\t/>\n\t\t\t<TextField\n\t\t\t\tid=\"description\"\n\t\t\t\tname=\"description\"\n\t\t\t\tlabel=\"Description\"\n\t\t\t\tmultiline\n\t\t\t\tplaceholder=\"World's tallest known living tree!\"\n\t\t\t\tonChange={handleChange}\n\t\t\t\tvalue={formData.description}\n\t\t\t/>\n\n\t\t\t<TextField\n\t\t\t\tid=\"common_name\"\n\t\t\t\tname=\"common_name\"\n\t\t\t\tlabel=\"Species Common Name\"\n\t\t\t\tplaceholder=\"Bigleaf Maple\"\n\t\t\t\tonChange={handleChange}\n\t\t\t\tvalue={formData.common_name}\n\t\t\t/>\n\n\t\t\t<TextField\n\t\t\t\tid=\"scientific_name\"\n\t\t\t\tname=\"scientific_name\"\n\t\t\t\tlabel=\"Species Scientifc Name\"\n\t\t\t\tplaceholder=\"Acer Macrophyllum\"\n\t\t\t\tonChange={handleChange}\n\t\t\t\tvalue={formData.scientific_name}\n\t\t\t/>\n\t\t\t<TextField\n\t\t\t\tid=\"height\"\n\t\t\t\tname=\"height\"\n\t\t\t\tlabel=\"Height (ft.)\"\n\t\t\t\ttype=\"number\"\n\t\t\t\tplaceholder=\"From base to the tallest branch.\"\n\t\t\t\tinputProps={{ min: 0, max: 500, step: 0.01 }}\n\t\t\t\tonChange={handleChange}\n\t\t\t\tvalue={formData.height}\n\t\t\t/>\n\t\t\t<TextField\n\t\t\t\tid=\"dsh\"\n\t\t\t\tname=\"dsh\"\n\t\t\t\tlabel=\"Diameter Standard Height (in.)\"\n\t\t\t\ttype=\"number\"\n\t\t\t\tinputProps={{ min: 0, max: 500, step: 0.01 }}\n\t\t\t\tplaceholder=\"Trunk circumference 4.5ft above the ground.\"\n\t\t\t\tonChange={handleChange}\n\t\t\t\tvalue={formData.dsh}\n\t\t\t/>\n\t\t\t<TextField\n\t\t\t\tid=\"leaf_type\"\n\t\t\t\tname=\"leaf_type\"\n\t\t\t\tlabel=\"Leaf Type\"\n\t\t\t\tselect\n\t\t\t\tonChange={handleChange}\n\t\t\t\tvalue={formData.leaf_type}\n\t\t\t>\n\t\t\t\t<MenuItem value=\"\">Unknown</MenuItem>\n\t\t\t\t<MenuItem value=\"deciduous\">Deciduous</MenuItem>\n\t\t\t\t<MenuItem value=\"evergreen\">Evergreen</MenuItem>\n\t\t\t</TextField>\n\t\t</Grid>\n\t);\n}\nexport default TreeFormBasicFields;\n","/home/justin/Documents/Springboard/SECT/Capstone_tree_markable/client/src/styles/navDrawer.js",[],"/home/justin/Documents/Springboard/SECT/Capstone_tree_markable/client/src/styles/leafletMap.js",["258"],"import { makeStyles } from '@material-ui/core/styles';\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n\tmapContainer : {\n\t\twidth  : '90%',\n\t\theight : '90vh'\n\t}\n}));\n\nexport default useStyles;\n","/home/justin/Documents/Springboard/SECT/Capstone_tree_markable/client/src/Navigation.js",["259","260","261","262","263","264","265","266","267","268","269","270","271","272","273","274","275","276","277","278","279","280"],"/home/justin/Documents/Springboard/SECT/Capstone_tree_markable/client/src/NavDrawer.js",[],"/home/justin/Documents/Springboard/SECT/Capstone_tree_markable/client/src/NavAppBar.js",["281","282","283","284","285","286","287","288","289","290","291"],{"ruleId":"292","replacedBy":"293"},{"ruleId":"294","replacedBy":"295"},{"ruleId":"296","severity":1,"message":"297","line":15,"column":8,"nodeType":"298","messageId":"299","endLine":15,"endColumn":15},{"ruleId":"296","severity":1,"message":"300","line":1,"column":17,"nodeType":"298","messageId":"299","endLine":1,"endColumn":25},{"ruleId":"296","severity":1,"message":"301","line":8,"column":8,"nodeType":"298","messageId":"299","endLine":8,"endColumn":17},{"ruleId":"296","severity":1,"message":"297","line":14,"column":8,"nodeType":"298","messageId":"299","endLine":14,"endColumn":15},{"ruleId":"296","severity":1,"message":"302","line":6,"column":10,"nodeType":"298","messageId":"299","endLine":6,"endColumn":20},{"ruleId":"296","severity":1,"message":"303","line":46,"column":9,"nodeType":"298","messageId":"299","endLine":46,"endColumn":12},{"ruleId":"296","severity":1,"message":"304","line":7,"column":2,"nodeType":"298","messageId":"299","endLine":7,"endColumn":14},{"ruleId":"296","severity":1,"message":"302","line":19,"column":10,"nodeType":"298","messageId":"299","endLine":19,"endColumn":20},{"ruleId":"296","severity":1,"message":"305","line":21,"column":8,"nodeType":"298","messageId":"299","endLine":21,"endColumn":23},{"ruleId":"296","severity":1,"message":"306","line":22,"column":10,"nodeType":"298","messageId":"299","endLine":22,"endColumn":24},{"ruleId":"296","severity":1,"message":"307","line":23,"column":10,"nodeType":"298","messageId":"299","endLine":23,"endColumn":24},{"ruleId":"296","severity":1,"message":"308","line":24,"column":10,"nodeType":"298","messageId":"299","endLine":24,"endColumn":18},{"ruleId":"296","severity":1,"message":"309","line":36,"column":10,"nodeType":"298","messageId":"299","endLine":36,"endColumn":21},{"ruleId":"296","severity":1,"message":"310","line":36,"column":23,"nodeType":"298","messageId":"299","endLine":36,"endColumn":37},{"ruleId":"296","severity":1,"message":"311","line":37,"column":10,"nodeType":"298","messageId":"299","endLine":37,"endColumn":22},{"ruleId":"296","severity":1,"message":"312","line":37,"column":24,"nodeType":"298","messageId":"299","endLine":37,"endColumn":39},{"ruleId":"296","severity":1,"message":"313","line":38,"column":6,"nodeType":"298","messageId":"299","endLine":38,"endColumn":13},{"ruleId":"296","severity":1,"message":"314","line":69,"column":8,"nodeType":"298","messageId":"299","endLine":69,"endColumn":21},{"ruleId":"315","severity":1,"message":"316","line":70,"column":27,"nodeType":"317","messageId":"318","endLine":70,"endColumn":29},{"ruleId":"296","severity":1,"message":"297","line":13,"column":8,"nodeType":"298","messageId":"299","endLine":13,"endColumn":15},{"ruleId":"296","severity":1,"message":"297","line":14,"column":8,"nodeType":"298","messageId":"299","endLine":14,"endColumn":15},{"ruleId":"296","severity":1,"message":"319","line":16,"column":10,"nodeType":"298","messageId":"299","endLine":16,"endColumn":18},{"ruleId":"296","severity":1,"message":"320","line":16,"column":20,"nodeType":"298","messageId":"299","endLine":16,"endColumn":31},{"ruleId":"296","severity":1,"message":"321","line":24,"column":10,"nodeType":"298","messageId":"299","endLine":24,"endColumn":18},{"ruleId":"296","severity":1,"message":"322","line":32,"column":9,"nodeType":"298","messageId":"299","endLine":32,"endColumn":16},{"ruleId":"296","severity":1,"message":"323","line":44,"column":8,"nodeType":"298","messageId":"299","endLine":44,"endColumn":20},{"ruleId":"324","severity":1,"message":"325","line":58,"column":5,"nodeType":"326","messageId":"327","endLine":74,"endColumn":6},{"ruleId":"328","severity":1,"message":"329","line":101,"column":5,"nodeType":"330","endLine":108,"endColumn":7},{"ruleId":"296","severity":1,"message":"331","line":2,"column":10,"nodeType":"298","messageId":"299","endLine":2,"endColumn":20},{"ruleId":"296","severity":1,"message":"332","line":3,"column":10,"nodeType":"298","messageId":"299","endLine":3,"endColumn":21},{"ruleId":"296","severity":1,"message":"302","line":5,"column":10,"nodeType":"298","messageId":"299","endLine":5,"endColumn":20},{"ruleId":"296","severity":1,"message":"333","line":9,"column":8,"nodeType":"298","messageId":"299","endLine":9,"endColumn":11},{"ruleId":"328","severity":1,"message":"329","line":67,"column":6,"nodeType":"330","endLine":71,"endColumn":8},{"ruleId":"296","severity":1,"message":"334","line":1,"column":27,"nodeType":"298","messageId":"299","endLine":1,"endColumn":33},{"ruleId":"296","severity":1,"message":"302","line":4,"column":10,"nodeType":"298","messageId":"299","endLine":4,"endColumn":20},{"ruleId":"296","severity":1,"message":"335","line":5,"column":8,"nodeType":"298","messageId":"299","endLine":5,"endColumn":12},{"ruleId":"296","severity":1,"message":"336","line":6,"column":8,"nodeType":"298","messageId":"299","endLine":6,"endColumn":18},{"ruleId":"296","severity":1,"message":"301","line":7,"column":8,"nodeType":"298","messageId":"299","endLine":7,"endColumn":17},{"ruleId":"296","severity":1,"message":"337","line":10,"column":8,"nodeType":"298","messageId":"299","endLine":10,"endColumn":20},{"ruleId":"296","severity":1,"message":"338","line":12,"column":8,"nodeType":"298","messageId":"299","endLine":12,"endColumn":14},{"ruleId":"296","severity":1,"message":"339","line":16,"column":8,"nodeType":"298","messageId":"299","endLine":16,"endColumn":25},{"ruleId":"296","severity":1,"message":"340","line":18,"column":2,"nodeType":"298","messageId":"299","endLine":18,"endColumn":10},{"ruleId":"296","severity":1,"message":"341","line":19,"column":2,"nodeType":"298","messageId":"299","endLine":19,"endColumn":24},{"ruleId":"296","severity":1,"message":"342","line":21,"column":8,"nodeType":"298","messageId":"299","endLine":21,"endColumn":19},{"ruleId":"296","severity":1,"message":"309","line":37,"column":10,"nodeType":"298","messageId":"299","endLine":37,"endColumn":21},{"ruleId":"296","severity":1,"message":"310","line":37,"column":23,"nodeType":"298","messageId":"299","endLine":37,"endColumn":37},{"ruleId":"296","severity":1,"message":"311","line":38,"column":10,"nodeType":"298","messageId":"299","endLine":38,"endColumn":22},{"ruleId":"296","severity":1,"message":"312","line":38,"column":24,"nodeType":"298","messageId":"299","endLine":38,"endColumn":39},{"ruleId":"296","severity":1,"message":"313","line":39,"column":6,"nodeType":"298","messageId":"299","endLine":39,"endColumn":13},{"ruleId":"296","severity":1,"message":"334","line":1,"column":27,"nodeType":"298","messageId":"299","endLine":1,"endColumn":33},{"ruleId":"296","severity":1,"message":"332","line":2,"column":10,"nodeType":"298","messageId":"299","endLine":2,"endColumn":21},{"ruleId":"296","severity":1,"message":"302","line":5,"column":10,"nodeType":"298","messageId":"299","endLine":5,"endColumn":20},{"ruleId":"296","severity":1,"message":"335","line":6,"column":8,"nodeType":"298","messageId":"299","endLine":6,"endColumn":12},{"ruleId":"296","severity":1,"message":"336","line":7,"column":8,"nodeType":"298","messageId":"299","endLine":7,"endColumn":18},{"ruleId":"296","severity":1,"message":"301","line":8,"column":8,"nodeType":"298","messageId":"299","endLine":8,"endColumn":17},{"ruleId":"296","severity":1,"message":"343","line":9,"column":8,"nodeType":"298","messageId":"299","endLine":9,"endColumn":12},{"ruleId":"296","severity":1,"message":"344","line":10,"column":8,"nodeType":"298","messageId":"299","endLine":10,"endColumn":16},{"ruleId":"296","severity":1,"message":"337","line":11,"column":8,"nodeType":"298","messageId":"299","endLine":11,"endColumn":20},{"ruleId":"296","severity":1,"message":"345","line":12,"column":8,"nodeType":"298","messageId":"299","endLine":12,"endColumn":20},{"ruleId":"296","severity":1,"message":"338","line":13,"column":8,"nodeType":"298","messageId":"299","endLine":13,"endColumn":14},{"ruleId":"296","severity":1,"message":"346","line":16,"column":10,"nodeType":"298","messageId":"299","endLine":16,"endColumn":25},{"ruleId":"296","severity":1,"message":"339","line":17,"column":8,"nodeType":"298","messageId":"299","endLine":17,"endColumn":25},{"ruleId":"296","severity":1,"message":"342","line":18,"column":8,"nodeType":"298","messageId":"299","endLine":18,"endColumn":19},{"ruleId":"347","severity":1,"message":"348","line":51,"column":3,"nodeType":"349","endLine":51,"endColumn":26,"suggestions":"350"},{"ruleId":"328","severity":1,"message":"329","line":62,"column":5,"nodeType":"330","endLine":62,"endColumn":48},{"ruleId":"296","severity":1,"message":"302","line":3,"column":10,"nodeType":"298","messageId":"299","endLine":3,"endColumn":20},{"ruleId":"296","severity":1,"message":"336","line":5,"column":8,"nodeType":"298","messageId":"299","endLine":5,"endColumn":18},{"ruleId":"296","severity":1,"message":"351","line":8,"column":8,"nodeType":"298","messageId":"299","endLine":8,"endColumn":14},{"ruleId":"296","severity":1,"message":"306","line":12,"column":10,"nodeType":"298","messageId":"299","endLine":12,"endColumn":24},{"ruleId":"296","severity":1,"message":"334","line":1,"column":27,"nodeType":"298","messageId":"299","endLine":1,"endColumn":33},{"ruleId":"296","severity":1,"message":"352","line":1,"column":35,"nodeType":"298","messageId":"299","endLine":1,"endColumn":44},{"ruleId":"296","severity":1,"message":"336","line":3,"column":8,"nodeType":"298","messageId":"299","endLine":3,"endColumn":18},{"ruleId":"296","severity":1,"message":"335","line":4,"column":8,"nodeType":"298","messageId":"299","endLine":4,"endColumn":12},{"ruleId":"296","severity":1,"message":"301","line":5,"column":8,"nodeType":"298","messageId":"299","endLine":5,"endColumn":17},{"ruleId":"296","severity":1,"message":"351","line":6,"column":8,"nodeType":"298","messageId":"299","endLine":6,"endColumn":14},{"ruleId":"296","severity":1,"message":"353","line":7,"column":8,"nodeType":"298","messageId":"299","endLine":7,"endColumn":16},{"ruleId":"296","severity":1,"message":"351","line":6,"column":8,"nodeType":"298","messageId":"299","endLine":6,"endColumn":14},{"ruleId":"296","severity":1,"message":"353","line":7,"column":8,"nodeType":"298","messageId":"299","endLine":7,"endColumn":16},{"ruleId":"296","severity":1,"message":"354","line":13,"column":2,"nodeType":"298","messageId":"299","endLine":13,"endColumn":14},{"ruleId":"296","severity":1,"message":"355","line":14,"column":2,"nodeType":"298","messageId":"299","endLine":14,"endColumn":8},{"ruleId":"296","severity":1,"message":"304","line":15,"column":2,"nodeType":"298","messageId":"299","endLine":15,"endColumn":14},{"ruleId":"296","severity":1,"message":"356","line":16,"column":2,"nodeType":"298","messageId":"299","endLine":16,"endColumn":8},{"ruleId":"296","severity":1,"message":"357","line":17,"column":2,"nodeType":"298","messageId":"299","endLine":17,"endColumn":7},{"ruleId":"296","severity":1,"message":"358","line":18,"column":2,"nodeType":"298","messageId":"299","endLine":18,"endColumn":11},{"ruleId":"296","severity":1,"message":"359","line":22,"column":2,"nodeType":"298","messageId":"299","endLine":22,"endColumn":18},{"ruleId":"296","severity":1,"message":"360","line":23,"column":2,"nodeType":"298","messageId":"299","endLine":23,"endColumn":23},{"ruleId":"296","severity":1,"message":"361","line":28,"column":8,"nodeType":"298","messageId":"299","endLine":28,"endColumn":24},{"ruleId":"296","severity":1,"message":"297","line":42,"column":8,"nodeType":"298","messageId":"299","endLine":42,"endColumn":15},{"ruleId":"296","severity":1,"message":"300","line":1,"column":17,"nodeType":"298","messageId":"299","endLine":1,"endColumn":25},{"ruleId":"296","severity":1,"message":"334","line":1,"column":27,"nodeType":"298","messageId":"299","endLine":1,"endColumn":33},{"ruleId":"296","severity":1,"message":"352","line":1,"column":35,"nodeType":"298","messageId":"299","endLine":1,"endColumn":44},{"ruleId":"296","severity":1,"message":"336","line":3,"column":8,"nodeType":"298","messageId":"299","endLine":3,"endColumn":18},{"ruleId":"296","severity":1,"message":"351","line":6,"column":8,"nodeType":"298","messageId":"299","endLine":6,"endColumn":14},{"ruleId":"296","severity":1,"message":"338","line":8,"column":8,"nodeType":"298","messageId":"299","endLine":8,"endColumn":14},{"ruleId":"296","severity":1,"message":"305","line":11,"column":8,"nodeType":"298","messageId":"299","endLine":11,"endColumn":23},{"ruleId":"296","severity":1,"message":"339","line":12,"column":8,"nodeType":"298","messageId":"299","endLine":12,"endColumn":25},{"ruleId":"296","severity":1,"message":"340","line":14,"column":2,"nodeType":"298","messageId":"299","endLine":14,"endColumn":10},{"ruleId":"296","severity":1,"message":"341","line":15,"column":2,"nodeType":"298","messageId":"299","endLine":15,"endColumn":24},{"ruleId":"296","severity":1,"message":"342","line":17,"column":8,"nodeType":"298","messageId":"299","endLine":17,"endColumn":19},{"ruleId":"296","severity":1,"message":"362","line":3,"column":7,"nodeType":"298","messageId":"299","endLine":3,"endColumn":18},{"ruleId":"296","severity":1,"message":"363","line":2,"column":10,"nodeType":"298","messageId":"299","endLine":2,"endColumn":14},{"ruleId":"296","severity":1,"message":"364","line":2,"column":16,"nodeType":"298","messageId":"299","endLine":2,"endColumn":26},{"ruleId":"296","severity":1,"message":"365","line":5,"column":8,"nodeType":"298","messageId":"299","endLine":5,"endColumn":14},{"ruleId":"296","severity":1,"message":"366","line":6,"column":8,"nodeType":"298","messageId":"299","endLine":6,"endColumn":13},{"ruleId":"296","severity":1,"message":"367","line":8,"column":8,"nodeType":"298","messageId":"299","endLine":8,"endColumn":15},{"ruleId":"296","severity":1,"message":"338","line":9,"column":8,"nodeType":"298","messageId":"299","endLine":9,"endColumn":14},{"ruleId":"296","severity":1,"message":"368","line":12,"column":8,"nodeType":"298","messageId":"299","endLine":12,"endColumn":18},{"ruleId":"296","severity":1,"message":"343","line":13,"column":8,"nodeType":"298","messageId":"299","endLine":13,"endColumn":12},{"ruleId":"296","severity":1,"message":"344","line":14,"column":8,"nodeType":"298","messageId":"299","endLine":14,"endColumn":16},{"ruleId":"296","severity":1,"message":"337","line":15,"column":8,"nodeType":"298","messageId":"299","endLine":15,"endColumn":20},{"ruleId":"296","severity":1,"message":"345","line":16,"column":8,"nodeType":"298","messageId":"299","endLine":16,"endColumn":20},{"ruleId":"296","severity":1,"message":"353","line":17,"column":8,"nodeType":"298","messageId":"299","endLine":17,"endColumn":16},{"ruleId":"296","severity":1,"message":"369","line":18,"column":8,"nodeType":"298","messageId":"299","endLine":18,"endColumn":12},{"ruleId":"296","severity":1,"message":"370","line":20,"column":10,"nodeType":"298","messageId":"299","endLine":20,"endColumn":18},{"ruleId":"296","severity":1,"message":"371","line":21,"column":19,"nodeType":"298","messageId":"299","endLine":21,"endColumn":36},{"ruleId":"296","severity":1,"message":"372","line":23,"column":8,"nodeType":"298","messageId":"299","endLine":23,"endColumn":15},{"ruleId":"296","severity":1,"message":"336","line":24,"column":8,"nodeType":"298","messageId":"299","endLine":24,"endColumn":18},{"ruleId":"296","severity":1,"message":"373","line":28,"column":10,"nodeType":"298","messageId":"299","endLine":28,"endColumn":21},{"ruleId":"296","severity":1,"message":"374","line":38,"column":8,"nodeType":"298","messageId":"299","endLine":38,"endColumn":18},{"ruleId":"296","severity":1,"message":"375","line":39,"column":8,"nodeType":"298","messageId":"299","endLine":39,"endColumn":16},{"ruleId":"296","severity":1,"message":"376","line":40,"column":20,"nodeType":"298","messageId":"299","endLine":40,"endColumn":31},{"ruleId":"296","severity":1,"message":"377","line":41,"column":8,"nodeType":"298","messageId":"299","endLine":41,"endColumn":12},{"ruleId":"296","severity":1,"message":"300","line":1,"column":17,"nodeType":"298","messageId":"299","endLine":1,"endColumn":25},{"ruleId":"296","severity":1,"message":"364","line":2,"column":16,"nodeType":"298","messageId":"299","endLine":2,"endColumn":26},{"ruleId":"296","severity":1,"message":"366","line":6,"column":8,"nodeType":"298","messageId":"299","endLine":6,"endColumn":13},{"ruleId":"296","severity":1,"message":"367","line":8,"column":8,"nodeType":"298","messageId":"299","endLine":8,"endColumn":15},{"ruleId":"296","severity":1,"message":"335","line":11,"column":8,"nodeType":"298","messageId":"299","endLine":11,"endColumn":12},{"ruleId":"296","severity":1,"message":"378","line":12,"column":8,"nodeType":"298","messageId":"299","endLine":12,"endColumn":14},{"ruleId":"296","severity":1,"message":"343","line":14,"column":8,"nodeType":"298","messageId":"299","endLine":14,"endColumn":12},{"ruleId":"296","severity":1,"message":"344","line":15,"column":8,"nodeType":"298","messageId":"299","endLine":15,"endColumn":16},{"ruleId":"296","severity":1,"message":"337","line":16,"column":8,"nodeType":"298","messageId":"299","endLine":16,"endColumn":20},{"ruleId":"296","severity":1,"message":"345","line":17,"column":8,"nodeType":"298","messageId":"299","endLine":17,"endColumn":20},{"ruleId":"296","severity":1,"message":"379","line":32,"column":10,"nodeType":"298","messageId":"299","endLine":32,"endColumn":15},"no-native-reassign",["380"],"no-negated-in-lhs",["381"],"no-unused-vars","'classes' is assigned a value but never used.","Identifier","unusedVar","'useState' is defined but never used.","'TextField' is defined but never used.","'makeStyles' is defined but never used.","'map' is assigned a value but never used.","'useMapEvents' is defined but never used.","'TreeMarkableApi' is defined but never used.","'getTreeFromApi' is defined but never used.","'signInAnonUser' is defined but never used.","'resetAll' is defined but never used.","'treeMarkers' is assigned a value but never used.","'setTreeMarkers' is assigned a value but never used.","'searchParams' is assigned a value but never used.","'setSearchParams' is assigned a value but never used.","'userUid' is assigned a value but never used.","'createMarkers' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'formData' is assigned a value but never used.","'setFormData' is assigned a value but never used.","'imageRef' is assigned a value but never used.","'fileRef' is assigned a value but never used.","'handleSubmit' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'storageRef' is defined but never used.","'useSelector' is defined but never used.","'Box' is defined but never used.","'useRef' is defined but never used.","'Grid' is defined but never used.","'Typography' is defined but never used.","'ListItemIcon' is defined but never used.","'Button' is defined but never used.","'SelectLocationMap' is defined but never used.","'treesRef' is defined but never used.","'uploadImagesToFirebase' is defined but never used.","'ImagesInput' is defined but never used.","'List' is defined but never used.","'ListItem' is defined but never used.","'ListItemText' is defined but never used.","'getTreesFromApi' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["382"],"'Slider' is defined but never used.","'useEffect' is defined but never used.","'MenuItem' is defined but never used.","'MapContainer' is defined but never used.","'useMap' is defined but never used.","'Marker' is defined but never used.","'Popup' is defined but never used.","'TileLayer' is defined but never used.","'GeoSearchControl' is defined but never used.","'OpenStreetMapProvider' is defined but never used.","'CircularProgress' is defined but never used.","'drawerWidth' is assigned a value but never used.","'Link' is defined but never used.","'withRouter' is defined but never used.","'AppBar' is defined but never used.","'Paper' is defined but never used.","'Divider' is defined but never used.","'IconButton' is defined but never used.","'Menu' is defined but never used.","'MenuIcon' is defined but never used.","'AccountCircleIcon' is defined but never used.","'Toolbar' is defined but never used.","'signOutUser' is defined but never used.","'isLoggedIn' is assigned a value but never used.","'dispatch' is assigned a value but never used.","'setAnchorEl' is assigned a value but never used.","'open' is assigned a value but never used.","'Hidden' is defined but never used.","'windo' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"383","fix":"384"},"Update the dependencies array to be: [isLoading, dispatch, id]",{"range":"385","text":"386"},[1468,1491],"[isLoading, dispatch, id]"]