[{"/home/justin/Documents/Springboard/SECT/tree-markable/client/src/index.js":"1","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/store.js":"2","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/App.js":"3","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/Routes.js":"4","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/Navigation.js":"5","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/reducers/root.js":"6","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/actions/auth.js":"7","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/styles/navDrawer.js":"8","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/LandingPage.js":"9","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/NotFound.js":"10","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/NavDrawer.js":"11","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/NavAppBar.js":"12","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/reducers/currUser.js":"13","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/reducers/groups.js":"14","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/reducers/trees.js":"15","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/TreeMarkableApi.js":"16","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/actions/types.js":"17","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/reducers/auth.js":"18","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/firebase/firebaseAuth.js":"19","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/firebase/firebaseIndex.js":"20","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/actions/currUser.js":"21","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/styles/formStyle.js":"22","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/LandingPageElement.js":"23","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/actions/trees.js":"24","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/firebase/firebaseStorage.js":"25","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/actions/groups.js":"26","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/styles/markerCard.js":"27","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/styles/leafletMap.js":"28","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/helpers/formErrorDisplay.js":"29","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/tree/CreateNewTree.js":"30","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/tree/TreeFormBasicFields.js":"31","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/group/CreateNewGroup.js":"32","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/tree/ExploreTrees.js":"33","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/group/ExploreGroups.js":"34","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/tree/TreePage.js":"35","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/tree/EditTree.js":"36","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/group/GroupPage.js":"37","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/user/SignIn.js":"38","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/user/EditUser.js":"39","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/user/SignUp.js":"40","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/user/UserProfilePage.js":"41","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/tree/TreeSearchForm.js":"42","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/tree/TreeList.js":"43","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/group/GroupSearchForm.js":"44","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/group/GroupList.js":"45","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/user/CurrUserInfo.js":"46","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/user/SignUpForm.js":"47","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/user/SignInForm.js":"48","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/group/GroupTabPanel.js":"49","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/group/GroupTreeEditTable.js":"50","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/group/GroupFormBasicFields.js":"51","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/imageHandling/ImagesInput.js":"52","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/leafletMap/SelectCoordinates.js":"53","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/imageHandling/Carousel.js":"54","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/comment/CommentsContainer.js":"55","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/comment/Comment.js":"56","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/iconBtns/EditIconBtn.js":"57","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/iconBtns/FollowGroupIconBtn.js":"58","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/leafletMap/TreePopup.js":"59","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/iconBtns/FavoriteIconBtn.js":"60","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/iconBtns/EditTreeInGroupIconBtn.js":"61","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/leafletMap/LeafletMap.js":"62","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/group/EditGroup.js":"63","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/imageHandling/UploadImagesToFirebase.js":"64","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/group/GroupMembersPanel.js":"65","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/group/UserList.js":"66","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/About.js":"67","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/ProtectedRoute.js":"68","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/PrivateEntityRoute.js":"69","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/PrivateUserRoute.js":"70"},{"size":1022,"mtime":1617316777539,"results":"71","hashOfConfig":"72"},{"size":815,"mtime":1615920245613,"results":"73","hashOfConfig":"72"},{"size":870,"mtime":1615920245601,"results":"74","hashOfConfig":"72"},{"size":2820,"mtime":1617321499735,"results":"75","hashOfConfig":"72"},{"size":2721,"mtime":1615920245605,"results":"76","hashOfConfig":"72"},{"size":346,"mtime":1615920245613,"results":"77","hashOfConfig":"72"},{"size":3846,"mtime":1616729310934,"results":"78","hashOfConfig":"72"},{"size":990,"mtime":1615920245613,"results":"79","hashOfConfig":"72"},{"size":3831,"mtime":1615920245605,"results":"80","hashOfConfig":"72"},{"size":1594,"mtime":1617224648375,"results":"81","hashOfConfig":"72"},{"size":3608,"mtime":1617319651215,"results":"82","hashOfConfig":"72"},{"size":3632,"mtime":1615920245605,"results":"83","hashOfConfig":"72"},{"size":3179,"mtime":1616728803846,"results":"84","hashOfConfig":"72"},{"size":3832,"mtime":1617246333567,"results":"85","hashOfConfig":"72"},{"size":1551,"mtime":1617254674443,"results":"86","hashOfConfig":"72"},{"size":7244,"mtime":1617295116039,"results":"87","hashOfConfig":"72"},{"size":1892,"mtime":1617254691899,"results":"88","hashOfConfig":"72"},{"size":1105,"mtime":1615920245613,"results":"89","hashOfConfig":"72"},{"size":1885,"mtime":1615920245605,"results":"90","hashOfConfig":"72"},{"size":849,"mtime":1615931355370,"results":"91","hashOfConfig":"72"},{"size":4446,"mtime":1617322020431,"results":"92","hashOfConfig":"72"},{"size":297,"mtime":1615920245613,"results":"93","hashOfConfig":"72"},{"size":2855,"mtime":1615920245605,"results":"94","hashOfConfig":"72"},{"size":3642,"mtime":1617295053971,"results":"95","hashOfConfig":"72"},{"size":4411,"mtime":1617291031439,"results":"96","hashOfConfig":"72"},{"size":6485,"mtime":1617295053971,"results":"97","hashOfConfig":"72"},{"size":361,"mtime":1615920245613,"results":"98","hashOfConfig":"72"},{"size":619,"mtime":1616440135985,"results":"99","hashOfConfig":"72"},{"size":1385,"mtime":1617247178391,"results":"100","hashOfConfig":"72"},{"size":4267,"mtime":1617249755055,"results":"101","hashOfConfig":"72"},{"size":2971,"mtime":1617253872155,"results":"102","hashOfConfig":"72"},{"size":2933,"mtime":1617249339191,"results":"103","hashOfConfig":"72"},{"size":3764,"mtime":1617312699027,"results":"104","hashOfConfig":"72"},{"size":1857,"mtime":1617254802487,"results":"105","hashOfConfig":"72"},{"size":5121,"mtime":1617291779083,"results":"106","hashOfConfig":"72"},{"size":5123,"mtime":1617295049723,"results":"107","hashOfConfig":"72"},{"size":4497,"mtime":1617255450727,"results":"108","hashOfConfig":"72"},{"size":2206,"mtime":1617315598963,"results":"109","hashOfConfig":"72"},{"size":5342,"mtime":1617644519475,"results":"110","hashOfConfig":"72"},{"size":2358,"mtime":1617316043583,"results":"111","hashOfConfig":"72"},{"size":6437,"mtime":1617240177219,"results":"112","hashOfConfig":"72"},{"size":5576,"mtime":1617312618263,"results":"113","hashOfConfig":"72"},{"size":3994,"mtime":1616699444004,"results":"114","hashOfConfig":"72"},{"size":2134,"mtime":1617254821123,"results":"115","hashOfConfig":"72"},{"size":2920,"mtime":1617295399615,"results":"116","hashOfConfig":"72"},{"size":1939,"mtime":1616646824257,"results":"117","hashOfConfig":"72"},{"size":2700,"mtime":1616205539693,"results":"118","hashOfConfig":"72"},{"size":1957,"mtime":1616729490350,"results":"119","hashOfConfig":"72"},{"size":5251,"mtime":1617313774787,"results":"120","hashOfConfig":"72"},{"size":1411,"mtime":1617294591891,"results":"121","hashOfConfig":"72"},{"size":1938,"mtime":1617244418103,"results":"122","hashOfConfig":"72"},{"size":3868,"mtime":1617253954459,"results":"123","hashOfConfig":"72"},{"size":3065,"mtime":1617254035535,"results":"124","hashOfConfig":"72"},{"size":1661,"mtime":1616204575431,"results":"125","hashOfConfig":"72"},{"size":4247,"mtime":1617287311415,"results":"126","hashOfConfig":"72"},{"size":4389,"mtime":1617223559403,"results":"127","hashOfConfig":"72"},{"size":902,"mtime":1616204705157,"results":"128","hashOfConfig":"72"},{"size":1523,"mtime":1617130380786,"results":"129","hashOfConfig":"72"},{"size":3438,"mtime":1616208755761,"results":"130","hashOfConfig":"72"},{"size":1526,"mtime":1617295416571,"results":"131","hashOfConfig":"72"},{"size":1326,"mtime":1616208639237,"results":"132","hashOfConfig":"72"},{"size":3582,"mtime":1616705076162,"results":"133","hashOfConfig":"72"},{"size":3123,"mtime":1617296040863,"results":"134","hashOfConfig":"72"},{"size":2597,"mtime":1616208716709,"results":"135","hashOfConfig":"72"},{"size":2712,"mtime":1617220303647,"results":"136","hashOfConfig":"72"},{"size":3196,"mtime":1617139831790,"results":"137","hashOfConfig":"72"},{"size":4013,"mtime":1617232362675,"results":"138","hashOfConfig":"72"},{"size":576,"mtime":1617318657523,"results":"139","hashOfConfig":"72"},{"size":888,"mtime":1617321310859,"results":"140","hashOfConfig":"72"},{"size":973,"mtime":1617321864235,"results":"141","hashOfConfig":"72"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"15nr02n",{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"146"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"152","messages":"153","errorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"146"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"146"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"146"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"169","messages":"170","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"146"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"146"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"146"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"146"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"146"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"146"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"146"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224","usedDeprecatedRules":"146"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229","usedDeprecatedRules":"146"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"232","usedDeprecatedRules":"146"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"235","messages":"236","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"237","usedDeprecatedRules":"146"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"240","usedDeprecatedRules":"146"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"243","usedDeprecatedRules":"146"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"246","usedDeprecatedRules":"146"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"249","usedDeprecatedRules":"146"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":"252","usedDeprecatedRules":"146"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"255","usedDeprecatedRules":"146"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"258","usedDeprecatedRules":"146"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"261","usedDeprecatedRules":"146"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"264","usedDeprecatedRules":"146"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"267","usedDeprecatedRules":"146"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"270","usedDeprecatedRules":"146"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"273","usedDeprecatedRules":"146"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"276","usedDeprecatedRules":"146"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"279","usedDeprecatedRules":"146"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"282","usedDeprecatedRules":"146"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"285","usedDeprecatedRules":"146"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"288","usedDeprecatedRules":"146"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"293","usedDeprecatedRules":"146"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"296","usedDeprecatedRules":"146"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"299","usedDeprecatedRules":"146"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"306","messages":"307","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"308","usedDeprecatedRules":"146"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"311","usedDeprecatedRules":"146"},{"filePath":"312","messages":"313","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"314","usedDeprecatedRules":"146"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"317","messages":"318","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"319","messages":"320","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/justin/Documents/Springboard/SECT/tree-markable/client/src/index.js",[],"/home/justin/Documents/Springboard/SECT/tree-markable/client/src/store.js",[],["321","322"],"/home/justin/Documents/Springboard/SECT/tree-markable/client/src/App.js",["323"],"import React, { useEffect } from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\n\nimport { verifyAuth } from './actions/auth';\nimport { useTheme } from '@material-ui/core/styles';\n\nimport Routes from './Routes';\nimport Navigation from './Navigation';\n\nimport useStyles from './styles/navDrawer';\n\nfunction App() {\n\tconst theme = useTheme();\n\tconst classes = useStyles(theme);\n\tconst dispatch = useDispatch();\n\t// Set Firebase Auth Listener, onAuthStateChanged, on App\n\t// initialization. unsubscribe removes listener on dismount.\n\n\tuseEffect(\n\t\t() => {\n\t\t\tconst unsubscribe = dispatch(verifyAuth());\n\t\t\treturn () => unsubscribe();\n\t\t},\n\t\t[ dispatch ]\n\t);\n\n\treturn (\n\t\t<BrowserRouter>\n\t\t\t<div className=\"App\">\n\t\t\t\t<Navigation>\n\t\t\t\t\t<Routes />\n\t\t\t\t</Navigation>\n\t\t\t</div>\n\t\t</BrowserRouter>\n\t);\n}\n\nexport default App;\n","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/Routes.js",["324","325","326"],"/home/justin/Documents/Springboard/SECT/tree-markable/client/src/Navigation.js",["327","328","329","330","331","332","333","334","335","336","337","338","339","340","341","342","343","344","345","346","347","348"],"import React, { useState } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Paper from '@material-ui/core/Paper';\n\nimport Divider from '@material-ui/core/Divider';\nimport Button from '@material-ui/core/Button';\nimport Drawer from '@material-ui/core/Drawer';\nimport Hidden from '@material-ui/core/Hidden';\nimport IconButton from '@material-ui/core/IconButton';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport {\n\tMenu as MenuIcon,\n\tAccountCircle as AccountCircleIcon\n} from '@material-ui/icons';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { useTheme } from '@material-ui/core/styles';\n\nimport useStyles from './styles/navDrawer';\nimport { signOutUser } from './actions/auth';\nimport NavDrawer from './NavDrawer';\nimport NavAppBar from './NavAppBar';\n\nfunction Navigation(props) {\n\tconst { window, children } = props;\n\tconst theme = useTheme();\n\tconst classes = useStyles(theme);\n\tconst [ mobileOpen, setMobileOpen ] = useState(false);\n\tconst isLoggedIn = useSelector((st) => st.auth.authenticated);\n\tconst dispatch = useDispatch();\n\tconst [ anchorEl, setAnchorEl ] = React.useState(null);\n\tconst open = Boolean(anchorEl);\n\n\tconst handleDrawerToggle = () => {\n\t\tsetMobileOpen(!mobileOpen);\n\t};\n\n\tconst container =\n\t\twindow !== undefined ? () => window().document.body : undefined;\n\n\treturn (\n\t\t<div className={classes.root}>\n\t\t\t<NavAppBar handleDrawerToggle={handleDrawerToggle} />\n\t\t\t<nav className={classes.drawer} aria-label=\"navigation drawer\">\n\t\t\t\t<Hidden mdUp implementation=\"js\">\n\t\t\t\t\t<Drawer\n\t\t\t\t\t\tcontainer={container}\n\t\t\t\t\t\tvariant=\"temporary\"\n\t\t\t\t\t\tanchor={\n\t\t\t\t\t\t\ttheme.direction === 'rtl' ? 'right' : 'left'\n\t\t\t\t\t\t}\n\t\t\t\t\t\topen={mobileOpen}\n\t\t\t\t\t\tonClose={handleDrawerToggle}\n\t\t\t\t\t\tclasses={{\n\t\t\t\t\t\t\tpaper : classes.drawerPaper\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tModalProps={{\n\t\t\t\t\t\t\tkeepMounted : true // Better open performance on mobile.\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<NavDrawer />\n\t\t\t\t\t</Drawer>\n\t\t\t\t</Hidden>\n\t\t\t\t<Hidden smDown implementation=\"js\">\n\t\t\t\t\t<Drawer\n\t\t\t\t\t\tclasses={{\n\t\t\t\t\t\t\tpaper : classes.drawerPaper\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tvariant=\"permanent\"\n\t\t\t\t\t\topen\n\t\t\t\t\t>\n\t\t\t\t\t\t<NavDrawer />\n\t\t\t\t\t</Drawer>\n\t\t\t\t</Hidden>\n\t\t\t</nav>\n\t\t\t<main className={classes.content}>\n\t\t\t\t<div className={classes.toolbar} />\n\t\t\t\t{children}\n\t\t\t</main>\n\t\t</div>\n\t);\n}\n\nexport default Navigation;\n","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/reducers/root.js",[],"/home/justin/Documents/Springboard/SECT/tree-markable/client/src/actions/auth.js",["349"],"/**\n * Action creators for handling authentication of user. When user signs in\n * and is authenticated, updates store. Resets store on user sign out.\n * \n * Also updates user store to keep current user synced with authentication.\n */\n\nimport { signUp, signIn, signOut, anonymousAuth, updateEmail, updateProfile } from '../firebase/firebaseAuth';\nimport TreeMarkableApi from '../TreeMarkableApi';\nimport { auth } from '../firebase/firebaseIndex';\nimport {\n\tAUTH_ERROR,\n\tAUTH_USER,\n\tSIGN_OUT_USER,\n\tLOAD_CURR_USER_REQUEST,\n\tLOAD_CURR_USER_SUCCESS,\n\tLOAD_CURR_USER_FAILURE,\n\tLOAD_CURR_USER,\n\tRESET_CURR_USER\n} from './types';\n\nfunction signUpUser(credentials, userData) {\n\tconsole.log('Auth - signUpUser - ', credentials, userData);\n\treturn async function(dispatch) {\n\t\tdispatch({ type: LOAD_CURR_USER_REQUEST });\n\t\ttry {\n\t\t\t// create user in FirebaseAuth\n\t\t\tconst firebaseRes = await signUp(credentials.email, credentials.password);\n\t\t\t// create user in TreeMarkable Database\n\t\t\tconst apiRes = await TreeMarkableApi.registerUser({\n\t\t\t\t...userData,\n\t\t\t\tfirebase_id : firebaseRes.user.uid\n\t\t\t});\n\n\t\t\tawait updateProfile({ displayName: apiRes.username });\n\t\t\tconst currUserData = {\n\t\t\t\t...apiRes,\n\t\t\t\ttoken : firebaseRes.user.refreshToken\n\t\t\t};\n\t\t\tdispatch(\n\t\t\t\tauthUser({\n\t\t\t\t\ttoken : firebaseRes.user.refreshToken\n\t\t\t\t})\n\t\t\t);\n\t\t\tdispatch(loadCurrUser(currUserData));\n\t\t\tdispatch({ type: LOAD_CURR_USER_SUCCESS });\n\t\t} catch (err) {\n\t\t\tconsole.log('signUpUser error', err);\n\t\t\tdispatch(authError(err));\n\t\t\tdispatch({ type: LOAD_CURR_USER_FAILURE });\n\t\t}\n\t};\n}\nfunction signInUser(credentials) {\n\tconsole.log('Auth - signInUser', credentials);\n\n\treturn async function(dispatch) {\n\t\tdispatch({ type: LOAD_CURR_USER_REQUEST });\n\n\t\ttry {\n\t\t\tconst firebaseRes = await signIn(credentials.email, credentials.password);\n\n\t\t\tconst apiRes = await TreeMarkableApi.getUser(firebaseRes.user.displayName);\n\t\t\tconst currUserData = {\n\t\t\t\t...apiRes,\n\t\t\t\ttoken : firebaseRes.user.refreshToken\n\t\t\t};\n\t\t\tdispatch(\n\t\t\t\tauthUser({\n\t\t\t\t\ttoken : firebaseRes.user.refreshToken\n\t\t\t\t})\n\t\t\t);\n\t\t\tdispatch(loadCurrUser(currUserData));\n\t\t\tdispatch({ type: LOAD_CURR_USER_SUCCESS });\n\t\t} catch (err) {\n\t\t\tconsole.log('signInUser error', err);\n\t\t\tdispatch(authError(err));\n\t\t\tdispatch({ type: LOAD_CURR_USER_FAILURE });\n\t\t}\n\t};\n}\n\nfunction signOutUser() {\n\tconsole.log('Auth - signOutUser');\n\treturn async function(dispatch) {\n\t\ttry {\n\t\t\tawait signOut();\n\t\t\tdispatch({ type: SIGN_OUT_USER });\n\t\t\tdispatch({ type: RESET_CURR_USER });\n\t\t} catch (err) {\n\t\t\tconsole.log('signOutUser error', err);\n\t\t\tdispatch(authError(err));\n\t\t}\n\t};\n}\n\nfunction signInAnonUser() {\n\treturn async function(dispatch) {\n\t\ttry {\n\t\t\tconst res = await anonymousAuth();\n\t\t\tdispatch(authUser(res.user));\n\t\t} catch (err) {\n\t\t\tconsole.log('anonAuth error', err);\n\t\t\tdispatch(authError(err));\n\t\t}\n\t};\n}\n\nfunction verifyAuth() {\n\treturn function(dispatch) {\n\t\ttry {\n\t\t\tconst unsubscribe = auth.onAuthStateChanged(async (user) => {\n\t\t\t\tif (user) {\n\t\t\t\t\tconsole.log('verifyAuth - user', user);\n\t\t\t\t\t// const apiRes = await TreeMarkableApi.getUser(\n\t\t\t\t\t// \tuser.displayName\n\t\t\t\t\t// );\n\t\t\t\t\t// const currUserData = {\n\t\t\t\t\t// \t...apiRes,\n\t\t\t\t\t// \ttoken : user.refreshToken\n\t\t\t\t\t// };\n\t\t\t\t\t// dispatch(authUser({ token: user.refreshToken }));\n\t\t\t\t\t// dispatch(loadCurrUser(currUserData));\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tconsole.log('verifyAuth - no user');\n\t\t\t\t\tdispatch(signOutUser());\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn unsubscribe;\n\t\t} catch (err) {\n\t\t\tconsole.log('verifyAuth error', err);\n\t\t\tdispatch(authError(err));\n\t\t}\n\t};\n}\n\nfunction authUser(user) {\n\treturn { type: AUTH_USER, payload: user };\n}\nfunction authError(error) {\n\treturn { type: AUTH_ERROR, payload: error };\n}\nfunction loadCurrUser(user) {\n\treturn { type: LOAD_CURR_USER, payload: user };\n}\n\nexport { signUpUser, signInUser, signOutUser, signInAnonUser, verifyAuth };\n","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/styles/navDrawer.js",[],"/home/justin/Documents/Springboard/SECT/tree-markable/client/src/LandingPage.js",["350","351"],"import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport Grid from '@material-ui/core/Grid';\nimport Hidden from '@material-ui/core/Hidden';\nimport Button from '@material-ui/core/Button';\nimport Divider from '@material-ui/core/Divider';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\n\nimport homeImg from './images/landing-page-main.jpg';\nimport searchTreesImg from './images/search-trees-snip.JPG';\nimport shareTreesImg from './images/share-trees.jpg';\nimport LandingPageElement from './LandingPageElement';\n\nconst useStyles = makeStyles((theme) => {\n\treturn {\n\t\tbackgroundImage : {\n\t\t\theight               : '100%',\n\t\t\tbackgroundImage      : `url(${homeImg})`,\n\t\t\tbackgroundAttachment : 'fixed',\n\t\t\tbackgroundRepeat     : 'no-repeat',\n\t\t\tbackgroundPosition   : 'center',\n\t\t\tbackgroundSize       : 'cover',\n\t\t\tbackgroundColor      : theme.palette.secondary.dark\n\t\t}\n\t};\n});\n\nfunction LandingPage() {\n\tconst theme = useTheme();\n\tconst classes = useStyles(theme);\n\n\tconst lightDivider = (\n\t\t<Grid item xs={12}>\n\t\t\t<Divider\n\t\t\t\tflexItem\n\t\t\t\tstyle={{\n\t\t\t\t\theight          : 2,\n\t\t\t\t\tbackgroundColor : 'rgba(255,255,255, .5)'\n\t\t\t\t}}\n\t\t\t\tvariant=\"middle\"\n\t\t\t/>\n\t\t</Grid>\n\t);\n\n\treturn (\n\t\t<Grid\n\t\t\tcontainer\n\t\t\tclassName={classes.backgroundImage}\n\t\t\talignItems=\"stretch\"\n\t\t>\n\t\t\t<Grid\n\t\t\t\tcontainer\n\t\t\t\titem\n\t\t\t\tstyle={{\n\t\t\t\t\tbackgroundColor : 'rgba(0,0,0,.5)',\n\t\t\t\t\tpaddingTop      : theme.spacing(10),\n\t\t\t\t\tpaddingRight    : theme.spacing(3),\n\t\t\t\t\tpaddingLeft     : theme.spacing(3)\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<Grid\n\t\t\t\t\tcontainer\n\t\t\t\t\titem\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tmarginBottom : theme.spacing(10)\n\t\t\t\t\t}}\n\t\t\t\t\tjustify=\"center\"\n\t\t\t\t>\n\t\t\t\t\t<Typography\n\t\t\t\t\t\talign=\"center\"\n\t\t\t\t\t\tvariant=\"h1\"\n\t\t\t\t\t\tstyle={{ color: 'white', fontWeight: 'bold' }}\n\t\t\t\t\t>\n\t\t\t\t\t\tWELCOME TO TREE-MARKABLE\n\t\t\t\t\t</Typography>\n\t\t\t\t</Grid>\n\t\t\t\t{lightDivider}\n\t\t\t\t<Hidden xlUp>\n\t\t\t\t\t<LandingPageElement\n\t\t\t\t\t\ttitleText=\"Explore\"\n\t\t\t\t\t\tbodyText=\"Find remarkable trees near you or around the\n\t\t\t\t\t\t\tworld!\"\n\t\t\t\t\t\timgSrc={searchTreesImg}\n\t\t\t\t\t\timgAlt=\"search trees map\"\n\t\t\t\t\t\tbuttonLink=\"trees\"\n\t\t\t\t\t\tbuttonText=\"Search Trees\"\n\t\t\t\t\t/>\n\t\t\t\t\t{lightDivider}\n\t\t\t\t\t<LandingPageElement\n\t\t\t\t\t\ttitleText=\"Share\"\n\t\t\t\t\t\tbodyText=\"Add your favorite trees for others to enjoy!\"\n\t\t\t\t\t\timgSrc={shareTreesImg}\n\t\t\t\t\t\timgAlt=\"large tree photo by Rob Mulally\"\n\t\t\t\t\t\timgSide=\"right\"\n\t\t\t\t\t\tbuttonLink=\"trees/new\"\n\t\t\t\t\t\tbuttonText=\"Create a Tree\"\n\t\t\t\t\t/>\n\t\t\t\t\t{lightDivider}\n\t\t\t\t\t<LandingPageElement\n\t\t\t\t\t\ttitleText=\"Collaborate\"\n\t\t\t\t\t\tbodyText=\"Create or join groups to track specific trees for a\n\t\t\t\tpurpose!\"\n\t\t\t\t\t\timgSrc={searchTreesImg}\n\t\t\t\t\t\timgAlt=\"\"\n\t\t\t\t\t\tbuttonLink=\"groups\"\n\t\t\t\t\t\tbuttonText=\"Search Groups\"\n\t\t\t\t\t/>\n\t\t\t\t</Hidden>\n\t\t\t\t<Hidden lgDown>\n\t\t\t\t\t<Grid container>\n\t\t\t\t\t\t<Grid item xs={4}>\n\t\t\t\t\t\t\t<LandingPageElement\n\t\t\t\t\t\t\t\ttitleText=\"Explore\"\n\t\t\t\t\t\t\t\tbodyText=\"Find remarkable trees near you or around the\n\t\t\t\t\t\t\tworld!\"\n\t\t\t\t\t\t\t\timgSrc={searchTreesImg}\n\t\t\t\t\t\t\t\timgAlt=\"search trees map\"\n\t\t\t\t\t\t\t\tbuttonLink=\"trees\"\n\t\t\t\t\t\t\t\tbuttonText=\"Search Trees\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid item xs={4}>\n\t\t\t\t\t\t\t<LandingPageElement\n\t\t\t\t\t\t\t\ttitleText=\"Share\"\n\t\t\t\t\t\t\t\tbodyText=\"Add your favorite trees for others to enjoy!\"\n\t\t\t\t\t\t\t\timgSrc={shareTreesImg}\n\t\t\t\t\t\t\t\timgAlt=\"large tree photo by Rob Mulally\"\n\t\t\t\t\t\t\t\timgSide=\"right\"\n\t\t\t\t\t\t\t\tbuttonLink=\"trees/new\"\n\t\t\t\t\t\t\t\tbuttonText=\"Create a Tree\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid item xs={4}>\n\t\t\t\t\t\t\t<LandingPageElement\n\t\t\t\t\t\t\t\ttitleText=\"Collaborate\"\n\t\t\t\t\t\t\t\tbodyText=\"Create or join groups to track specific trees for a\n\t\t\t\tpurpose!\"\n\t\t\t\t\t\t\t\timgSrc={searchTreesImg}\n\t\t\t\t\t\t\t\timgAlt=\"\"\n\t\t\t\t\t\t\t\tbuttonLink=\"groups\"\n\t\t\t\t\t\t\t\tbuttonText=\"Search Groups\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Hidden>\n\t\t\t</Grid>\n\t\t</Grid>\n\t);\n}\nexport default LandingPage;\n","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/NotFound.js",[],"/home/justin/Documents/Springboard/SECT/tree-markable/client/src/NavDrawer.js",["352"],"/home/justin/Documents/Springboard/SECT/tree-markable/client/src/NavAppBar.js",["353","354","355","356","357","358","359","360"],"import React, { useState } from 'react';\nimport { Link, withRouter, useHistory } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Paper from '@material-ui/core/Paper';\n\nimport Divider from '@material-ui/core/Divider';\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport Grid from '@material-ui/core/Grid';\nimport Hidden from '@material-ui/core/Hidden';\nimport IconButton from '@material-ui/core/IconButton';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport {\n\tMenu as MenuIcon,\n\tAccountCircle as AccountCircleIcon\n} from '@material-ui/icons';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { useTheme } from '@material-ui/core/styles';\n\nimport useStyles from './styles/navDrawer';\nimport { signOutUser } from './actions/auth';\n\nfunction NavAppBar({ handleDrawerToggle, ...props }) {\n\tconst history = useHistory();\n\tconst theme = useTheme();\n\tconst classes = useStyles(theme);\n\tconst isLoggedIn = useSelector((st) => st.auth.authenticated);\n\tconst username = useSelector((st) => st.currUser.username);\n\tconst dispatch = useDispatch();\n\tconst [ anchorEl, setAnchorEl ] = useState(null);\n\tconst open = Boolean(anchorEl);\n\n\tconst handleMenu = (event) => {\n\t\tsetAnchorEl(event.currentTarget);\n\t};\n\n\tconst handleClose = () => {\n\t\tsetAnchorEl(null);\n\t};\n\tconst handleProfileClick = () => {\n\t\thandleClose();\n\t\thistory.push(`/users/${username}`);\n\t};\n\n\tconst handleSignOut = () => {\n\t\thandleClose();\n\t\tdispatch(signOutUser());\n\t\thistory.push('/');\n\t};\n\n\treturn (\n\t\t<AppBar position=\"fixed\" className={classes.appBar}>\n\t\t\t<Toolbar className={classes.toolbar}>\n\t\t\t\t<IconButton\n\t\t\t\t\tcolor=\"inherit\"\n\t\t\t\t\taria-label=\"open drawer\"\n\t\t\t\t\tedge=\"start\"\n\t\t\t\t\tonClick={handleDrawerToggle}\n\t\t\t\t\tclassName={classes.menuButton}\n\t\t\t\t>\n\t\t\t\t\t<MenuIcon />\n\t\t\t\t</IconButton>\n\t\t\t\t<Hidden mdUp implementation=\"js\">\n\t\t\t\t\t<Typography variant=\"h6\" noWrap>\n\t\t\t\t\t\tTree-Markable\n\t\t\t\t\t</Typography>\n\t\t\t\t</Hidden>\n\t\t\t\t<Hidden smDown implementation=\"js\">\n\t\t\t\t\t<div />\n\t\t\t\t</Hidden>\n\t\t\t\t{isLoggedIn ? (\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\taria-label=\"account of current user\"\n\t\t\t\t\t\t\taria-controls=\"menu-appbar\"\n\t\t\t\t\t\t\taria-haspopup=\"true\"\n\t\t\t\t\t\t\tonClick={handleMenu}\n\t\t\t\t\t\t\tcolor=\"inherit\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<AccountCircleIcon />\n\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t<Menu\n\t\t\t\t\t\t\tid=\"menu-appbar\"\n\t\t\t\t\t\t\tanchorEl={anchorEl}\n\t\t\t\t\t\t\tanchorOrigin={{\n\t\t\t\t\t\t\t\tvertical   : 'top',\n\t\t\t\t\t\t\t\thorizontal : 'right'\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tkeepMounted\n\t\t\t\t\t\t\ttransformOrigin={{\n\t\t\t\t\t\t\t\tvertical   : 'top',\n\t\t\t\t\t\t\t\thorizontal : 'right'\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\topen={open}\n\t\t\t\t\t\t\tonClose={handleClose}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<MenuItem onClick={handleProfileClick}>\n\t\t\t\t\t\t\t\tProfile\n\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t\t<MenuItem onClick={handleSignOut}>\n\t\t\t\t\t\t\t\tSign Out\n\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t</Menu>\n\t\t\t\t\t</div>\n\t\t\t\t) : (\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<ButtonGroup size=\"small\" variant=\"text\">\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tstyle={{ color: 'white' }}\n\t\t\t\t\t\t\t\tcomponent={Link}\n\t\t\t\t\t\t\t\tto=\"/signup\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tSign Up\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tstyle={{ color: 'white' }}\n\t\t\t\t\t\t\t\tcomponent={Link}\n\t\t\t\t\t\t\t\tto=\"/signin\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tSign In\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</ButtonGroup>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t</Toolbar>\n\t\t</AppBar>\n\t);\n}\n\nexport default NavAppBar;\n","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/reducers/currUser.js",[],"/home/justin/Documents/Springboard/SECT/tree-markable/client/src/reducers/groups.js",[],"/home/justin/Documents/Springboard/SECT/tree-markable/client/src/reducers/trees.js",[],"/home/justin/Documents/Springboard/SECT/tree-markable/client/src/TreeMarkableApi.js",[],"/home/justin/Documents/Springboard/SECT/tree-markable/client/src/actions/types.js",[],"/home/justin/Documents/Springboard/SECT/tree-markable/client/src/reducers/auth.js",[],"/home/justin/Documents/Springboard/SECT/tree-markable/client/src/firebase/firebaseAuth.js",[],"/home/justin/Documents/Springboard/SECT/tree-markable/client/src/firebase/firebaseIndex.js",[],"/home/justin/Documents/Springboard/SECT/tree-markable/client/src/actions/currUser.js",["361","362","363","364","365"],"/home/justin/Documents/Springboard/SECT/tree-markable/client/src/styles/formStyle.js",[],"/home/justin/Documents/Springboard/SECT/tree-markable/client/src/LandingPageElement.js",["366","367","368"],"import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport Hidden from '@material-ui/core/Hidden';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\n\nimport homeImg from './images/landing-page-main.jpg';\nimport searchTreesImg from './images/search-trees-snip.JPG';\nimport zIndex from '@material-ui/core/styles/zIndex';\n\nconst useStyles = makeStyles({\n\timgPaper : {\n\t\theight    : 300,\n\t\twidth     : 300,\n\t\tzIndex    : 1,\n\t\tposition  : 'relative',\n\t\tboxShadow : `0px 11px 15px -7px rgba(0,0,0,0.10),\n\t\t\t0px 24px 38px 3px rgba(0,0,0,0.60),\n\t\t\t0px 9px 46px 8px rgba(0,0,0,0.51)`\n\t}\n});\n\nfunction LandingPageElement({\n\ttitleText,\n\tbodyText,\n\timgSrc,\n\timgAlt,\n\timgSide = 'left',\n\tbuttonLink,\n\tbuttonText\n}) {\n\tconst classes = useStyles();\n\tconst theme = useTheme();\n\n\tconst imgContainer = (\n\t\t<Grid container justify=\"center\" item xs={12} md={6}>\n\t\t\t<Paper className={classes.imgPaper} elevation={10}>\n\t\t\t\t<Link to={`/${buttonLink}`}>\n\t\t\t\t\t<img\n\t\t\t\t\t\theight=\"100%\"\n\t\t\t\t\t\twidth=\"100%\"\n\t\t\t\t\t\talt={imgAlt}\n\t\t\t\t\t\ttitle={imgAlt}\n\t\t\t\t\t\tsrc={imgSrc}\n\t\t\t\t\t/>\n\t\t\t\t</Link>\n\t\t\t</Paper>\n\t\t</Grid>\n\t);\n\n\tconst textContainer = (\n\t\t<Grid\n\t\t\tcontainer\n\t\t\tjustify=\"center\"\n\t\t\talignItems=\"center\"\n\t\t\titem\n\t\t\txs={12}\n\t\t\tmd={6}\n\t\t\tstyle={{\n\t\t\t\tpaddingTop : theme.spacing(5)\n\t\t\t}}\n\t\t>\n\t\t\t<Grid container justify=\"center\" item xs={12}>\n\t\t\t\t<Typography\n\t\t\t\t\talign=\"center\"\n\t\t\t\t\tvariant=\"h4\"\n\t\t\t\t\tstyle={{ color: 'white' }}\n\t\t\t\t\tgutterBottom\n\t\t\t\t>\n\t\t\t\t\t{bodyText}\n\t\t\t\t</Typography>\n\t\t\t</Grid>\n\t\t\t<Grid container justify=\"center\" item xs={12}>\n\t\t\t\t<Button\n\t\t\t\t\tcomponent={Link}\n\t\t\t\t\tto={`/${buttonLink}`}\n\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\tsize=\"large\"\n\t\t\t\t>\n\t\t\t\t\t{buttonText}\n\t\t\t\t</Button>\n\t\t\t</Grid>\n\t\t</Grid>\n\t);\n\n\treturn (\n\t\t<Grid\n\t\t\tcontainer\n\t\t\titem\n\t\t\tjustify=\"center\"\n\t\t\tstyle={{\n\t\t\t\tpaddingTop    : theme.spacing(5),\n\t\t\t\tpaddingBottom : theme.spacing(8)\n\t\t\t}}\n\t\t>\n\t\t\t<Typography\n\t\t\t\talign=\"center\"\n\t\t\t\tvariant=\"h2\"\n\t\t\t\tstyle={{ color: 'white' }}\n\t\t\t\tgutterBottom\n\t\t\t>\n\t\t\t\t{titleText}\n\t\t\t</Typography>\n\t\t\t<Hidden only={[ 'xs', 'sm', 'xl' ]} implementation=\"js\">\n\t\t\t\t{imgSide === 'right' ? (\n\t\t\t\t\t<Grid container item xs={12}>\n\t\t\t\t\t\t{textContainer}\n\t\t\t\t\t\t{imgContainer}\n\t\t\t\t\t</Grid>\n\t\t\t\t) : (\n\t\t\t\t\t<Grid container item xs={12}>\n\t\t\t\t\t\t{imgContainer}\n\t\t\t\t\t\t{textContainer}\n\t\t\t\t\t</Grid>\n\t\t\t\t)}\n\t\t\t</Hidden>\n\t\t\t<Hidden only={[ 'md', 'lg' ]} implementation=\"js\">\n\t\t\t\t<Grid container item xs={12}>\n\t\t\t\t\t<Grid container justify=\"center\" item xs={12}>\n\t\t\t\t\t\t{imgContainer}\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid container justify=\"center\" item xs={12}>\n\t\t\t\t\t\t{textContainer}\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t</Hidden>\n\t\t</Grid>\n\t);\n}\nexport default LandingPageElement;\n","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/actions/trees.js",[],"/home/justin/Documents/Springboard/SECT/tree-markable/client/src/firebase/firebaseStorage.js",[],"/home/justin/Documents/Springboard/SECT/tree-markable/client/src/actions/groups.js",[],"/home/justin/Documents/Springboard/SECT/tree-markable/client/src/styles/markerCard.js",[],"/home/justin/Documents/Springboard/SECT/tree-markable/client/src/styles/leafletMap.js",[],"/home/justin/Documents/Springboard/SECT/tree-markable/client/src/helpers/formErrorDisplay.js",[],"/home/justin/Documents/Springboard/SECT/tree-markable/client/src/tree/CreateNewTree.js",["369","370","371","372","373","374","375","376"],"import React, { useState, useRef, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Slider from '@material-ui/core/Slider';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Divider from '@material-ui/core/Divider';\nimport Button from '@material-ui/core/Button';\n\nimport TreeMarkableApi from '../TreeMarkableApi';\nimport TreeFormBasicFields from './TreeFormBasicFields';\nimport SelectCoordinates from '../leafletMap/SelectCoordinates';\n\nimport ImagesInput from '../imageHandling/ImagesInput';\nimport { addToSavedTrees } from '../actions/currUser';\nimport { createTree } from '../actions/trees';\n\nconst useStyles = makeStyles({\n\tinnerContent : {\n\t\tpadding : 20\n\t},\n\tform         : {\n\t\tdisplay       : 'flex',\n\t\tflexDirection : 'column',\n\t\t'& div'       : {\n\t\t\tmarginBottom : 10\n\t\t}\n\t}\n});\n\nfunction CreateNewTree() {\n\tconst history = useHistory();\n\tconst dispatch = useDispatch();\n\tconst userId = useSelector((st) => st.currUser.uid);\n\tconst INITIAL_TREE_FORM_DATA = {\n\t\tname            : '',\n\t\tdescription     : '',\n\t\tcommon_name     : '',\n\t\tscientific_name : '',\n\t\theight          : '',\n\t\tdsh             : '',\n\t\tleaf_type       : '',\n\t\tfruit_bearing   : false\n\t};\n\tconst classes = useStyles();\n\tconst [ treeFormData, setTreeFormData ] = useState(INITIAL_TREE_FORM_DATA);\n\tconst [ coordinates, setCoordinates ] = useState({ lat: '', lng: '' });\n\tconst [ imageFiles, setImageFiles ] = useState([]);\n\n\tconsole.log('CreateNewTree Load - coordinates', coordinates);\n\tconsole.log('CreateNewTree Load - imageFiles', imageFiles);\n\n\tconst handleTreeFormChange = (data) => {\n\t\tlet { name, value } = data;\n\t\tif (name === 'fruit_bearing') {\n\t\t\tvalue = data.checked;\n\t\t}\n\n\t\tsetTreeFormData((fData) => ({\n\t\t\t...fData,\n\t\t\t[name] : value\n\t\t}));\n\t};\n\n\tconst handleCoordinatesChange = (data) => {\n\t\tconsole.log('CreateNewTree - handleCoordinatesChange', data);\n\t\tconst { name, value } = data;\n\n\t\tsetCoordinates((fData) => ({\n\t\t\t...fData,\n\t\t\t[name] : value\n\t\t}));\n\t};\n\n\tconst handleMapCoordinatesChange = (coords) => {\n\t\tconsole.log('CreateNewTree - handleMapCoordinatesChange', coords);\n\n\t\tsetCoordinates(coords);\n\t};\n\n\tconst handleImageFilesChange = (files) => {\n\t\tsetImageFiles(files);\n\t};\n\n\t// On form submit, convert data to type expected by server\n\t// and make POST request to create new tree\n\tconst handleSubmit = async (evt) => {\n\t\tevt.preventDefault();\n\n\t\tlet newTree = {\n\t\t\t...treeFormData,\n\t\t\tgeolocation : {\n\t\t\t\tlatitude  : parseFloat(coordinates.lat),\n\t\t\t\tlongitude : parseFloat(coordinates.lng)\n\t\t\t}\n\t\t};\n\n\t\tfor (let field in newTree) {\n\t\t\tif (newTree[field] === '') {\n\t\t\t\tdelete newTree[field];\n\t\t\t}\n\t\t\telse if (field === 'height' || field === 'dsh') {\n\t\t\t\tnewTree[field] = parseFloat(newTree[field]);\n\t\t\t}\n\t\t}\n\t\tconsole.log('CreateNewTree', newTree);\n\t\tconst treeId = await dispatch(createTree(newTree, imageFiles));\n\t\tdispatch(addToSavedTrees(userId, treeId));\n\n\t\tif (treeId) {\n\t\t\tconsole.log('CreateNewTree - treeId', treeId);\n\t\t\thistory.push(`/trees/${treeId}`);\n\t\t}\n\t};\n\n\treturn (\n\t\t<div className={classes.innerContent}>\n\t\t\t<Typography variant=\"h4\" gutterBottom>\n\t\t\t\tCreate New Tree\n\t\t\t</Typography>\n\t\t\t<form onSubmit={handleSubmit} className={classes.form}>\n\t\t\t\t<TreeFormBasicFields formData={treeFormData} onFormChange={handleTreeFormChange} />\n\t\t\t\t<Typography variant=\"h5\" gutterBottom>\n\t\t\t\t\tTree Location\n\t\t\t\t</Typography>\n\t\t\t\t<SelectCoordinates\n\t\t\t\t\tformData={coordinates}\n\t\t\t\t\tonCoordinatesChange={handleCoordinatesChange}\n\t\t\t\t\tonMapCoordinatesChange={handleMapCoordinatesChange}\n\t\t\t\t/>\n\t\t\t\t<Divider variant=\"middle\" style={{ marginTop: 15, marginBottom: 15 }} />\n\t\t\t\t<div>\n\t\t\t\t\t<Typography variant=\"h5\" gutterBottom>\n\t\t\t\t\t\tAdd Images\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<ImagesInput onImageFilesChange={handleImageFilesChange} />\n\t\t\t\t\t<Divider variant=\"middle\" style={{ marginBottom: 15 }} />\n\t\t\t\t</div>\n\n\t\t\t\t<Button color=\"secondary\" variant=\"contained\" type=\"submit\">\n\t\t\t\t\tCreate Tree\n\t\t\t\t</Button>\n\t\t\t</form>\n\t\t</div>\n\t);\n}\nexport default CreateNewTree;\n","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/tree/TreeFormBasicFields.js",["377","378","379","380","381","382","383","384","385","386","387"],"import React, { useState, useRef, useEffect } from 'react';\n\nimport Typography from '@material-ui/core/Typography';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\n\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Slider from '@material-ui/core/Slider';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Button from '@material-ui/core/Button';\n\nimport useStyles from '../styles/formStyle';\nimport TreeMarkableApi from '../TreeMarkableApi';\nimport SelectLocationMap from '../leafletMap/LeafletMap';\nimport { treesRef, uploadImagesToFirebase } from '../firebase/firebaseStorage';\nimport ImagesInput from '../imageHandling/ImagesInput';\n\nfunction TreeFormBasicFields({ edit = false, formData, onFormChange }) {\n\tconst classes = useStyles();\n\n\tconst handleChange = (evt) => {\n\t\tonFormChange(evt.target);\n\t};\n\n\treturn (\n\t\t<Grid container className={classes.form}>\n\t\t\t<TextField\n\t\t\t\tid=\"name\"\n\t\t\t\tname=\"name\"\n\t\t\t\tlabel=\"Tree Name\"\n\t\t\t\tplaceholder=\"Hyperion\"\n\t\t\t\tonChange={handleChange}\n\t\t\t\tvalue={formData.name}\n\t\t\t\trequired={!edit}\n\t\t\t/>\n\t\t\t<TextField\n\t\t\t\tid=\"description\"\n\t\t\t\tname=\"description\"\n\t\t\t\tlabel=\"Description\"\n\t\t\t\tmultiline\n\t\t\t\tplaceholder=\"World's tallest known living tree!\"\n\t\t\t\tonChange={handleChange}\n\t\t\t\tvalue={formData.description}\n\t\t\t/>\n\n\t\t\t<TextField\n\t\t\t\tid=\"common_name\"\n\t\t\t\tname=\"common_name\"\n\t\t\t\tlabel=\"Species Common Name\"\n\t\t\t\tplaceholder=\"Bigleaf Maple\"\n\t\t\t\tonChange={handleChange}\n\t\t\t\tvalue={formData.common_name}\n\t\t\t/>\n\n\t\t\t<TextField\n\t\t\t\tid=\"scientific_name\"\n\t\t\t\tname=\"scientific_name\"\n\t\t\t\tlabel=\"Species Scientifc Name\"\n\t\t\t\tplaceholder=\"Acer Macrophyllum\"\n\t\t\t\tonChange={handleChange}\n\t\t\t\tvalue={formData.scientific_name}\n\t\t\t/>\n\n\t\t\t<TextField\n\t\t\t\tid=\"height\"\n\t\t\t\tname=\"height\"\n\t\t\t\tlabel=\"Height (ft.)\"\n\t\t\t\ttype=\"number\"\n\t\t\t\tplaceholder=\"From base to the tallest branch.\"\n\t\t\t\tinputProps={{ min: 0, max: 500, step: 0.01 }}\n\t\t\t\tonChange={handleChange}\n\t\t\t\tvalue={formData.height}\n\t\t\t/>\n\t\t\t<TextField\n\t\t\t\tid=\"dsh\"\n\t\t\t\tname=\"dsh\"\n\t\t\t\tlabel=\"Diameter Standard Height (in.)\"\n\t\t\t\ttype=\"number\"\n\t\t\t\tinputProps={{ min: 0, max: 500, step: 0.01 }}\n\t\t\t\tplaceholder=\"Trunk circumference 4.5ft above the ground.\"\n\t\t\t\tonChange={handleChange}\n\t\t\t\tvalue={formData.dsh}\n\t\t\t/>\n\t\t\t<TextField\n\t\t\t\tid=\"leaf_type\"\n\t\t\t\tname=\"leaf_type\"\n\t\t\t\tlabel=\"Leaf Type\"\n\t\t\t\tselect\n\t\t\t\tonChange={handleChange}\n\t\t\t\tvalue={formData.leaf_type}\n\t\t\t>\n\t\t\t\t<MenuItem value=\"\">Unknown</MenuItem>\n\t\t\t\t<MenuItem value=\"deciduous\">Deciduous</MenuItem>\n\t\t\t\t<MenuItem value=\"evergreen\">Evergreen</MenuItem>\n\t\t\t</TextField>\n\t\t\t<FormControlLabel\n\t\t\t\tcontrol={\n\t\t\t\t\t<Checkbox\n\t\t\t\t\t\tid=\"fruit_bearing\"\n\t\t\t\t\t\tname=\"fruit_bearing\"\n\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\tchecked={formData.fruit_bearing}\n\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t/>\n\t\t\t\t}\n\t\t\t\tlabel=\"Fruit Bearing? Consider adding what type of fruit to the description!\"\n\t\t\t/>\n\t\t</Grid>\n\t);\n}\nexport default TreeFormBasicFields;\n","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/group/CreateNewGroup.js",["388"],"import React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\n\nimport Divider from '@material-ui/core/Divider';\nimport Button from '@material-ui/core/Button';\n\nimport GroupFormBasicFields from './GroupFormBasicFields';\n\nimport ImagesInput from '../imageHandling/ImagesInput';\nimport { addToFollowedGroups } from '../actions/currUser';\nimport { createGroup } from '../actions/groups';\n\nconst useStyles = makeStyles({\n\tinnerContent : {\n\t\tpadding : 20\n\t},\n\tform         : {\n\t\tdisplay       : 'flex',\n\t\tflexDirection : 'column',\n\t\t'& div'       : {\n\t\t\tmarginBottom : 10\n\t\t}\n\t}\n});\n\nfunction CreateNewGroup() {\n\tconst classes = useStyles();\n\tconst dispatch = useDispatch();\n\tconst history = useHistory();\n\tconst userId = useSelector((st) => st.currUser.uid);\n\tconst INITIAL_GROUP_FORM_DATA = {\n\t\tname        : '',\n\t\tdescription : '',\n\t\tis_public   : true\n\t};\n\tconst [ groupFormData, setGroupFormData ] = useState(INITIAL_GROUP_FORM_DATA);\n\tconst [ imageFiles, setImageFiles ] = useState([]);\n\n\tconst handleGroupFormChange = (data) => {\n\t\tlet { name, value } = data;\n\t\tif (name === 'is_public') {\n\t\t\tvalue = data.checked;\n\t\t}\n\n\t\tsetGroupFormData((fData) => ({\n\t\t\t...fData,\n\t\t\t[name] : value\n\t\t}));\n\t};\n\n\tconst handleImageFilesChange = (files) => {\n\t\tconsole.log('handleImageFilesChange', files);\n\t\tsetImageFiles(files);\n\t};\n\n\t// On form submit, convert data to type expected by server\n\t// and make POST request to create new group\n\t// Add group to creator's followed groups\n\tconst handleSubmit = async (evt) => {\n\t\tevt.preventDefault();\n\n\t\tlet newGroup = { ...groupFormData };\n\n\t\tfor (let field in newGroup) {\n\t\t\tif (newGroup[field] === '') {\n\t\t\t\tdelete newGroup[field];\n\t\t\t}\n\t\t}\n\n\t\tconsole.log('new group', newGroup);\n\t\tconst groupId = await dispatch(createGroup(newGroup, imageFiles));\n\t\tdispatch(addToFollowedGroups(userId, groupId, true));\n\n\t\tif (groupId) {\n\t\t\tconsole.log('CreateNewGroup - groupId', groupId);\n\t\t\thistory.push(`/groups/${groupId}`);\n\t\t}\n\t};\n\n\treturn (\n\t\t<div className={classes.innerContent}>\n\t\t\t<Typography variant=\"h4\" gutterBottom>\n\t\t\t\tCreate New Group\n\t\t\t</Typography>\n\t\t\t<form onSubmit={handleSubmit} className={classes.form}>\n\t\t\t\t<GroupFormBasicFields formData={groupFormData} onFormChange={handleGroupFormChange} />\n\t\t\t\t<Divider variant=\"middle\" style={{ marginTop: 15, marginBottom: 15 }} />\n\t\t\t\t<div>\n\t\t\t\t\t<Typography variant=\"h5\" gutterBottom>\n\t\t\t\t\t\tGroup Header Image\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<ImagesInput allowMultiple={false} onImageFilesChange={handleImageFilesChange} />\n\t\t\t\t\t<Divider variant=\"middle\" style={{ marginBottom: 15 }} />\n\t\t\t\t</div>\n\n\t\t\t\t<Button color=\"secondary\" variant=\"contained\" type=\"submit\">\n\t\t\t\t\tCreate Group\n\t\t\t\t</Button>\n\t\t\t</form>\n\t\t</div>\n\t);\n}\nexport default CreateNewGroup;\n","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/tree/ExploreTrees.js",["389","390","391","392","393","394","395","396","397"],"import React, { useState, useRef, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Box from '@material-ui/core/Box';\n\nimport { getTrees } from '../actions/trees';\nimport TreeSearchForm from './TreeSearchForm';\nimport TreeList from './TreeList';\nimport LeafletMap from '../leafletMap/LeafletMap';\n\nfunction TabPanel(props) {\n\tconst { children, value, index, ...other } = props;\n\n\treturn (\n\t\t<div\n\t\t\trole=\"tabpanel\"\n\t\t\thidden={value !== index}\n\t\t\tid={`map-list-tabpanel-${index}`}\n\t\t\taria-labelledby={`map-list-tab-${index}`}\n\t\t\t{...other}\n\t\t>\n\t\t\t{value === index && <Box>{children}</Box>}\n\t\t</div>\n\t);\n}\n\nfunction a11yProps(index) {\n\treturn {\n\t\tid              : `map-list-tab-${index}`,\n\t\t'aria-controls' : `map-list-tabpanel-${index}`\n\t};\n}\n\nconst useStyles = makeStyles((theme) => ({\n\tindicator    : {\n\t\tbackgroundColor : theme.palette.secondary.main\n\t},\n\tinnerContent : {\n\t\tbackgroundColor : theme.palette.background.paper,\n\t\tpadding         : 20\n\t}\n}));\n\nfunction ExploreTrees() {\n\tconst theme = useTheme();\n\tconst classes = useStyles(theme);\n\tconst dispatch = useDispatch();\n\n\tconst [ isLoading, setIsLoading ] = useState(true);\n\tconst [ value, setValue ] = useState(0);\n\tconst [ centerOnUser, setCenterOnUser ] = useState(false);\n\tconst [ mapCenter, setMapCenter ] = useState([ 48.09933034129291, -123.42563836030864 ]);\n\n\t// Changes visible panel between Map and List\n\tconst handleChange = (event, newValue) => {\n\t\tsetValue(newValue);\n\t};\n\n\t// Get trees from API\n\tuseEffect(\n\t\t() => {\n\t\t\tif (isLoading) {\n\t\t\t\tdispatch(getTrees());\n\t\t\t\tsetIsLoading(false);\n\t\t\t}\n\t\t},\n\t\t[ isLoading, dispatch ]\n\t);\n\n\tlet trees = useSelector((st) => Object.values(st.trees.entities).map((tree) => tree));\n\n\tif (isLoading) {\n\t\treturn <div>Loading</div>;\n\t}\n\n\treturn (\n\t\t<div className={classes.innerContent}>\n\t\t\t<Typography variant=\"h3\" gutterBottom>\n\t\t\t\tExplore Trees\n\t\t\t</Typography>\n\t\t\t<Typography gutterBottom>\n\t\t\t\t**DISCLAIMER: Some trees shown may be on private property. Please use your discretion when visiting any\n\t\t\t\tgiven tree.\n\t\t\t</Typography>\n\n\t\t\t<TreeSearchForm mapCenter={mapCenter} setCenterOnUser={setCenterOnUser} />\n\t\t\t<AppBar position=\"static\" color=\"default\">\n\t\t\t\t<Tabs\n\t\t\t\t\tvalue={value}\n\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\tindicatorColor=\"secondary\"\n\t\t\t\t\ttextColor=\"secondary\"\n\t\t\t\t\tvariant=\"fullWidth\"\n\t\t\t\t\taria-label=\"map and list view tabs\"\n\t\t\t\t>\n\t\t\t\t\t<Tab label=\"Map\" {...a11yProps(0)} />\n\t\t\t\t\t<Tab label=\"List\" {...a11yProps(1)} />\n\t\t\t\t</Tabs>\n\t\t\t</AppBar>\n\t\t\t<Paper elevation={4}>\n\t\t\t\t<TabPanel value={value} index={0}>\n\t\t\t\t\t<LeafletMap\n\t\t\t\t\t\tmapCenter={mapCenter}\n\t\t\t\t\t\tsetMapCenter={setMapCenter}\n\t\t\t\t\t\tuseCenterOnUser={centerOnUser}\n\t\t\t\t\t\tsetCenterOnUser={setCenterOnUser}\n\t\t\t\t\t\ttrees={trees}\n\t\t\t\t\t/>\n\t\t\t\t</TabPanel>\n\t\t\t\t<TabPanel value={value} index={1}>\n\t\t\t\t\t<Box\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\theight : `${120 + Math.min(trees.length, 10) * 52}px`,\n\t\t\t\t\t\t\twidth  : '100%'\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<TreeList trees={trees} />\n\t\t\t\t\t</Box>\n\t\t\t\t</TabPanel>\n\t\t\t</Paper>\n\t\t</div>\n\t);\n}\nexport default ExploreTrees;\n","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/group/ExploreGroups.js",["398","399","400","401","402","403","404","405","406","407","408","409","410","411","412","413"],"import React, { useState, useRef, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport SwipeableViews from 'react-swipeable-views';\n\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Box from '@material-ui/core/Box';\n\nimport { getGroups } from '../actions/groups';\nimport GroupSearchForm from './GroupSearchForm';\nimport GroupList from './GroupList';\n\nconst useStyles = makeStyles((theme) => ({\n\tinnerContent : {\n\t\tbackgroundColor : theme.palette.background.paper,\n\t\tpadding         : 20\n\t}\n}));\n\nfunction ExploreGroups() {\n\tconst theme = useTheme();\n\tconst classes = useStyles(theme);\n\tconst dispatch = useDispatch();\n\n\tconst [ isLoading, setIsLoading ] = useState(true);\n\n\tuseEffect(\n\t\t() => {\n\t\t\tif (isLoading) {\n\t\t\t\tdispatch(getGroups());\n\t\t\t\tsetIsLoading(false);\n\t\t\t}\n\t\t},\n\t\t[ isLoading, dispatch ]\n\t);\n\n\tlet groups = useSelector((st) => Object.values(st.groups.entities).map((group) => group));\n\n\tconsole.log('ExploreGroups - groups', groups);\n\n\tif (isLoading) {\n\t\treturn <div>Loading</div>;\n\t}\n\n\treturn (\n\t\t<div className={classes.innerContent}>\n\t\t\t<GroupSearchForm />\n\n\t\t\t<GroupList groups={groups} />\n\t\t</div>\n\t);\n}\nexport default ExploreGroups;\n","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/tree/TreePage.js",["414","415","416"],"import React, { useState, useRef, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useParams } from 'react-router-dom';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n\nimport { getTree } from '../actions/trees';\nimport Carousel from '../imageHandling/Carousel';\nimport LeafletMap from '../leafletMap/LeafletMap';\nimport CommentsContainer from '../comment/CommentsContainer';\nimport { treesRef, downloadImageUrlsFromFirebase } from '../firebase/firebaseStorage';\nimport FavoriteIconBtn from '../iconBtns/FavoriteIconBtn';\nimport EditIconBtn from '../iconBtns/EditIconBtn';\n\nconst useStyles = makeStyles({\n\tinnerContent   : {\n\t\tpadding : 20\n\t},\n\ttableContainer : {\n\t\tmarginRight : 10\n\t}\n});\n\nfunction TreePage() {\n\tconsole.log('TreePage - start');\n\tconst classes = useStyles();\n\tconst { id } = useParams();\n\tconst tree = useSelector((st) => st.trees.entities[id]);\n\tconst uid = useSelector((st) => st.currUser.uid);\n\tconst isCreator = tree.creator === uid;\n\tconst [ isLoading, setIsLoading ] = useState(true);\n\tconst [ imageUrls, setImageUrls ] = useState({\n\t\tprimary : '',\n\t\talbum   : []\n\t});\n\n\tconst dispatch = useDispatch();\n\n\t// If Tree not already in store, request it from API\n\tuseEffect(\n\t\t() => {\n\t\t\tconsole.log('TreePage UseEffect tree - Start');\n\n\t\t\tconst getTreeFromApi = async (treeId) => {\n\t\t\t\tdispatch(getTree(treeId));\n\t\t\t};\n\t\t\tif (!tree) {\n\t\t\t\tgetTreeFromApi(id);\n\t\t\t}\n\t\t},\n\t\t[ tree, id, dispatch ]\n\t);\n\n\t// Get Tree Images from FirebaseStorage\n\tuseEffect(\n\t\t() => {\n\t\t\tconsole.log('TreePage UseEffect Images - Start');\n\t\t\tconst getImageUrls = async (collectionRef, id) => {\n\t\t\t\tconst imgUrls = await downloadImageUrlsFromFirebase(collectionRef, id);\n\t\t\t\tconsole.log('TreePage UseEffect - ', imgUrls);\n\t\t\t\tif (imgUrls) {\n\t\t\t\t\tsetImageUrls(imgUrls);\n\t\t\t\t}\n\t\t\t\tsetIsLoading(false);\n\t\t\t};\n\n\t\t\tif (isLoading) {\n\t\t\t\tgetImageUrls(treesRef, id);\n\t\t\t}\n\t\t},\n\t\t[ isLoading, id ]\n\t);\n\n\tif (isLoading) {\n\t\treturn <div>Loading</div>;\n\t}\n\n\tconst displayImages = (imageUrls) => {\n\t\tif (imageUrls.primary === '') return null;\n\t\telse {\n\t\t\treturn <Carousel imageUrls={[ imageUrls.primary, ...imageUrls.album ]} />;\n\t\t}\n\t};\n\n\tconst treeFieldLabels = [\n\t\t{\n\t\t\tfield : 'common_name',\n\t\t\tlabel : 'Common Name',\n\t\t\tvalue : tree.common_name\n\t\t},\n\t\t{\n\t\t\tfield : 'scientific_name',\n\t\t\tlabel : 'Scientific Name',\n\t\t\tvalue : tree.scientifc_name && <i>{tree.scientific_name}</i>\n\t\t},\n\t\t{ field: 'height', label: 'Height (ft.)', value: tree.height },\n\t\t{ field: 'dsh', label: 'DSH (in.)', value: tree.dsh },\n\t\t{ field: 'leaf_type', label: 'Leaf Type', value: tree.leaf_type },\n\t\t{\n\t\t\tfield : 'fruit_bearing',\n\t\t\tlabel : 'Fruit Bearing',\n\t\t\tvalue : tree.fruit_bearing && 'Yes'\n\t\t},\n\t\t{\n\t\t\tfield : 'geolocation',\n\t\t\tlabel : 'Coordinates',\n\t\t\tvalue : `(${tree.geolocation.y}, ${tree.geolocation.x})`\n\t\t}\n\t];\n\n\treturn (\n\t\t<Grid container direction=\"column\">\n\t\t\t<Grid item xs={12}>\n\t\t\t\t{displayImages(imageUrls)}\n\t\t\t</Grid>\n\t\t\t<Grid className={classes.innerContent} container item xs={12} alignItems=\"flex-start\">\n\t\t\t\t<Grid container item xs={12} md={6}>\n\t\t\t\t\t<Grid container item xs={12} wrap=\"nowrap\">\n\t\t\t\t\t\t<Typography variant=\"h3\" gutterBottom>\n\t\t\t\t\t\t\t{tree.name}\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t<FavoriteIconBtn treeId={tree.id} />\n\t\t\t\t\t\t\t{uid === tree.creator && <EditIconBtn type={'trees'} id={tree.id} />}\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t{tree.description && (\n\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t<Typography gutterBottom style={{ paddingRight: 10, whiteSpace: 'pre-line' }}>\n\t\t\t\t\t\t\t\t{tree.description}\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t)}\n\t\t\t\t\t<Grid container item>\n\t\t\t\t\t\t<TableContainer className={classes.tableContainer}>\n\t\t\t\t\t\t\t<Table aria-label=\"tree details\">\n\t\t\t\t\t\t\t\t<TableBody>\n\t\t\t\t\t\t\t\t\t{treeFieldLabels.map((item, idx) => {\n\t\t\t\t\t\t\t\t\t\treturn item.value ? (\n\t\t\t\t\t\t\t\t\t\t\t<TableRow key={item.label}>\n\t\t\t\t\t\t\t\t\t\t\t\t<TableCell>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<b>{item.label}</b>\n\t\t\t\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t\t\t\t<TableCell>{item.value}</TableCell>\n\t\t\t\t\t\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t\t\t\t\t\t) : null;\n\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t</TableBody>\n\t\t\t\t\t\t\t</Table>\n\t\t\t\t\t\t</TableContainer>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item xs={12} md={6}>\n\t\t\t\t\t<Paper elevation={3}>\n\t\t\t\t\t\t<LeafletMap\n\t\t\t\t\t\t\ttrees={[ tree ]}\n\t\t\t\t\t\t\tmapCenter={[ tree.geolocation.y, tree.geolocation.x ]}\n\t\t\t\t\t\t\tallowWheelZoom={false}\n\t\t\t\t\t\t\tuseSearchComponent={false}\n\t\t\t\t\t\t\tsmall={true}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Paper>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item xs={12} style={{ marginTop: 15 }}>\n\t\t\t\t\t<CommentsContainer type=\"trees\" id={tree.id} isCreatorOrModerator={isCreator} />\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t</Grid>\n\t);\n}\nexport default TreePage;\n","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/tree/EditTree.js",[],"/home/justin/Documents/Springboard/SECT/tree-markable/client/src/group/GroupPage.js",["417","418","419","420","421","422","423","424","425","426","427","428"],"import React, { useState, useRef, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useParams, useHistory } from 'react-router-dom';\n\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Button from '@material-ui/core/Button';\n\nimport { getGroup, getGroups } from '../actions/groups';\nimport SelectLocationMap from '../leafletMap/LeafletMap';\nimport ImagesInput from '../imageHandling/ImagesInput';\nimport Carousel from '../imageHandling/Carousel';\nimport CommentsContainer from '../comment/CommentsContainer';\nimport { groupsRef, downloadImageUrlsFromFirebase } from '../firebase/firebaseStorage';\nimport FollowGroupIconBtn from '../iconBtns/FollowGroupIconBtn';\nimport EditIconBtn from '../iconBtns/EditIconBtn';\nimport LeafletMap from '../leafletMap/LeafletMap';\nimport GroupTabPanel from '../group/GroupTabPanel';\n\nconst useStyles = makeStyles((theme) => {\n\treturn {\n\t\tinnerContent   : {\n\t\t\tpadding : 15\n\t\t},\n\t\ttableContainer : {\n\t\t\tmarginRight : 10\n\t\t}\n\t};\n});\n\nfunction GroupPage() {\n\tconsole.log('GroupPage - start');\n\n\tconst classes = useStyles();\n\tconst history = useHistory();\n\tconst theme = useTheme();\n\tconst { id } = useParams();\n\tconst isAuthenticated = useSelector((st) => st.auth.authenticated);\n\tconst group = useSelector((st) => st.groups.entities[id]);\n\tconst uid = useSelector((st) => st.currUser.uid);\n\tconst error = useSelector((st) => st.groups.error);\n\tconst isCreator = uid === group.creator;\n\tconst isModerator = group.members.find((member) => member.is_moderator === true && member.user_id === uid);\n\n\tconsole.log('GroupPage - group', group);\n\tconst [ isLoading, setIsLoading ] = useState(true);\n\tconst [ imageUrls, setImageUrls ] = useState({\n\t\tprimary : '',\n\t\talbum   : []\n\t});\n\n\tconst dispatch = useDispatch();\n\n\t// Get specific group from API\n\tuseEffect(\n\t\t() => {\n\t\t\tconst getGroupFromApi = async (groupId) => {\n\t\t\t\tdispatch(getGroup(groupId));\n\t\t\t};\n\t\t\tgetGroupFromApi(id);\n\t\t},\n\t\t[ id, error, dispatch, history ]\n\t);\n\n\t// Get Group Images from FirebaseStorage\n\tuseEffect(\n\t\t() => {\n\t\t\tconst getImageUrls = async (collectionRef, id) => {\n\t\t\t\tconst imgUrls = await downloadImageUrlsFromFirebase(collectionRef, id);\n\t\t\t\tconsole.log('imgUrls', imgUrls);\n\t\t\t\tif (imgUrls) {\n\t\t\t\t\tsetImageUrls(imgUrls);\n\t\t\t\t}\n\t\t\t\tsetIsLoading(false);\n\t\t\t};\n\n\t\t\tif (isLoading) {\n\t\t\t\tgetImageUrls(groupsRef, id);\n\t\t\t}\n\t\t},\n\t\t[ isLoading, id ]\n\t);\n\n\tif (isLoading) {\n\t\treturn <div>Loading</div>;\n\t}\n\n\tconst displayImages = (imageUrls) => {\n\t\tif (imageUrls.primary === '') return null;\n\t\telse {\n\t\t\treturn (\n\t\t\t\t<Grid\n\t\t\t\t\tcontainer\n\t\t\t\t\tjustify=\"center\"\n\t\t\t\t\talignItems=\"flex-end\"\n\t\t\t\t\titem\n\t\t\t\t\txs={12}\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\theight             : 300,\n\t\t\t\t\t\tbackgroundImage    : `url(${imageUrls.primary})`,\n\t\t\t\t\t\tbackgroundRepeat   : 'no-repeat',\n\t\t\t\t\t\tbackgroundPosition : 'center',\n\t\t\t\t\t\tbackgroundSize     : 'cover',\n\t\t\t\t\t\tbackgroundColor    : theme.palette.secondary.dark\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<div style={{ height: 300 }} />\n\t\t\t\t</Grid>\n\t\t\t);\n\t\t}\n\t};\n\n\treturn (\n\t\t<Grid className=\"GroupPage\" container direction=\"column\">\n\t\t\t<Grid item xs={12}>\n\t\t\t\t{displayImages(imageUrls)}\n\t\t\t</Grid>\n\n\t\t\t<Grid className={classes.innerContent} container item xs={12} alignItems=\"flex-start\">\n\t\t\t\t<Grid container item xs={12} wrap=\"nowrap\" justify=\"space-between\">\n\t\t\t\t\t<Typography variant=\"h3\" gutterBottom>\n\t\t\t\t\t\t{group.name}\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t{isAuthenticated && !isCreator && <FollowGroupIconBtn groupId={group.id} />}\n\t\t\t\t\t\t{isCreator && <EditIconBtn type={'groups'} id={group.id} />}\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t\t{group.description && (\n\t\t\t\t\t<Grid item xs={12} style={{ marginBottom: 15 }}>\n\t\t\t\t\t\t<Typography gutterBottom style={{ whiteSpace: 'pre-line' }}>\n\t\t\t\t\t\t\t{group.description}\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t</Grid>\n\t\t\t\t)}\n\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t<GroupTabPanel isCreator={isCreator} group={group} imageUrls={imageUrls} />\n\t\t\t\t</Grid>\n\n\t\t\t\t<Grid item xs={12} style={{ marginTop: 15 }}>\n\t\t\t\t\t<CommentsContainer type=\"groups\" id={group.id} isCreatorOrModerator={isCreator || isModerator} />\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t</Grid>\n\t);\n}\nexport default GroupPage;\n","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/user/SignIn.js",["429","430","431","432","433"],"import React, { useState, useEffect } from 'react';\nimport { Link as RouterLink, useHistory } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Link from '@material-ui/core/Link';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\nimport { signInUser, signOutUser } from '../actions/auth';\nimport { errorDisplay } from '../helpers/formErrorDisplay';\nimport SignInForm from './SignInForm';\n\nconst useStyles = makeStyles({\n\tinnerContent : {\n\t\tpadding : 20\n\t},\n\tform         : {\n\t\tdisplay       : 'flex',\n\t\tflexDirection : 'column',\n\t\t'& div'       : {\n\t\t\tmarginBottom : 10\n\t\t}\n\t}\n});\n\nfunction SignIn() {\n\tconsole.log('SignIn Component - Start');\n\tconst classes = useStyles();\n\tconst theme = useTheme();\n\tconst dispatch = useDispatch();\n\tconst history = useHistory();\n\tconst isAuthenticated = useSelector((st) => st.auth.authenticated);\n\tconst username = useSelector((st) => st.currUser.username);\n\tconst status = useSelector((st) => st.currUser.status);\n\n\t// Avoid updating during an existing state transition by checking\n\t// auth status in useEffect. Also redirect already logged in users\n\tuseEffect(\n\t\t() => {\n\t\t\t// If user is authenticated, push to user page\n\t\t\tif ((isAuthenticated && status === 'idle') || status === 'successful') {\n\t\t\t\thistory.push(`/users/${username}`);\n\t\t\t}\n\t\t},\n\t\t[ isAuthenticated, username, history, status ]\n\t);\n\n\tconst submitFormData = (formData) => {\n\t\tdispatch(signInUser(formData));\n\t};\n\n\treturn (\n\t\t<Grid container className={classes.innerContent}>\n\t\t\t<Grid item xs={12}>\n\t\t\t\t<Typography variant=\"h3\" gutterBottom>\n\t\t\t\t\tSign In\n\t\t\t\t</Typography>\n\t\t\t\t<Typography gutterBottom>\n\t\t\t\t\tDon't have an account? Sign up{' '}\n\t\t\t\t\t<Link component={RouterLink} to=\"/signup\" style={{ color: theme.palette.primary.light }}>\n\t\t\t\t\t\there\n\t\t\t\t\t</Link>{' '}\n\t\t\t\t\t, or browse the publically available trees and groups.\n\t\t\t\t</Typography>\n\n\t\t\t\t<SignInForm submitFormData={submitFormData} />\n\t\t\t</Grid>\n\t\t</Grid>\n\t);\n}\nexport default SignIn;\n","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/user/EditUser.js",["434"],"/home/justin/Documents/Springboard/SECT/tree-markable/client/src/user/SignUp.js",["435","436","437","438","439","440","441"],"import React, { useState, useEffect } from 'react';\nimport { Link as RouterLink, useHistory } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Link from '@material-ui/core/Link';\n\nimport { signUpUser } from '../actions/auth';\nimport { errorDisplay } from '../helpers/formErrorDisplay';\nimport SignUpForm from './SignUpForm';\nimport SelectCoordinates from '../leafletMap/SelectCoordinates';\nimport { getUserFromApi } from '../actions/currUser';\n\nconst useStyles = makeStyles({\n\tinnerContent : {\n\t\tpadding : 20\n\t},\n\tform         : {\n\t\tdisplay       : 'flex',\n\t\tflexDirection : 'column',\n\t\t'& div'       : {\n\t\t\tmarginBottom : 10\n\t\t}\n\t}\n});\n\nfunction SignUp() {\n\tconst classes = useStyles();\n\tconst theme = useTheme();\n\tconst history = useHistory();\n\tconst dispatch = useDispatch();\n\tconst isAuthenticated = useSelector((st) => st.auth.authenticated);\n\tconst username = useSelector((st) => st.currUser.username);\n\n\t// Avoid updating during an existing state transition by checking\n\t// auth status in useEffect\n\tuseEffect(\n\t\t() => {\n\t\t\t// If user is authenticated, push to user page\n\t\t\tif (isAuthenticated) {\n\t\t\t\thistory.push(`/users/${username}`);\n\t\t\t}\n\t\t},\n\t\t[ isAuthenticated, username ]\n\t);\n\n\tconst submitFormData = (formData) => {\n\t\t// email and password required by Firebase Authentication\n\t\tconst credentials = {\n\t\t\temail    : formData.email,\n\t\t\tpassword : formData.password\n\t\t};\n\t\t// remove password for TreeMarkableApi user creation\n\t\tconst userData = { ...formData };\n\t\tdelete userData.password;\n\n\t\tdispatch(signUpUser(credentials, userData));\n\t};\n\n\treturn (\n\t\t<Grid container className={classes.innerContent}>\n\t\t\t<Grid item xs={12}>\n\t\t\t\t<Typography variant=\"h3\" gutterBottom>\n\t\t\t\t\tSign Up\n\t\t\t\t</Typography>\n\t\t\t\t<Typography gutterBottom>\n\t\t\t\t\tAlready have an account? Sign in{' '}\n\t\t\t\t\t<Link component={RouterLink} to=\"/signin\" style={{ color: theme.palette.primary.light }}>\n\t\t\t\t\t\there\n\t\t\t\t\t</Link>.\n\t\t\t\t</Typography>\n\t\t\t\t<Grid item>\n\t\t\t\t\t<SignUpForm submitFormData={submitFormData} />\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t</Grid>\n\t);\n}\n\nexport default SignUp;\n","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/user/UserProfilePage.js",["442","443","444","445","446","447","448","449","450","451"],"import React from 'react';\nimport { Link as RouterLink, useParams, useHistory } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\n\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport Link from '@material-ui/core/Link';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Paper from '@material-ui/core/Paper';\n\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Hidden from '@material-ui/core/Hidden';\nimport Button from '@material-ui/core/Button';\nimport Divider from '@material-ui/core/Divider';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\n\nimport profileHeaderImg from '../images/profile-page-header.jpg';\nimport CurrUserInfo from './CurrUserInfo';\n\nconst useStyles = makeStyles((theme) => ({\n\taccordianContainer  : {\n\t\twidth : '100%'\n\t},\n\theading             : {\n\t\tfontSize   : theme.typography.pxToRem(15),\n\t\tfontWeight : theme.typography.fontWeightRegular\n\t},\n\theaderImgBackground : {\n\t\theight             : 300,\n\t\tbackgroundImage    : `url(${profileHeaderImg})`,\n\t\tbackgroundRepeat   : 'no-repeat',\n\t\tbackgroundPosition : 'center',\n\t\tbackgroundSize     : 'cover',\n\t\tbackgroundColor    : theme.palette.secondary.dark\n\t},\n\tinnerContent        : {\n\t\tpadding : 20\n\t},\n\tdivider             : {\n\t\twidth        : '90%',\n\t\tmarginTop    : 10,\n\t\tmarginBottom : 10\n\t}\n}));\n\n/**\n * Shows the current logged in user's profile. Allows use to edit\n * their information or delete their account.\n * \n * \n * If this is changed to allow users to view each other's profiles\n * in the future, then change getting user info from store and make\n * a request to the API for it. \n */\nfunction UserProfilePage() {\n\tconst theme = useTheme();\n\tconst classes = useStyles(theme);\n\n\tconst history = useHistory();\n\n\tconst { uid, username, email, img_url, created_at, is_admin, savedTreeIds, followedGroupIds } = useSelector(\n\t\t(st) => st.currUser\n\t);\n\tconst favTrees = useSelector((st) =>\n\t\tObject.values(st.trees.entities).filter((tree) => savedTreeIds.includes(tree.id))\n\t);\n\tconst userCreatedTrees = useSelector((st) =>\n\t\tObject.values(st.trees.entities).filter((tree) => tree.creator === uid)\n\t);\n\tconst followedGroups = useSelector((st) =>\n\t\tObject.values(st.groups.entities).filter((group) => followedGroupIds.includes(group.id))\n\t);\n\tconst userCreatedGroups = useSelector((st) =>\n\t\tObject.values(st.groups.entities).filter((group) => group.creator === uid)\n\t);\n\n\t// const favTrees = Object.values(userTrees).filter((tree) => savedTreeIds.includes(tree.id));\n\tconst favGroups = useSelector((st) => st.groups.entities);\n\n\tconst pushToEditForm = () => {\n\t\thistory.push(`/users/${username}/edit`);\n\t};\n\n\treturn (\n\t\t<Grid container direction=\"column\">\n\t\t\t<Grid className={classes.headerImgBackground} container justify=\"center\" alignItems=\"flex-end\" item xs={12}>\n\t\t\t\t<div style={{ height: 300 }} />\n\t\t\t</Grid>\n\t\t\t<Grid container item className={classes.innerContent}>\n\t\t\t\t<Grid container item>\n\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t<CurrUserInfo />\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t<Button color=\"secondary\" variant=\"outlined\" onClick={pushToEditForm}>\n\t\t\t\t\t\t\tEdit User\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\n\t\t\t\t<Divider className={classes.divider} />\n\n\t\t\t\t<Grid container item xs={12}>\n\t\t\t\t\t{/* User Created Trees */}\n\t\t\t\t\t<Grid container item xs={12} md={6} lg={3} direction=\"column\">\n\t\t\t\t\t\t<Box mr={2}>\n\t\t\t\t\t\t\t<Typography variant=\"h5\">My Trees</Typography>\n\t\t\t\t\t\t</Box>\n\n\t\t\t\t\t\t<List dense={true}>\n\t\t\t\t\t\t\t{userCreatedTrees.length > 0 ? (\n\t\t\t\t\t\t\t\tuserCreatedTrees.map((tree) => (\n\t\t\t\t\t\t\t\t\t<ListItem\n\t\t\t\t\t\t\t\t\t\tbutton\n\t\t\t\t\t\t\t\t\t\tcomponent={RouterLink}\n\t\t\t\t\t\t\t\t\t\tto={`/trees/${tree.id}`}\n\t\t\t\t\t\t\t\t\t\tkey={`tree-${tree.id}`}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<ListItemText>{tree.name}</ListItemText>\n\t\t\t\t\t\t\t\t\t</ListItem>\n\t\t\t\t\t\t\t\t))\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<Grid>\n\t\t\t\t\t\t\t\t\t<Typography>No Created Trees</Typography>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</List>\n\t\t\t\t\t</Grid>\n\n\t\t\t\t\t<Hidden smUp>\n\t\t\t\t\t\t<Divider className={classes.divider} />\n\t\t\t\t\t</Hidden>\n\n\t\t\t\t\t{/* User Favorite Trees */}\n\t\t\t\t\t<Grid container item xs={12} md={6} lg={3} direction=\"column\">\n\t\t\t\t\t\t<Box mr={2}>\n\t\t\t\t\t\t\t<Typography variant=\"h5\">Favorite Trees</Typography>\n\t\t\t\t\t\t</Box>\n\n\t\t\t\t\t\t<List dense={true}>\n\t\t\t\t\t\t\t{favTrees.length > 0 ? (\n\t\t\t\t\t\t\t\tfavTrees.map((tree) => (\n\t\t\t\t\t\t\t\t\t<ListItem\n\t\t\t\t\t\t\t\t\t\tbutton\n\t\t\t\t\t\t\t\t\t\tcomponent={RouterLink}\n\t\t\t\t\t\t\t\t\t\tto={`/trees/${tree.id}`}\n\t\t\t\t\t\t\t\t\t\tkey={`tree-${tree.id}`}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<ListItemText>{tree.name}</ListItemText>\n\t\t\t\t\t\t\t\t\t</ListItem>\n\t\t\t\t\t\t\t\t))\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<Grid>\n\t\t\t\t\t\t\t\t\t<Typography>No Favorite Trees</Typography>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</List>\n\t\t\t\t\t</Grid>\n\n\t\t\t\t\t<Hidden lgUp>\n\t\t\t\t\t\t<Divider className={classes.divider} />\n\t\t\t\t\t</Hidden>\n\n\t\t\t\t\t{/* User Created Groups */}\n\t\t\t\t\t<Grid container item xs={12} md={6} lg={3} direction=\"column\">\n\t\t\t\t\t\t<Box mr={2}>\n\t\t\t\t\t\t\t<Typography variant=\"h5\">My Groups</Typography>\n\t\t\t\t\t\t</Box>\n\n\t\t\t\t\t\t<List dense={true}>\n\t\t\t\t\t\t\t{userCreatedGroups.length > 0 ? (\n\t\t\t\t\t\t\t\tuserCreatedGroups.map((group) => (\n\t\t\t\t\t\t\t\t\t<ListItem\n\t\t\t\t\t\t\t\t\t\tbutton\n\t\t\t\t\t\t\t\t\t\tcomponent={RouterLink}\n\t\t\t\t\t\t\t\t\t\tto={`/groups/${group.id}`}\n\t\t\t\t\t\t\t\t\t\tkey={`group-${group.id}`}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<ListItemText>{group.name}</ListItemText>\n\t\t\t\t\t\t\t\t\t</ListItem>\n\t\t\t\t\t\t\t\t))\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<Grid>\n\t\t\t\t\t\t\t\t\t<Typography>No Created Groups</Typography>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</List>\n\t\t\t\t\t</Grid>\n\n\t\t\t\t\t<Hidden smUp>\n\t\t\t\t\t\t<Divider className={classes.divider} />\n\t\t\t\t\t</Hidden>\n\n\t\t\t\t\t{/* User Followed Groups */}\n\t\t\t\t\t<Grid container item xs={12} md={6} lg={3} direction=\"column\">\n\t\t\t\t\t\t<Box mr={2}>\n\t\t\t\t\t\t\t<Typography variant=\"h5\">Followed Groups</Typography>\n\t\t\t\t\t\t</Box>\n\n\t\t\t\t\t\t<List dense={true}>\n\t\t\t\t\t\t\t{followedGroups.length > 0 ? (\n\t\t\t\t\t\t\t\tfollowedGroups.map((group) => (\n\t\t\t\t\t\t\t\t\t<ListItem\n\t\t\t\t\t\t\t\t\t\tbutton\n\t\t\t\t\t\t\t\t\t\tcomponent={RouterLink}\n\t\t\t\t\t\t\t\t\t\tto={`/groups/${group.id}`}\n\t\t\t\t\t\t\t\t\t\tkey={`group-${group.id}`}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<ListItemText>{group.name}</ListItemText>\n\t\t\t\t\t\t\t\t\t</ListItem>\n\t\t\t\t\t\t\t\t))\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<Grid>\n\t\t\t\t\t\t\t\t\t<Typography>No Followed Groups</Typography>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</List>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t</Grid>\n\t);\n}\nexport default UserProfilePage;\n","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/tree/TreeSearchForm.js",["452","453","454","455","456"],"import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Divider from '@material-ui/core/Divider';\nimport Box from '@material-ui/core/Box';\nimport TextField from '@material-ui/core/TextField';\nimport Slider from '@material-ui/core/Slider';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Paper from '@material-ui/core/Paper';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\n\nimport { getTrees } from '../actions/trees';\n\nimport useStyles from '../styles/formStyle';\n\nfunction TreeSearchForm({ mapCenter, setCenterOnUser }) {\n\tconst classes = useStyles();\n\tconst dispatch = useDispatch();\n\n\tconsole.log('TreeSearchForm - mapCenter', mapCenter);\n\n\tconst [ formData, setFormData ] = useState({\n\t\tsearch        : '',\n\t\tdistance      : '',\n\t\tleaf_type     : '',\n\t\tfruit_bearing : false,\n\t\theight_min    : '',\n\t\theight_max    : '',\n\t\tdsh_min       : '',\n\t\tdsh_max       : ''\n\t});\n\n\tconst handleChange = (evt) => {\n\t\tconst name = evt.target.name;\n\t\tconst value = name === 'fruit_bearing' ? evt.target.checked : evt.target.value;\n\n\t\tsetFormData((fData) => ({\n\t\t\t...fData,\n\t\t\t[name] : value\n\t\t}));\n\t};\n\n\tconst handleSubmit = (evt) => {\n\t\tevt.preventDefault();\n\t\tsetFormData(formData);\n\n\t\tconst searchParams = {\n\t\t\tsearch        : formData.search,\n\t\t\tdistance      : parseFloat(formData.distance) || '',\n\t\t\tmap_center_x  : mapCenter[1],\n\t\t\tmap_center_y  : mapCenter[0],\n\t\t\tleaf_type     : formData.leaf_type,\n\t\t\tfruit_bearing : formData.fruit_bearing || '',\n\t\t\theight_min    : parseFloat(formData.height_min) || '',\n\t\t\theight_max    : parseFloat(formData.height_max) || '',\n\t\t\tdsh_min       : parseFloat(formData.dsh_min) || '',\n\t\t\tdsh_max       : parseFloat(formData.dsh_max) || ''\n\t\t};\n\n\t\tfor (let field in searchParams) {\n\t\t\tif (searchParams[field] === '') {\n\t\t\t\tdelete searchParams[field];\n\t\t\t}\n\t\t}\n\n\t\tconsole.log('Searchparams', searchParams);\n\t\tdispatch(getTrees(searchParams));\n\t};\n\n\tconst handleCenterMapOnUser = () => {\n\t\tconsole.log('handleCenterMapOnUser - click');\n\t\tsetCenterOnUser(true);\n\t};\n\n\treturn (\n\t\t<form onSubmit={handleSubmit} className={classes.form}>\n\t\t\t<Grid container>\n\t\t\t\t<Grid item xs={12} className={classes.form}>\n\t\t\t\t\t<TextField\n\t\t\t\t\t\tid=\"search\"\n\t\t\t\t\t\tname=\"search\"\n\t\t\t\t\t\tlabel=\"Search Term\"\n\t\t\t\t\t\tplaceholder=\"Search Tree Name, Common Name, Scientific Name...\"\n\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\tvalue={formData.search}\n\t\t\t\t\t/>\n\t\t\t\t</Grid>\n\n\t\t\t\t<Grid container item xs={12} md={6}>\n\t\t\t\t\t<Grid item xs={6}>\n\t\t\t\t\t\t<Typography variant=\"subtitle1\">Height (ft.)</Typography>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tid=\"height_min\"\n\t\t\t\t\t\t\tname=\"height_min\"\n\t\t\t\t\t\t\tlabel=\"Min\"\n\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\tinputProps={{ min: 0, max: 500, step: 0.01 }}\n\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\tvalue={formData.height_min}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tid=\"height_max\"\n\t\t\t\t\t\t\tname=\"height_max\"\n\t\t\t\t\t\t\tlabel=\"Max\"\n\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\tinputProps={{ min: 1, max: 500, step: 0.01 }}\n\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\tvalue={formData.height_max}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item xs={6}>\n\t\t\t\t\t\t<Typography variant=\"subtitle1\">DSH (in.)</Typography>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tid=\"dsh_min\"\n\t\t\t\t\t\t\tname=\"dsh_min\"\n\t\t\t\t\t\t\tlabel=\"Min\"\n\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\tinputProps={{\n\t\t\t\t\t\t\t\tmin  : 0,\n\t\t\t\t\t\t\t\tmax  : 500,\n\t\t\t\t\t\t\t\tstep : 0.01\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\tvalue={formData.dsh_min}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tid=\"dsh_max\"\n\t\t\t\t\t\t\tname=\"dsh_max\"\n\t\t\t\t\t\t\tlabel=\"Max\"\n\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\tinputProps={{\n\t\t\t\t\t\t\t\tmin  : 1,\n\t\t\t\t\t\t\t\tmax  : 500,\n\t\t\t\t\t\t\t\tstep : 0.01\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\tvalue={formData.dsh_max}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid container item xs={12} md={6}>\n\t\t\t\t\t<Grid item xs={6} md={12}>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tid=\"leaf_type\"\n\t\t\t\t\t\t\tname=\"leaf_type\"\n\t\t\t\t\t\t\tlabel=\"Leaf Type\"\n\t\t\t\t\t\t\tselect\n\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\tvalue={formData.leaf_type}\n\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<MenuItem value=\"\">Any</MenuItem>\n\t\t\t\t\t\t\t<MenuItem value=\"deciduous\">Deciduous</MenuItem>\n\t\t\t\t\t\t\t<MenuItem value=\"evergreen\">Evergreen</MenuItem>\n\t\t\t\t\t\t</TextField>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item xs={6} md={12}>\n\t\t\t\t\t\t<FormControlLabel\n\t\t\t\t\t\t\tcontrol={\n\t\t\t\t\t\t\t\t<Checkbox\n\t\t\t\t\t\t\t\t\tid=\"fruit_bearing\"\n\t\t\t\t\t\t\t\t\tname=\"fruit_bearing\"\n\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\tchecked={formData.fruit_bearing}\n\t\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tlabel=\"Fruit Bearing\"\n\t\t\t\t\t\t\tlabelPlacement=\"top\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid container alignItems=\"center\" item xs={12}>\n\t\t\t\t\t<Grid item md={8}>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tid=\"distance\"\n\t\t\t\t\t\t\tname=\"distance\"\n\t\t\t\t\t\t\tlabel=\"Miles from Map Center to Show Trees\"\n\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\tinputProps={{ min: 0, step: 1 }}\n\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\tvalue={formData.distance}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid container justify=\"center\" item md={4}>\n\t\t\t\t\t\t<Tooltip title=\"Requires user location permission\">\n\t\t\t\t\t\t\t<Button size=\"small\" color=\"primary\" variant=\"contained\" onClick={handleCenterMapOnUser}>\n\t\t\t\t\t\t\t\tCenter on Me\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t\t<Button fullWidth variant=\"outlined\" color=\"secondary\" type=\"submit\">\n\t\t\t\t\tSearch\n\t\t\t\t</Button>\n\t\t\t</Grid>\n\t\t</form>\n\t);\n}\n\nexport default TreeSearchForm;\n","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/tree/TreeList.js",["457","458","459","460","461"],"import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport { DataGrid } from '@material-ui/data-grid';\n\nimport { FavoriteBorder as FavoriteBorderIcon, Favorite as FavoriteIcon } from '@material-ui/icons';\n\nimport FavoriteIconBtn from '../iconBtns/FavoriteIconBtn';\nimport EditTreeInGroupIconBtn from '../iconBtns/EditTreeInGroupIconBtn';\n\nimport { addToSavedTrees, removeFromSavedTrees } from '../actions/currUser';\n\nconst useStyles = makeStyles((theme) => ({\n\ttreeListContainer : {\n\t\tbackgroundColor           : theme.palette.background.paper,\n\t\t'& .data-grid-fav-header' : {\n\t\t\t'& .MuiDataGrid-colCellTitleContainer' : {\n\t\t\t\talignItems : 'center'\n\t\t\t}\n\t\t},\n\t\tdisplay                   : 'flex',\n\t\theight                    : '100%'\n\t}\n}));\n\nfunction DetailsLinkBtn(props) {\n\treturn (\n\t\t<Button color=\"primary\" component={Link} {...props}>\n\t\t\tShow\n\t\t</Button>\n\t);\n}\n\nconst checkTreeIdInCollection = (collection, treeId) => {\n\treturn collection.includes(treeId);\n};\n\nfunction TreeList({ trees, group = null }) {\n\tconst classes = useStyles();\n\tconst dispatch = useDispatch();\n\tconst { username, savedTreeIds } = useSelector((st) => st.currUser);\n\tlet treeRows;\n\tconsole.log('TreeList - trees', trees);\n\tif (!group) {\n\t\ttreeRows = trees.map((tree) => ({\n\t\t\tisFavTree : {\n\t\t\t\tid    : tree.id,\n\t\t\t\tisFav : checkTreeIdInCollection(savedTreeIds, tree.id)\n\t\t\t},\n\t\t\t...tree,\n\t\t\tlink      : `trees/${tree.id}`\n\t\t}));\n\t}\n\telse if (group) {\n\t\ttreeRows = trees.map((tree) => ({\n\t\t\ttreeInGroup : {\n\t\t\t\tid          : tree.id,\n\t\t\t\ttreeInGroup : checkTreeIdInCollection(group.trees, tree.id)\n\t\t\t},\n\t\t\t...tree,\n\t\t\tlink        : `trees/${tree.id}`\n\t\t}));\n\t}\n\n\tconst columns = [\n\t\t// Tree List outside of group has favorite/unfavorite btn for user\n\t\t!group && {\n\t\t\tfield           : 'isFavTree',\n\t\t\trenderHeader    : (params) => <FavoriteIcon />,\n\t\t\theaderClassName : 'data-grid-fav-header',\n\t\t\theaderAlign     : 'center',\n\t\t\trenderCell      : (params) => {\n\t\t\t\treturn <FavoriteIconBtn treeId={parseInt(params.value.id)} />;\n\t\t\t},\n\t\t\tsortComparator  : (value1, value2, param1, param2) => {\n\t\t\t\t//sort by favorited status of true or false\n\t\t\t\treturn value1.isFav === value2.isFav ? 0 : value1.isFav ? -1 : 1;\n\t\t\t}\n\t\t},\n\t\t// Tree List displayed as part of group page has column for\n\t\t// adding or removing tree from group.\n\t\tgroup !== null && {\n\t\t\tfield           : 'treeInGroup',\n\t\t\theaderName      : 'Add Tree',\n\t\t\theaderClassName : 'data-grid-tree-in-group-header',\n\t\t\theaderAlign     : 'center',\n\t\t\twidth           : 120,\n\t\t\trenderCell      : (params) => {\n\t\t\t\treturn <EditTreeInGroupIconBtn group={group} treeId={parseInt(params.value.id)} />;\n\t\t\t},\n\t\t\tsortComparator  : (value1, value2, param1, param2) => {\n\t\t\t\t//sort by whether tree is in group trees of true or false\n\t\t\t\treturn value1.treeInGroup === value2.treeInGroup ? 0 : value1.treeInGroup ? -1 : 1;\n\t\t\t}\n\t\t},\n\t\t{ field: 'name', headerName: 'Name', width: 150 },\n\t\t{ field: 'common_name', headerName: 'Common Name' },\n\t\t{\n\t\t\tfield      : 'scientific_name',\n\t\t\theaderName : 'Scientific Name'\n\t\t},\n\t\t{ field: 'height', headerName: 'Ht. (ft.)', type: 'number' },\n\t\t{ field: 'dsh', headerName: 'DBH (in.)', type: 'number' },\n\t\t{\n\t\t\tfield          : 'fruit_bearing',\n\t\t\theaderName     : 'Fruit Bearing',\n\t\t\tvalueFormatter : (params) => {\n\t\t\t\treturn params.value === true ? 'Yes' : ' ';\n\t\t\t}\n\t\t},\n\t\t{ field: 'leaf_type', headerName: 'Leaf Type' },\n\t\t{\n\t\t\tfield      : 'link',\n\t\t\theaderName : 'Details',\n\t\t\trenderCell : (params) => <DetailsLinkBtn to={params.value} />\n\t\t}\n\t];\n\n\tif (!username) columns.shift();\n\n\treturn (\n\t\t<div className={classes.treeListContainer}>\n\t\t\t<div style={{ flexGrow: 1 }}>\n\t\t\t\t<DataGrid rows={treeRows} columns={columns} pageSize={10} autoHeight />\n\t\t\t</div>\n\t\t</div>\n\t);\n}\nexport default TreeList;\n","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/group/GroupSearchForm.js",["462","463","464","465","466","467","468","469","470"],"import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Divider from '@material-ui/core/Divider';\nimport Box from '@material-ui/core/Box';\nimport TextField from '@material-ui/core/TextField';\nimport Slider from '@material-ui/core/Slider';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Paper from '@material-ui/core/Paper';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\n\nimport { getGroups } from '../actions/groups';\n\nimport useStyles from '../styles/formStyle';\n\nfunction GroupSearchForm() {\n\tconst classes = useStyles();\n\tconst dispatch = useDispatch();\n\n\tconst [ formData, setFormData ] = useState({\n\t\tsearch : ''\n\t});\n\n\tconst handleChange = (evt) => {\n\t\tconst { name, value } = evt.target;\n\n\t\tsetFormData((fData) => ({\n\t\t\t...fData,\n\t\t\t[name] : value\n\t\t}));\n\t};\n\n\tconst handleSubmit = (evt) => {\n\t\tevt.preventDefault();\n\t\tsetFormData(formData);\n\n\t\tconst searchParams = {\n\t\t\tsearch : formData.search\n\t\t};\n\n\t\tfor (let field in searchParams) {\n\t\t\tif (searchParams[field] === '') {\n\t\t\t\tdelete searchParams[field];\n\t\t\t}\n\t\t}\n\n\t\tconsole.log('Searchparams', searchParams);\n\t\tdispatch(getGroups(searchParams));\n\t};\n\n\treturn (\n\t\t<form onSubmit={handleSubmit} className={classes.form}>\n\t\t\t<Grid container>\n\t\t\t\t<Typography variant=\"h3\" gutterBottom>\n\t\t\t\t\tExplore Groups\n\t\t\t\t</Typography>\n\t\t\t\t<Grid container item xs={12}>\n\t\t\t\t\t<Grid item xs>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tid=\"search\"\n\t\t\t\t\t\t\tname=\"search\"\n\t\t\t\t\t\t\tlabel=\"Search Term\"\n\t\t\t\t\t\t\tplaceholder=\"Search Group Name...\"\n\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\tvalue={formData.search}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item xs={2}>\n\t\t\t\t\t\t<Button variant=\"outlined\" color=\"secondary\" type=\"submit\">\n\t\t\t\t\t\t\tSearch\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t</form>\n\t);\n}\n\nexport default GroupSearchForm;\n","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/group/GroupList.js",["471","472","473","474","475","476","477","478","479","480","481","482","483","484","485","486","487","488","489","490","491","492","493","494","495"],"import React, { useState, useRef, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport { DataGrid } from '@material-ui/data-grid';\n\nimport { FavoriteBorder as FavoriteBorderIcon, Favorite as FavoriteIcon } from '@material-ui/icons';\n\nimport { getTreesFromApi } from '../actions/trees';\nimport SelectLocationMap from '../leafletMap/LeafletMap';\nimport { treesRef, uploadImagesToFirebase } from '../firebase/firebaseStorage';\nimport ImagesInput from '../imageHandling/ImagesInput';\nimport { addToSavedTrees, removeFromSavedTrees } from '../actions/currUser';\n\nconst useStyles = makeStyles((theme) => ({\n\troot : {\n\t\twidth                     : '100%',\n\t\tbackgroundColor           : theme.palette.background.paper,\n\t\t'& .data-grid-fav-header' : {\n\t\t\t'& .MuiDataGrid-colCellTitleContainer' : {\n\t\t\t\talignItems : 'center'\n\t\t\t}\n\t\t}\n\t}\n}));\n\nfunction DetailsLinkBtn(props) {\n\treturn (\n\t\t<Button color=\"primary\" component={Link} {...props}>\n\t\t\tShow\n\t\t</Button>\n\t);\n}\n\nconst checkTreeIdInUserFavs = (userFavTreeIds, treeId) => {\n\treturn userFavTreeIds.includes(treeId);\n};\n\nfunction GroupList({ groups }) {\n\tconst classes = useStyles();\n\tconst dispatch = useDispatch();\n\tconst { uid, username, savedGroupIds } = useSelector((st) => st.currUser);\n\tconst groupRows = groups.map((group) => ({\n\t\t...group,\n\t\tcreated_at : new Date(group.created_at).toLocaleDateString('en-gb', {\n\t\t\tyear  : 'numeric',\n\t\t\tmonth : 'long',\n\t\t\tday   : 'numeric'\n\t\t}),\n\t\tlink       : `groups/${group.id}`\n\t}));\n\n\t// const handleUnfavoriteClick = (evt) => {\n\t// \tconst groupId = parseInt(evt.currentTarget.dataset.groupId);\n\t// \tdispatch(removeFromSavedTrees(uid, groupId));\n\t// };\n\t// const handleFavoriteClick = (evt) => {\n\t// \tconst groupId = parseInt(evt.currentTarget.dataset.groupId);\n\t// \tdispatch(addToSavedTrees(uid, groupId));\n\t// };\n\n\tconst columns = [\n\t\t{ field: 'name', headerName: 'Name', width: 200 },\n\t\t{ field: 'description', headerName: 'Description', width: 200 },\n\t\t{\n\t\t\tfield      : 'link',\n\t\t\theaderName : 'Details',\n\t\t\trenderCell : (params) => <DetailsLinkBtn to={params.value} />\n\t\t},\n\t\t{ field: 'created_at', headerName: 'Created', width: 150 }\n\t];\n\n\treturn (\n\t\t<div style={{ width: '100%' }} className={classes.root}>\n\t\t\t<DataGrid rows={groupRows} columns={columns} pageSize={10} autoHeight />\n\t\t</div>\n\t);\n}\nexport default GroupList;\n","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/user/CurrUserInfo.js",["496","497","498","499","500","501","502"],"import Grid from '@material-ui/core/Grid';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport profileHeaderImg from '../images/profile-page-header.jpg';\n\nconst useStyles = makeStyles((theme) => ({\n\theading             : {\n\t\tfontSize   : theme.typography.pxToRem(15),\n\t\tfontWeight : theme.typography.fontWeightRegular\n\t},\n\theaderImgBackground : {\n\t\theight             : 300,\n\t\tbackgroundImage    : `url(${profileHeaderImg})`,\n\t\tbackgroundRepeat   : 'no-repeat',\n\t\tbackgroundPosition : 'center',\n\t\tbackgroundSize     : 'cover',\n\t\tbackgroundColor    : theme.palette.secondary.dark\n\t}\n}));\n\n/**\n * Shows the current logged in user's profile. Allows user to edit\n * their information or delete their account.\n * \n * \n * If this is changed to allow users to view each other's profiles\n * in the future, then change getting user info from store and make\n * a request to the API for it. \n */\nfunction CurrUserInfo() {\n\tconst theme = useTheme();\n\tconst classes = useStyles(theme);\n\n\tconst history = useHistory();\n\n\tconst { uid, username, email, img_url, created_at, is_admin, savedTreeIds, groupIds } = useSelector(\n\t\t(st) => st.currUser\n\t);\n\n\tconst handleEdit = (evt) => {\n\t\thistory.push(`/users/${username}/edit`);\n\t};\n\n\treturn (\n\t\t<Grid container item xs={12}>\n\t\t\t<Grid container direction=\"column\">\n\t\t\t\t<Typography variant=\"h5\">User Info</Typography>\n\t\t\t\t<Typography variant=\"subtitle1\">Username: {username}</Typography>\n\t\t\t\t<Typography variant=\"subtitle1\">Email: {email}</Typography>\n\t\t\t\t<Typography variant=\"subtitle1\">\n\t\t\t\t\tJoined:{' '}\n\t\t\t\t\t{new Date(created_at).toLocaleDateString('en-gb', {\n\t\t\t\t\t\tyear  : 'numeric',\n\t\t\t\t\t\tmonth : 'long',\n\t\t\t\t\t\tday   : 'numeric'\n\t\t\t\t\t})}\n\t\t\t\t</Typography>\n\t\t\t</Grid>\n\t\t</Grid>\n\t);\n}\nexport default CurrUserInfo;\n","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/user/SignUpForm.js",["503","504","505","506","507","508","509","510","511"],"import React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { signUpUser } from '../actions/auth';\nimport { errorDisplay } from '../helpers/formErrorDisplay';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\nimport useStyles from '../styles/formStyle';\nimport SelectCoordinates from '../leafletMap/SelectCoordinates';\nimport { getUserFromApi } from '../actions/currUser';\n// TODO change geolocation request to use my location\n\nfunction SignUpForm({ submitFormData }) {\n\tconst classes = useStyles();\n\n\tconst authErrors = useSelector((st) => st.auth.error);\n\n\tconst INITIAL_FORM_DATA = {\n\t\tusername : '',\n\t\temail    : '',\n\t\tpassword : '',\n\t\timg_url  : ''\n\t};\n\tconst [ formData, setFormData ] = useState(INITIAL_FORM_DATA);\n\n\tconst handleChange = (evt) => {\n\t\tconst { name, value } = evt.target;\n\n\t\tsetFormData((fData) => ({\n\t\t\t...fData,\n\t\t\t[name] : value\n\t\t}));\n\t};\n\tconst handleSubmit = (evt) => {\n\t\tevt.preventDefault();\n\t\tsubmitFormData(formData);\n\t};\n\n\tconst handleErrorDisplay = (field) => {\n\t\treturn errorDisplay(field, authErrors);\n\t};\n\n\treturn (\n\t\t<form onSubmit={handleSubmit} className={classes.form}>\n\t\t\t<TextField\n\t\t\t\tid=\"username\"\n\t\t\t\tname=\"username\"\n\t\t\t\tlabel=\"Username\"\n\t\t\t\tonChange={handleChange}\n\t\t\t\tvalue={formData.username}\n\t\t\t\tautoComplete=\"username\"\n\t\t\t\trequired\n\t\t\t\tinputProps={{ minLength: 1, maxLength: 55 }}\n\t\t\t\terror={Boolean(handleErrorDisplay('username'))}\n\t\t\t\thelperText={handleErrorDisplay('username')}\n\t\t\t/>\n\t\t\t<TextField\n\t\t\t\tid=\"email\"\n\t\t\t\tname=\"email\"\n\t\t\t\tlabel=\"Email\"\n\t\t\t\ttype=\"email\"\n\t\t\t\tonChange={handleChange}\n\t\t\t\tvalue={formData.email}\n\t\t\t\tautoComplete=\"email\"\n\t\t\t\trequired\n\t\t\t\tinputProps={{ minLength: 6, maxLength: 60 }}\n\t\t\t\terror={Boolean(handleErrorDisplay('email'))}\n\t\t\t\thelperText={handleErrorDisplay('email')}\n\t\t\t/>\n\t\t\t<TextField\n\t\t\t\tid=\"password\"\n\t\t\t\tname=\"password\"\n\t\t\t\tlabel=\"Password\"\n\t\t\t\ttype=\"password\"\n\t\t\t\tonChange={handleChange}\n\t\t\t\tvalue={formData.password}\n\t\t\t\tautoComplete=\"password\"\n\t\t\t\trequired\n\t\t\t\tinputProps={{ minLength: 6 }}\n\t\t\t\terror={Boolean(handleErrorDisplay('password'))}\n\t\t\t\thelperText={handleErrorDisplay('password')}\n\t\t\t/>\n\n\t\t\t{/* <TextField\n\t\t\t\tid=\"img_url\"\n\t\t\t\tname=\"img_url\"\n\t\t\t\tlabel=\"Profile Image URL\"\n\t\t\t\ttype=\"url\"\n\t\t\t\tonChange={handleChange}\n\t\t\t\tvalue={formData.img_url}\n\t\t\t/> */}\n\t\t\t<Button variant=\"contained\" color=\"secondary\" type=\"submit\">\n\t\t\t\tSign Up\n\t\t\t</Button>\n\t\t</form>\n\t);\n}\nexport default SignUpForm;\n","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/user/SignInForm.js",["512","513","514","515","516","517","518"],"import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\nimport { signInUser, signOutUser } from '../actions/auth';\nimport { errorDisplay } from '../helpers/formErrorDisplay';\nimport useStyles from '../styles/formStyle';\n\nfunction SignIn({ submitFormData }) {\n\tconst classes = useStyles();\n\n\tconst authErrors = useSelector((st) => st.auth.error);\n\n\tconst INITIAL_FORM_DATA = {\n\t\temail    : '',\n\t\tpassword : ''\n\t};\n\tconst [ formData, setFormData ] = useState(INITIAL_FORM_DATA);\n\n\tconst handleChange = (evt) => {\n\t\tconst { name, value } = evt.target;\n\n\t\tsetFormData((fData) => ({\n\t\t\t...fData,\n\t\t\t[name] : value\n\t\t}));\n\t};\n\tconst handleSubmit = (evt) => {\n\t\tevt.preventDefault();\n\t\tsubmitFormData(formData);\n\t};\n\tconst handleErrorDisplay = (field) => {\n\t\treturn errorDisplay(field, authErrors);\n\t};\n\n\treturn (\n\t\t<form onSubmit={handleSubmit} className={classes.form}>\n\t\t\t<TextField\n\t\t\t\tid=\"email\"\n\t\t\t\tname=\"email\"\n\t\t\t\tlabel=\"Email\"\n\t\t\t\ttype=\"email\"\n\t\t\t\tonChange={handleChange}\n\t\t\t\tvalue={formData.email}\n\t\t\t\tautoComplete=\"email\"\n\t\t\t\trequired\n\t\t\t\tinputProps={{ minLength: 6, maxLength: 60 }}\n\t\t\t\terror={Boolean(handleErrorDisplay('email'))}\n\t\t\t\thelperText={handleErrorDisplay('email')}\n\t\t\t/>\n\t\t\t<TextField\n\t\t\t\tid=\"password\"\n\t\t\t\tname=\"password\"\n\t\t\t\tlabel=\"Password\"\n\t\t\t\ttype=\"password\"\n\t\t\t\tonChange={handleChange}\n\t\t\t\tvalue={formData.password}\n\t\t\t\tautoComplete=\"password\"\n\t\t\t\trequired\n\t\t\t\terror={Boolean(handleErrorDisplay('password'))}\n\t\t\t\thelperText={handleErrorDisplay('password')}\n\t\t\t/>\n\t\t\t<Button color=\"secondary\" variant=\"contained\" type=\"submit\">\n\t\t\t\tSign In\n\t\t\t</Button>\n\t\t</form>\n\t);\n}\nexport default SignIn;\n","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/group/GroupTabPanel.js",["519","520"],"import React, { useState, useRef, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useParams } from 'react-router-dom';\n\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Paper from '@material-ui/core/Paper';\n\nimport LeafletMap from '../leafletMap/LeafletMap';\nimport TreeList from '../tree/TreeList';\nimport GroupTreeEditTable from './GroupTreeEditTable';\nimport { getTree } from '../actions/trees';\nimport GroupMembersPanel from './GroupMembersPanel';\n\nconst useStyles = makeStyles((theme) => {\n\treturn {\n\t\ttabPanel : {\n\t\t\tflexGrow        : 1,\n\t\t\tbackgroundColor : 'white',\n\t\t\t// backgroundColor : theme.palette.background.paper,\n\t\t\twidth           : '100%'\n\t\t},\n\t\tbackdrop : {\n\t\t\tzIndex : theme.zIndex.drawer + 1,\n\t\t\tcolor  : '#fff'\n\t\t}\n\t};\n});\n\nfunction TabPanel(props) {\n\tconst { children, value, index, ...other } = props;\n\n\treturn (\n\t\t<div\n\t\t\trole=\"tabpanel\"\n\t\t\thidden={value !== index}\n\t\t\tid={`group-tabpanel-${index}`}\n\t\t\taria-labelledby={`group-tab-${index}`}\n\t\t\t{...other}\n\t\t>\n\t\t\t{value === index && <Box p={3}>{children}</Box>}\n\t\t</div>\n\t);\n}\n\nfunction a11yProps(index) {\n\treturn {\n\t\tid              : `group-tab-${index}`,\n\t\t'aria-controls' : `group-tabpanel-${index}`\n\t};\n}\n\nfunction GroupTabPanel({ group, isCreator, imageUrls }) {\n\tconst theme = useTheme();\n\tconst classes = useStyles(theme);\n\tconst dispatch = useDispatch();\n\tconst [ value, setValue ] = useState(0);\n\tconst [ open, setOpen ] = useState(false);\n\tconst currUserUid = useSelector((st) => st.currUser.uid);\n\n\t// check if currUser is a moderator of this group\n\tconst isModerator = Boolean(\n\t\tgroup.members.find((member) => member.user_id === currUserUid && member.is_moderator === true)\n\t);\n\n\t// Get any group trees that are already in store\n\tlet groupTrees = useSelector((st) => [ ...group.trees ].map((id) => st.trees.entities[id]));\n\n\t// Get array of any group tree ids that were not already in store\n\tconst remainingSelectionTreeIds = group.trees.filter((id) => !groupTrees.map((tree) => tree.id).includes(id));\n\tconsole.log('GroupTapPanal remainingSelectionTree', remainingSelectionTreeIds);\n\n\tconsole.log('GroupTapPanal groupTrees', groupTrees);\n\t// Get any other group tree that is not in store from API\n\tuseEffect(\n\t\t() => {\n\t\t\tremainingSelectionTreeIds.forEach((id) => {\n\t\t\t\tconst tree = dispatch(getTree(id));\n\t\t\t\tgroupTrees.push(tree);\n\t\t\t});\n\t\t},\n\t\t[ dispatch, groupTrees, remainingSelectionTreeIds ]\n\t);\n\n\tconst handleChange = (event, newValue) => {\n\t\tsetValue(newValue);\n\t};\n\n\tconst displayTreeSelection = () => {\n\t\tsetOpen(true);\n\t};\n\tconst closeTreeSelection = (evt) => {\n\t\tsetOpen(false);\n\t};\n\treturn (\n\t\t<div className={classes.tabPanel}>\n\t\t\t<AppBar position=\"static\">\n\t\t\t\t<Tabs value={value} onChange={handleChange} variant=\"fullWidth\" aria-label=\"group tabs\" centered>\n\t\t\t\t\t<Tab label=\"Trees\" {...a11yProps(0)} />\n\t\t\t\t\t<Tab label=\"Album\" {...a11yProps(1)} />\n\t\t\t\t\t<Tab label=\"Members\" {...a11yProps(2)} />\n\t\t\t\t</Tabs>\n\t\t\t</AppBar>\n\t\t\t<TabPanel value={value} index={0}>\n\t\t\t\t<Grid container direction=\"column\">\n\t\t\t\t\t<Grid container item xs={12} justify=\"center\">\n\t\t\t\t\t\t{isModerator && (\n\t\t\t\t\t\t\t<Button color=\"primary\" onClick={displayTreeSelection} style={{ marginBottom: 20 }}>\n\t\t\t\t\t\t\t\tEdit Group Trees\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<Backdrop className={classes.backdrop} open={open} onClick={closeTreeSelection}>\n\t\t\t\t\t\t\t<Box\n\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\tbackgroundColor : 'white',\n\t\t\t\t\t\t\t\t\twidth           : '85vw',\n\t\t\t\t\t\t\t\t\tmaxWidth        : 1500,\n\t\t\t\t\t\t\t\t\theight          : `${120 + Math.min(groupTrees.length, 10) * 52}px`,\n\t\t\t\t\t\t\t\t\tzIndex          : 10,\n\t\t\t\t\t\t\t\t\tcolor           : 'white'\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tonClick={(evt) => {\n\t\t\t\t\t\t\t\t\tevt.stopPropagation();\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<GroupTreeEditTable group={group} groupTrees={groupTrees} />\n\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t</Backdrop>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid container item xs={12} justify=\"center\">\n\t\t\t\t\t\t{groupTrees.length > 0 ? (\n\t\t\t\t\t\t\t<Grid container item xs={12}>\n\t\t\t\t\t\t\t\t<Grid item xs={12} xl={6}>\n\t\t\t\t\t\t\t\t\t<Paper elevation={3}>\n\t\t\t\t\t\t\t\t\t\t<LeafletMap trees={groupTrees} />\n\t\t\t\t\t\t\t\t\t</Paper>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t<Grid container item xs={12} xl={6}>\n\t\t\t\t\t\t\t\t\t<Box\n\t\t\t\t\t\t\t\t\t\tp={2}\n\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\theight : `${120 + Math.min(groupTrees.length, 10) * 52}px`,\n\t\t\t\t\t\t\t\t\t\t\twidth  : '100%'\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<TreeList trees={groupTrees} />\n\t\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<Typography align=\"center\">\n\t\t\t\t\t\t\t\tNo trees within this group yet. Only moderators can edit trees of this group.\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t</TabPanel>\n\t\t\t<TabPanel value={value} index={1}>\n\t\t\t\tAlbum\n\t\t\t</TabPanel>\n\t\t\t<TabPanel value={value} index={2}>\n\t\t\t\t<GroupMembersPanel isCreator={isCreator} isModerator={isModerator} group={group} />\n\t\t\t</TabPanel>\n\t\t</div>\n\t);\n}\nexport default GroupTabPanel;\n","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/group/GroupTreeEditTable.js",["521"],"import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport TreeList from '../tree/TreeList';\nimport { getTree } from '../actions/trees';\n\nfunction GroupTreeEditTable({ group, groupTrees }) {\n\tconsole.log('GroupTreeEditTable - Start', group, groupTrees);\n\tconst dispatch = useDispatch();\n\n\tconst currUserFavTreeIds = useSelector((st) => st.currUser.savedTreeIds);\n\n\tconsole.log('GroupTreeEditTable - currUserFavTreeIds', currUserFavTreeIds);\n\n\t// Get any trees that are already in store\n\tlet userFavTrees = useSelector((st) => currUserFavTreeIds.map((id) => st.trees.entities[id]));\n\n\t// Get array of any tree ids that were not already in store\n\tconst remainingSelectionTreeIds = currUserFavTreeIds.filter(\n\t\t(id) => !userFavTrees.map((tree) => tree.id).includes(id)\n\t);\n\t// console.log('GroupTreeEditTable userFavTrees', userFavTrees);\n\t// console.log('GroupTreeEditTable remainingSelectionTrees', remainingSelectionTreeIds);\n\n\t// Get any other user fav or group tree that is not in store from API\n\tuseEffect(() => {\n\t\tremainingSelectionTreeIds.forEach((id) => {\n\t\t\tconst tree = dispatch(getTree(id));\n\t\t\tuserFavTrees.push(tree);\n\t\t});\n\t}, []);\n\tconst treesSet = new Set([ ...groupTrees, ...userFavTrees ]);\n\t// console.log('GroupTreeEditTable treesSet', treesSet);\n\n\treturn <TreeList trees={[ ...treesSet ]} group={group} />;\n}\nexport default GroupTreeEditTable;\n","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/group/GroupFormBasicFields.js",["522","523","524","525","526","527","528","529","530"],"import React, { useState, useRef, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\n\nimport Typography from '@material-ui/core/Typography';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\n\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Slider from '@material-ui/core/Slider';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Button from '@material-ui/core/Button';\n\nimport useStyles from '../styles/formStyle';\nimport { errorDisplay } from '../helpers/formErrorDisplay';\n\nfunction GroupFormBasicFields({ formData, onFormChange, edit = false }) {\n\tconst classes = useStyles();\n\tconst groupError = useSelector((st) => st.groups.error);\n\tconsole.log(groupError);\n\tconst handleChange = (evt) => {\n\t\tonFormChange(evt.target);\n\t};\n\n\tconst handleErrorDisplay = (field) => {\n\t\treturn errorDisplay(field, groupError);\n\t};\n\n\treturn (\n\t\t<Grid container className={classes.form}>\n\t\t\t<TextField\n\t\t\t\tid=\"name\"\n\t\t\t\tname=\"name\"\n\t\t\t\tlabel=\"Group Name\"\n\t\t\t\tplaceholder=\"Clallam Tree Alliance\"\n\t\t\t\tonChange={handleChange}\n\t\t\t\tvalue={formData.name}\n\t\t\t\trequired={!edit}\n\t\t\t\terror={Boolean(handleErrorDisplay('group_name'))}\n\t\t\t\thelperText={handleErrorDisplay('group_name')}\n\t\t\t/>\n\t\t\t<TextField\n\t\t\t\tid=\"description\"\n\t\t\t\tname=\"description\"\n\t\t\t\tlabel=\"Description\"\n\t\t\t\tmultiline\n\t\t\t\tinputProps={{ maxLength: 2000 }}\n\t\t\t\tplaceholder=\"What is the main purpose of your group?\"\n\t\t\t\tonChange={handleChange}\n\t\t\t\tvalue={formData.description}\n\t\t\t/>\n\n\t\t\t{/* TODO add in the future */}\n\t\t\t{/* <FormControlLabel\n\t\t\t\tcontrol={\n\t\t\t\t\t<Checkbox\n\t\t\t\t\t\tid=\"is_public\"\n\t\t\t\t\t\tname=\"is_public\"\n\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\tchecked={formData.is_public}\n\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t/>\n\t\t\t\t}\n\t\t\t\tlabel=\"Do you want this group to be visable for others to join?\"\n\t\t\t/> */}\n\t\t</Grid>\n\t);\n}\nexport default GroupFormBasicFields;\n","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/imageHandling/ImagesInput.js",["531","532","533"],"import React, { useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\n\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Input from '@material-ui/core/Input';\nimport Button from '@material-ui/core/Button';\nimport Box from '@material-ui/core/Box';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\n\nimport { storageRef } from '../firebase/firebaseStorage';\n\nconst useStyles = makeStyles((theme) => {\n\treturn {\n\t\timgPreview    : { height: 100, width: 'auto' },\n\t\timgsContainer : {\n\t\t\t'& .selected' : {\n\t\t\t\tbackgroundColor : theme.palette.primary.accent\n\t\t\t}\n\t\t},\n\t\timgPaper      : {\n\t\t\tjustifyContent : 'center',\n\t\t\talignItems     : 'center',\n\t\t\tpadding        : 4,\n\t\t\tpaddingBottom  : 0\n\t\t}\n\t};\n});\n\nfunction ImagesInput({ allowMultiple = true, onImageFilesChange }) {\n\tconst theme = useTheme();\n\tconst classes = useStyles(theme);\n\tconst [ imageUrls, setImageUrls ] = useState([]);\n\tconst [ fileList, setFileList ] = useState([]);\n\n\t// Lift files to parent component\n\tuseEffect(\n\t\t() => {\n\t\t\tconsole.log('useEffect fileList', fileList);\n\t\t\tonImageFilesChange(fileList);\n\t\t},\n\t\t[ fileList, onImageFilesChange ]\n\t);\n\n\tconst readUploadedFileAsDataUrl = (inputFile) => {\n\t\tconst temporaryFileReader = new FileReader();\n\n\t\treturn new Promise((resolve, reject) => {\n\t\t\ttemporaryFileReader.onerror = () => {\n\t\t\t\ttemporaryFileReader.abort();\n\t\t\t\treject(new DOMException('Problem parsing input file.'));\n\t\t\t};\n\n\t\t\ttemporaryFileReader.onload = () => {\n\t\t\t\tresolve(temporaryFileReader.result);\n\t\t\t};\n\t\t\ttemporaryFileReader.readAsDataURL(inputFile);\n\t\t});\n\t};\n\n\tconst getImageUrlsFromFiles = async (files) => {\n\t\tconsole.log('getImageUrlsFromFiles', files);\n\t\tlet urls = [];\n\n\t\tfor (let i = 0; i < files.length; i++) {\n\t\t\tconst url = await readUploadedFileAsDataUrl(files[i]);\n\t\t\turls.push(url);\n\t\t}\n\n\t\tsetImageUrls(urls);\n\t};\n\n\tconst handleChange = async (evt) => {\n\t\tconst files = evt.target.files;\n\t\tconst filesArr = Array.from(files);\n\t\tconsole.log('filesArr', filesArr);\n\n\t\tgetImageUrlsFromFiles(files);\n\t\tsetFileList((fileList) => {\n\t\t\treturn filesArr;\n\t\t});\n\t};\n\n\tconst handlePrimaryChange = (evt) => {\n\t\tconst targetUrl = evt.currentTarget.children[0].src;\n\t\tconst idx = imageUrls.findIndex((url) => url === targetUrl);\n\t\tconsole.log('handlePrimaryChange idx', idx);\n\n\t\tsetImageUrls((imageUrls) => {\n\t\t\tconst filteredUrls = imageUrls.filter((url) => url !== targetUrl);\n\t\t\tfilteredUrls.unshift(targetUrl);\n\t\t\treturn filteredUrls;\n\t\t});\n\n\t\tconsole.log('handlePrimaryChange fileList', fileList);\n\t\tsetFileList((fileList) => {\n\t\t\treturn [ fileList[idx], ...fileList.slice(0, idx), ...fileList.slice(idx + 1) ];\n\t\t});\n\t\tconsole.log('handlePrimaryChange fileList post', fileList);\n\t};\n\n\treturn (\n\t\t<Grid container className=\"ImagesInput\">\n\t\t\t<Grid item>\n\t\t\t\t<Input\n\t\t\t\t\taccept=\"image/*\"\n\t\t\t\t\tstyle={{ display: 'none' }}\n\t\t\t\t\tid=\"file-upload\"\n\t\t\t\t\ttype=\"file\"\n\t\t\t\t\tinputProps={{ multiple: allowMultiple }}\n\t\t\t\t\tonChange={handleChange}\n\t\t\t\t/>\n\t\t\t\t<Button variant=\"outlined\" color=\"primary\" htmlFor=\"file-upload\" component=\"label\">\n\t\t\t\t\t{allowMultiple ? 'Choose Images' : 'Choose Image'}\n\t\t\t\t</Button>\n\t\t\t\t{allowMultiple && (\n\t\t\t\t\t<Typography>\n\t\t\t\t\t\tIf selecting multiple images, click the one you want to be the primary image.\n\t\t\t\t\t</Typography>\n\t\t\t\t)}\n\t\t\t</Grid>\n\t\t\t<Grid container item xs={12} justify=\"center\" className={classes.imgsContainer}>\n\t\t\t\t{imageUrls.map((url, idx) => (\n\t\t\t\t\t<Box key={url} mr={1}>\n\t\t\t\t\t\t<Paper\n\t\t\t\t\t\t\televation={3}\n\t\t\t\t\t\t\tonClick={handlePrimaryChange}\n\t\t\t\t\t\t\tclassName={imageUrls[0] === url ? `${classes.imgPaper} selected` : classes.imgPaper}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<img className={classes.imgPreview} src={url} />\n\t\t\t\t\t\t</Paper>\n\t\t\t\t\t</Box>\n\t\t\t\t))}\n\t\t\t</Grid>\n\t\t</Grid>\n\t);\n}\nexport default React.memo(ImagesInput);\n","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/leafletMap/SelectCoordinates.js",["534","535","536","537","538","539","540","541","542","543","544","545"],"import React, { useState, useRef, useEffect } from 'react';\nimport { MapContainer, useMap, useMapEvents, Marker, Popup, TileLayer } from 'react-leaflet';\nimport { GeoSearchControl, OpenStreetMapProvider } from 'leaflet-geosearch';\nimport 'leaflet-geosearch/dist/geosearch.css';\n\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Slider from '@material-ui/core/Slider';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Button from '@material-ui/core/Button';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport LeafletMap from './LeafletMap';\nimport useStyles from '../styles/formStyle';\n\nfunction SelectCoordinates({ formData, onCoordinatesChange, onMapCoordinatesChange }) {\n\tconst classes = useStyles();\n\tconst didMountRef = useRef(false);\n\tconst [ showSelectMap, setShowSelectMap ] = useState(true);\n\n\t// Handles change to coordinates from text input\n\tconst handleChange = (evt) => {\n\t\tonCoordinatesChange(evt.target);\n\t};\n\n\t// Scroll to map when shown for selecting tree location\n\t// Ref to map toogle button, toggle dispays Leaflet map\n\t// and changes button text. Only runs on rerenders after first\n\tconst mapToggleRef = useRef(null);\n\tuseEffect(\n\t\t() => {\n\t\t\tif (showSelectMap && mapToggleRef.current && didMountRef.current) {\n\t\t\t\tmapToggleRef.current.scrollIntoView({\n\t\t\t\t\tbehavior : 'smooth'\n\t\t\t\t});\n\t\t\t}\n\t\t\telse {\n\t\t\t\tdidMountRef.current = true;\n\t\t\t}\n\t\t},\n\t\t[ showSelectMap ]\n\t);\n\n\tconst toggleSelectMap = () => {\n\t\tsetShowSelectMap(!showSelectMap);\n\t};\n\tconst selectMapBtn = () => {\n\t\treturn showSelectMap ? <Typography>Hide Map</Typography> : <Typography>Select Via Map</Typography>;\n\t};\n\tconst setDisplayMapStyle = () => {\n\t\treturn showSelectMap ? {} : { display: 'none' };\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t<Grid item container ref={mapToggleRef}>\n\t\t\t\t<Grid item xs={12} md={6}>\n\t\t\t\t\t<TextField\n\t\t\t\t\t\tid=\"lat\"\n\t\t\t\t\t\tname=\"lat\"\n\t\t\t\t\t\tlabel=\"Latitude\"\n\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\tinputProps={{ step: 'any', min: -90, max: 90 }}\n\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\tInputLabelProps={{ shrink: true }}\n\t\t\t\t\t\tplaceholder=\"-90 to 90 (eg. 48.10045)\"\n\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\tvalue={formData.lat}\n\t\t\t\t\t\trequired\n\t\t\t\t\t/>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item xs={12} md={6}>\n\t\t\t\t\t<TextField\n\t\t\t\t\t\tid=\"lng\"\n\t\t\t\t\t\tname=\"lng\"\n\t\t\t\t\t\tlabel=\"Longitude\"\n\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\tinputProps={{ step: 'any', min: -180, max: 180 }}\n\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\tInputLabelProps={{ shrink: true }}\n\t\t\t\t\t\tplaceholder=\"-180 to 180 (eg. -123.45316)\"\n\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\tvalue={formData.lng}\n\t\t\t\t\t\trequired\n\t\t\t\t\t/>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t\t<Button variant=\"outlined\" color=\"secondary\" fullWidth onClick={toggleSelectMap}>\n\t\t\t\t{selectMapBtn()}\n\t\t\t</Button>\n\t\t\t<div className={classes.mapContainer} style={setDisplayMapStyle()}>\n\t\t\t\t<LeafletMap onMapCoordinatesChange={onMapCoordinatesChange} useGetClickCoordinates={true} />\n\t\t\t</div>\n\t\t</div>\n\t);\n}\nexport default React.memo(SelectCoordinates);\n","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/imageHandling/Carousel.js",["546"],"import React, { useState } from 'react';\n\nimport {\n\tNavigateNext as NavigateNextIcon,\n\tNavigateBefore as NavigateBeforeIcon\n} from '@material-ui/icons/';\nimport Card from '@material-ui/core/Card';\nimport Fade from '@material-ui/core/Fade';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport IconButton from '@material-ui/core/IconButton';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n\troot  : {\n\t\twidth        : '100%',\n\t\tborderRadius : '0px'\n\t},\n\n\tmedia : {\n\t\theight         : 600,\n\t\tdisplay        : 'flex',\n\t\tjustifyContent : 'space-between',\n\t\talignItems     : 'center'\n\t}\n});\n\nfunction Carousel({ imageUrls }) {\n\tconst classes = useStyles();\n\tconst [ cardIdx, setCardIdx ] = useState(0);\n\tconst total = imageUrls.length;\n\tconst leftIconHidden = cardIdx === 0 ? true : false;\n\tconst rightIconHidden = cardIdx === total - 1 ? true : false;\n\tconst goForward = () => setCardIdx(cardIdx + 1);\n\tconst goBack = () => setCardIdx(cardIdx - 1);\n\n\treturn (\n\t\t<div className=\"Carousel\">\n\t\t\t<Card className={classes.root}>\n\t\t\t\t<CardMedia\n\t\t\t\t\tclassName={classes.media}\n\t\t\t\t\timage={imageUrls[cardIdx]}\n\t\t\t\t>\n\t\t\t\t\t{!leftIconHidden ? (\n\t\t\t\t\t\t<IconButton onClick={goBack}>\n\t\t\t\t\t\t\t<NavigateBeforeIcon\n\t\t\t\t\t\t\t\tfontSize=\"large\"\n\t\t\t\t\t\t\t\thtmlColor=\"rgba(255,255,255, 0.9)\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<div />\n\t\t\t\t\t)}\n\t\t\t\t\t{!rightIconHidden ? (\n\t\t\t\t\t\t<IconButton onClick={goForward}>\n\t\t\t\t\t\t\t<NavigateNextIcon\n\t\t\t\t\t\t\t\tfontSize=\"large\"\n\t\t\t\t\t\t\t\thtmlColor=\"rgba(255,255,255, 0.9)\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<div />\n\t\t\t\t\t)}\n\t\t\t\t</CardMedia>\n\t\t\t</Card>\n\t\t</div>\n\t);\n}\n\nexport default Carousel;\n","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/comment/CommentsContainer.js",["547","548","549","550","551","552","553","554","555","556","557","558","559","560","561"],"import React, { useState, useRef, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Link as RouterLink, useParams } from 'react-router-dom';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport Link from '@material-ui/core/Link';\nimport Box from '@material-ui/core/Box';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport Card from '@material-ui/core/Card';\nimport Divider from '@material-ui/core/Divider';\nimport CardContent from '@material-ui/core/CardContent';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport SendIcon from '@material-ui/icons/Send';\n\nimport { getTreeFromApi, getTreesFromApi } from '../actions/trees';\nimport LeafletMap from '../leafletMap/LeafletMap';\nimport ImagesInput from '../imageHandling/ImagesInput';\nimport Carousel from '../imageHandling/Carousel';\nimport Comment from './Comment';\n\nimport TreeMarkableApi from '../TreeMarkableApi';\n\nconst useStyles = makeStyles((theme) => ({\n\tuserAvatar : {\n\t\tbackgroundColor : theme.palette.primary.light\n\t}\n}));\n\n/**\n * Component accepts a string type ('groups' or 'trees') and an id\n * and returns the comments associated with that item in the\n * database. \n */\n\nfunction CommentsContainer({ type, id, isCreatorOrModerator }) {\n\tconsole.log('CommentsContainer - Start', type, id);\n\n\tconst classes = useStyles();\n\tconst INITIAL_STATE = {\n\t\ttext : '',\n\t\ttype,\n\t\tid\n\t};\n\tconst [ formData, setFormData ] = useState(INITIAL_STATE);\n\tconst [ isLoading, setIsLoading ] = useState(true);\n\tconst [ commentDeleted, setCommentDeleted ] = useState(false);\n\tconst [ comments, setComments ] = useState([]);\n\tconst username = useSelector((st) => st.currUser.username);\n\n\tuseEffect(\n\t\t() => {\n\t\t\tconst getComments = async (type, id) => {\n\t\t\t\tconst comments = await TreeMarkableApi.getComments(type, id);\n\t\t\t\tsetComments(comments);\n\t\t\t\tsetIsLoading(false);\n\t\t\t\tsetCommentDeleted(false);\n\t\t\t};\n\t\t\tgetComments(type, id);\n\t\t},\n\t\t[ isLoading, type, id, commentDeleted ]\n\t);\n\n\tconst handleDeleteComment = () => {\n\t\tsetCommentDeleted(true);\n\t};\n\n\tconst handleChange = (evt) => {\n\t\tconst { name, value } = evt.target;\n\n\t\tsetFormData((fData) => ({\n\t\t\t...fData,\n\t\t\t[name] : value\n\t\t}));\n\t};\n\n\tconst handleSubmit = async (evt) => {\n\t\tevt.preventDefault();\n\t\tawait TreeMarkableApi.createComment(formData);\n\t\tsetFormData(INITIAL_STATE);\n\t\tsetIsLoading(true);\n\t};\n\n\treturn (\n\t\t<Grid container className=\"CommentsContainer\">\n\t\t\t<Typography variant=\"h4\">Comments</Typography>\n\t\t\t<Grid container item xs={12}>\n\t\t\t\t<Box mt={2} mb={2} style={{ width: '100%' }}>\n\t\t\t\t\t{comments.length > 0 ? (\n\t\t\t\t\t\tcomments.map((comment) => (\n\t\t\t\t\t\t\t<Comment\n\t\t\t\t\t\t\t\tkey={`comment-${comment.id}`}\n\t\t\t\t\t\t\t\tonDelete={handleDeleteComment}\n\t\t\t\t\t\t\t\tcomment={comment}\n\t\t\t\t\t\t\t\tusername={username}\n\t\t\t\t\t\t\t\tisCreatorOrModerator={isCreatorOrModerator}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t))\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<Typography>No Comments</Typography>\n\t\t\t\t\t)}\n\t\t\t\t</Box>\n\t\t\t</Grid>\n\t\t\t{username ? (\n\t\t\t\t<Grid container item>\n\t\t\t\t\t<Grid container alignItems=\"center\" spacing={2} item xs={12} wrap=\"nowrap\">\n\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t<Avatar className={classes.userAvatar}>{username[0]}</Avatar>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t<form id=\"comment\" onSubmit={handleSubmit}>\n\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\tid=\"text\"\n\t\t\t\t\t\t\t\t\tname=\"text\"\n\t\t\t\t\t\t\t\t\tplaceholder=\"Add comment...\"\n\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\tvalue={formData.text}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</form>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t<IconButton form=\"comment\" type=\"submit\">\n\t\t\t\t\t\t\t\t<SendIcon />\n\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t) : (\n\t\t\t\t<Typography>\n\t\t\t\t\t<Link component={RouterLink} to=\"/signup\">\n\t\t\t\t\t\tSign Up\n\t\t\t\t\t</Link>{' '}\n\t\t\t\t\tor{' '}\n\t\t\t\t\t<Link component={RouterLink} to=\"/signin\">\n\t\t\t\t\t\tSign In\n\t\t\t\t\t</Link>{' '}\n\t\t\t\t\tto add comments.\n\t\t\t\t</Typography>\n\t\t\t)}\n\t\t</Grid>\n\t);\n}\nexport default CommentsContainer;\n","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/comment/Comment.js",["562","563","564","565","566","567","568","569","570","571","572","573","574","575"],"import React, { useState, useRef, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useParams } from 'react-router-dom';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Avatar from '@material-ui/core/Avatar';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { MoreVert as MoreVertIcon, Send as SendIcon } from '@material-ui/icons';\n\nimport TreeMarkableApi from '../TreeMarkableApi';\nimport EditIconBtn from '../iconBtns/EditIconBtn';\n\nconst useStyles = makeStyles((theme) => ({\n\tavatarOther : {\n\t\tbackgroundColor : theme.palette.secondary.light\n\t},\n\tavatarOwn   : {\n\t\tbackgroundColor : theme.palette.primary.light\n\t}\n}));\n\nfunction Comment({ onDelete, username, comment, isCreatorOrModerator }) {\n\tconst classes = useStyles();\n\tconst [ editing, setEditing ] = useState(false);\n\tconst [ editText, setEditText ] = useState(comment.text);\n\tconst [ anchorEl, setAnchorEl ] = useState(null);\n\tconst open = Boolean(anchorEl);\n\tconst isCommentAuthor = username === comment.author_name;\n\n\tconst handleClick = (evt) => {\n\t\tsetAnchorEl(evt.currentTarget);\n\t};\n\n\tconst handleEditClick = () => {\n\t\tsetAnchorEl(null);\n\t\tsetEditing(true);\n\t};\n\tconst handleDeleteClick = async () => {\n\t\tsetAnchorEl(null);\n\t\tawait TreeMarkableApi.deleteComment(comment.id);\n\t\tonDelete();\n\t};\n\n\tconst handleClose = () => {\n\t\tsetAnchorEl(null);\n\t};\n\n\tconst handleChange = (evt) => {\n\t\tsetEditText(evt.target.value);\n\t};\n\n\tconst handleSubmit = async (evt) => {\n\t\tevt.preventDefault();\n\t\tsetEditText(editText.trim());\n\t\tif (editText !== comment.text) {\n\t\t\tconst res = await TreeMarkableApi.updateComment(comment.id, {\n\t\t\t\ttext : editText\n\t\t\t});\n\t\t\tcomment.text = res.text;\n\t\t}\n\t\tsetEditing(false);\n\t};\n\n\treturn (\n\t\t<Grid container item wrap=\"nowrap\" style={{ marginBottom: 15 }}>\n\t\t\t<Grid item style={{ marginRight: 15 }}>\n\t\t\t\t<Avatar className={isCommentAuthor ? classes.avatarOwn : classes.avatarOther}>\n\t\t\t\t\t{comment.author_name[0]}\n\t\t\t\t</Avatar>\n\t\t\t</Grid>\n\t\t\t<Grid container item alignItems=\"center\">\n\t\t\t\t{editing ? (\n\t\t\t\t\t<Grid container wrap=\"nowrap\" item justify=\"space-between\">\n\t\t\t\t\t\t<Grid item style={{ width: '100%' }}>\n\t\t\t\t\t\t\t<form onSubmit={handleSubmit} id=\"edit-comment\">\n\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\tid=\"text\"\n\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\tmultiline\n\t\t\t\t\t\t\t\t\tvalue={editText}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</form>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t<IconButton form=\"edit-comment\" type=\"submit\">\n\t\t\t\t\t\t\t\t<SendIcon />\n\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Grid>\n\t\t\t\t) : (\n\t\t\t\t\t<Grid container wrap=\"nowrap\" item justify=\"space-between\">\n\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t<Typography style={{ whiteSpace: 'pre-line' }}>{comment.text}</Typography>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t{(isCommentAuthor || isCreatorOrModerator) && (\n\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\t\t\taria-label=\"more\"\n\t\t\t\t\t\t\t\t\taria-controls=\"long-menu\"\n\t\t\t\t\t\t\t\t\taria-haspopup=\"true\"\n\t\t\t\t\t\t\t\t\tonClick={handleClick}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<MoreVertIcon fontSize=\"small\" />\n\t\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t\t\t<Menu id=\"long-menu\" anchorEl={anchorEl} keepMounted open={open} onClose={handleClose}>\n\t\t\t\t\t\t\t\t\t{isCommentAuthor && <MenuItem onClick={handleEditClick}>Edit</MenuItem>}\n\t\t\t\t\t\t\t\t\t<MenuItem onClick={handleDeleteClick}>Delete</MenuItem>\n\t\t\t\t\t\t\t\t</Menu>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</Grid>\n\t\t\t\t)}\n\t\t\t\t<Grid container item justify=\"space-between\">\n\t\t\t\t\t<Typography variant=\"caption\">Posted By: {comment.author_name}</Typography>\n\t\t\t\t\t<Typography variant=\"caption\">\n\t\t\t\t\t\t{new Date(comment.created_at).toLocaleDateString('en-gb', {\n\t\t\t\t\t\t\tyear  : 'numeric',\n\t\t\t\t\t\t\tmonth : 'long',\n\t\t\t\t\t\t\tday   : 'numeric'\n\t\t\t\t\t\t})}\n\t\t\t\t\t</Typography>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t</Grid>\n\t);\n}\nexport default Comment;\n","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/iconBtns/EditIconBtn.js",["576","577","578","579","580","581","582","583","584","585","586","587","588","589"],"import React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport {\n\tInfo as InfoIcon,\n\tAdd as AddIcon,\n\tNature as NatureIcon,\n\tGroup as GroupIcon,\n\tExplore as ExploreIcon,\n\tHome as HomeIcon,\n\tMessage as MessageIcon,\n\tCheck as CheckIcon,\n\tFavoriteBorder as FavoriteBorderIcon,\n\tEdit as EditIcon\n} from '@material-ui/icons';\n\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nimport useStyles from '../styles/markerCard';\n\nfunction EditIconBtn({ type, id }) {\n\tconst classes = useStyles();\n\tconst history = useHistory();\n\n\tconst handleClick = () => {\n\t\thistory.push(`/${type}/${id}/edit`);\n\t};\n\n\treturn (\n\t\t<Tooltip title={'Edit'}>\n\t\t\t<IconButton onClick={handleClick}>\n\t\t\t\t<EditIcon />\n\t\t\t</IconButton>\n\t\t</Tooltip>\n\t);\n}\nexport default EditIconBtn;\n","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/iconBtns/FollowGroupIconBtn.js",[],"/home/justin/Documents/Springboard/SECT/tree-markable/client/src/leafletMap/TreePopup.js",["590","591"],"import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\nimport { Nature as NatureIcon } from '@material-ui/icons';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport IconButton from '@material-ui/core/IconButton';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Box from '@material-ui/core/Box';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nimport useStyles from '../styles/markerCard';\n\nimport FavoriteIconBtn from '../iconBtns/FavoriteIconBtn';\n\nimport {\n\ttreesRef,\n\tdownloadImageUrlsFromFirebase\n} from '../firebase/firebaseStorage';\n\nfunction TreePopup({ tree }) {\n\tconst classes = useStyles();\n\n\tconst [ isLoading, setIsLoading ] = useState(true);\n\tconst [ imageUrls, setImageUrls ] = useState({\n\t\tprimary : '',\n\t\talbum   : []\n\t});\n\tconst isAuthenticated = useSelector((st) => st.auth.authenticated);\n\tconst dispatch = useDispatch();\n\n\t// Get Image Urls to display tree image, if it exists\n\tuseEffect(\n\t\t() => {\n\t\t\tconst getImageUrls = async (collectionRef, id) => {\n\t\t\t\tconst imgUrls = await downloadImageUrlsFromFirebase(\n\t\t\t\t\tcollectionRef,\n\t\t\t\t\tid\n\t\t\t\t);\n\t\t\t\tif (imgUrls) {\n\t\t\t\t\tsetImageUrls(imgUrls);\n\t\t\t\t}\n\t\t\t\tsetIsLoading(false);\n\t\t\t};\n\n\t\t\tif (isLoading) {\n\t\t\t\tgetImageUrls(treesRef, tree.id);\n\t\t\t}\n\t\t},\n\t\t[ isLoading, dispatch ]\n\t);\n\n\t// If tree has a primary image, show it on popup. Show\n\t// loading circle while retrieving image from storage.\n\t// Show nothing if no image is saved in storage\n\tconst showPrimaryImage = () => {\n\t\tif (isLoading) {\n\t\t\treturn (\n\t\t\t\t<Box display=\"flex\" justifyContent=\"center\">\n\t\t\t\t\t<CircularProgress />\n\t\t\t\t</Box>\n\t\t\t);\n\t\t}\n\t\telse if (imageUrls.primary === '') return '';\n\t\telse {\n\t\t\treturn (\n\t\t\t\t<CardMedia\n\t\t\t\t\tclassName={classes.media}\n\t\t\t\t\timage={imageUrls.primary}\n\t\t\t\t\ttitle={`${tree.name}`}\n\t\t\t\t/>\n\t\t\t);\n\t\t}\n\t};\n\n\treturn (\n\t\t<Card className={classes.root} elevation={0}>\n\t\t\t{showPrimaryImage()}\n\t\t\t<CardContent className={classes.content}>\n\t\t\t\t<Typography gutterBottom variant=\"h5\" component=\"h2\">\n\t\t\t\t\t{tree.name}\n\t\t\t\t</Typography>\n\t\t\t\t<Typography variant=\"body2\" color=\"textSecondary\">\n\t\t\t\t\t{tree.common_name}\n\t\t\t\t</Typography>\n\t\t\t\t<Typography\n\t\t\t\t\tvariant=\"body2\"\n\t\t\t\t\tcolor=\"textSecondary\"\n\t\t\t\t\tcomponent=\"i\"\n\t\t\t\t>\n\t\t\t\t\t{tree.scientific_name}\n\t\t\t\t</Typography>\n\t\t\t\t<Typography\n\t\t\t\t\tvariant=\"caption\"\n\t\t\t\t\tcolor=\"textSecondary\"\n\t\t\t\t\tcomponent=\"p\"\n\t\t\t\t>\n\t\t\t\t\t{`(${tree.geolocation.y.toFixed(\n\t\t\t\t\t\t5\n\t\t\t\t\t)}, ${tree.geolocation.x.toFixed(5)})`}\n\t\t\t\t</Typography>\n\t\t\t</CardContent>\n\t\t\t<CardActions className={classes.actions}>\n\t\t\t\t<Grid container justify=\"center\">\n\t\t\t\t\t<Grid container justify=\"center\" item xs={6}>\n\t\t\t\t\t\t<Tooltip title=\"Details\">\n\t\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\t\tcomponent={Link}\n\t\t\t\t\t\t\t\tto={`/trees/${tree.id}`}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<NatureIcon color=\"primary\" />\n\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t{isAuthenticated && (\n\t\t\t\t\t\t<Grid container justify=\"center\" item xs={6}>\n\t\t\t\t\t\t\t<FavoriteIconBtn treeId={tree.id} />\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t)}\n\t\t\t\t</Grid>\n\t\t\t</CardActions>\n\t\t</Card>\n\t);\n}\nexport default TreePopup;\n","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/iconBtns/FavoriteIconBtn.js",["592","593","594","595","596","597","598","599","600","601"],"import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport {\n\tInfo as InfoIcon,\n\tAdd as AddIcon,\n\tNature as NatureIcon,\n\tGroup as GroupIcon,\n\tExplore as ExploreIcon,\n\tHome as HomeIcon,\n\tMessage as MessageIcon,\n\tCheck as CheckIcon,\n\tFavoriteBorder as FavoriteBorderIcon,\n\tFavorite as FavoriteIcon\n} from '@material-ui/icons';\n\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nimport useStyles from '../styles/markerCard';\nimport { addToSavedTrees, removeFromSavedTrees } from '../actions/currUser';\n\nfunction FavoriteIconBtn({ treeId }) {\n\tconst classes = useStyles();\n\tconst [ isFav, setIsFav ] = useState(null);\n\tconst uid = useSelector((st) => st.currUser.uid);\n\tconst savedTreeIds = useSelector((st) => st.currUser.savedTreeIds);\n\tconst dispatch = useDispatch();\n\n\tuseEffect(\n\t\t() => {\n\t\t\tconst checkFavStatus = (treeId, savedTreeIds) => {\n\t\t\t\tsetIsFav(savedTreeIds.includes(treeId));\n\t\t\t};\n\t\t\tcheckFavStatus(treeId, savedTreeIds);\n\t\t},\n\t\t[ savedTreeIds, treeId ]\n\t);\n\n\tconst handleClick = async () => {\n\t\tif (isFav) {\n\t\t\tdispatch(removeFromSavedTrees(uid, treeId));\n\t\t}\n\t\telse {\n\t\t\tdispatch(addToSavedTrees(uid, treeId));\n\t\t}\n\t\tsetIsFav(!isFav);\n\t};\n\n\tif (!uid) {\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<Tooltip title={isFav ? 'Unfavorite' : 'Favorite'}>\n\t\t\t<IconButton onClick={handleClick}>\n\t\t\t\t<FavoriteIcon htmlColor={isFav ? 'red' : 'pink'} />\n\t\t\t</IconButton>\n\t\t</Tooltip>\n\t);\n}\nexport default FavoriteIconBtn;\n","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/iconBtns/EditTreeInGroupIconBtn.js",["602"],"import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { Add as AddIcon, Check as CheckIcon } from '@material-ui/icons';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { useTheme } from '@material-ui/core/styles';\n\nimport { addTreeToGroup, removeTreeFromGroup } from '../actions/groups';\n\nfunction EditTreeInGroupIconBtn({ group, treeId }) {\n\tconst theme = useTheme();\n\tconst [ treeInGroup, setTreeInGroup ] = useState(null);\n\n\tconst dispatch = useDispatch();\n\n\tuseEffect(\n\t\t() => {\n\t\t\tconst checkTreeInGroup = (group, treeId) => {\n\t\t\t\tsetTreeInGroup(group.trees.includes(treeId));\n\t\t\t};\n\t\t\tcheckTreeInGroup(group, treeId);\n\t\t},\n\t\t[ group, treeId ]\n\t);\n\n\tconst handleClick = async () => {\n\t\tif (treeInGroup) {\n\t\t\tdispatch(removeTreeFromGroup(group.id, treeId));\n\t\t}\n\t\telse {\n\t\t\tdispatch(addTreeToGroup(group.id, treeId));\n\t\t}\n\t\tsetTreeInGroup(!treeInGroup);\n\t};\n\n\treturn (\n\t\t<Tooltip title={treeInGroup ? 'Remove Tree' : 'Add Tree'}>\n\t\t\t<IconButton onClick={handleClick}>\n\t\t\t\t{treeInGroup ? (\n\t\t\t\t\t<CheckIcon htmlColor={theme.palette.primary.light} />\n\t\t\t\t) : (\n\t\t\t\t\t<AddIcon htmlColor={theme.palette.primary.light} />\n\t\t\t\t)}\n\t\t\t</IconButton>\n\t\t</Tooltip>\n\t);\n}\nexport default EditTreeInGroupIconBtn;\n","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/leafletMap/LeafletMap.js",[],"/home/justin/Documents/Springboard/SECT/tree-markable/client/src/group/EditGroup.js",[],"/home/justin/Documents/Springboard/SECT/tree-markable/client/src/imageHandling/UploadImagesToFirebase.js",["603","604","605","606","607","608","609","610"],"/home/justin/Documents/Springboard/SECT/tree-markable/client/src/group/GroupMembersPanel.js",["611","612","613","614","615","616","617","618","619","620","621","622","623","624","625","626","627","628","629"],"import React, { useState, useRef, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useParams } from 'react-router-dom';\n\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Paper from '@material-ui/core/Paper';\n\nimport LeafletMap from '../leafletMap/LeafletMap';\nimport TreeList from '../tree/TreeList';\nimport UserList from './UserList';\nimport GroupTreeEditTable from './GroupTreeEditTable';\nimport { getTreeFromApi } from '../actions/trees';\n\nconst useStyles = makeStyles((theme) => {\n\treturn {\n\t\ttabPanel : {\n\t\t\tflexGrow        : 1,\n\t\t\tbackgroundColor : 'white',\n\t\t\t// backgroundColor : theme.palette.background.paper,\n\t\t\twidth           : '100%'\n\t\t},\n\t\tbackdrop : {\n\t\t\tzIndex : theme.zIndex.drawer + 1,\n\t\t\tcolor  : '#fff'\n\t\t}\n\t};\n});\n\nfunction GroupMembersPanel({ isCreator, isModerator, group }) {\n\tconsole.log('GroupMembersPanel - Start');\n\tconst theme = useTheme();\n\tconst classes = useStyles(theme);\n\tconst dispatch = useDispatch();\n\tconst groupStatus = useSelector((st) => st.groups.status);\n\n\tconsole.log('GroupMembersPanel', group);\n\n\tconst admin = group.members.find((member) => member.user_id === group.creator);\n\n\tconst moderators = group.members.filter(\n\t\t(member) => member.is_moderator === true && member.user_id !== group.creator\n\t);\n\n\tconst members = group.members.filter((member) => member.is_moderator === false);\n\n\tconsole.log('GroupMembersPanel', admin, Boolean(moderators), members);\n\n\t//add remove moderator\n\treturn (\n\t\t<div>\n\t\t\t<Typography gutterBottom variant=\"h6\">\n\t\t\t\tCreator\n\t\t\t</Typography>\n\t\t\t<UserList groupId={group.id} users={[ admin ]} />\n\n\t\t\t<Typography gutterBottom variant=\"h6\">\n\t\t\t\tModerators\n\t\t\t</Typography>\n\t\t\t{moderators.length ? (\n\t\t\t\t<UserList\n\t\t\t\t\tisCreator={isCreator}\n\t\t\t\t\tisModerator={isModerator}\n\t\t\t\t\tgroupId={group.id}\n\t\t\t\t\tusers={moderators}\n\t\t\t\t\ttype={'mods'}\n\t\t\t\t/>\n\t\t\t) : (\n\t\t\t\t<Typography gutterBottom>No moderators in this group.</Typography>\n\t\t\t)}\n\n\t\t\t<Typography gutterBottom variant=\"h6\">\n\t\t\t\tMembers\n\t\t\t</Typography>\n\t\t\t{members.length ? (\n\t\t\t\t<UserList\n\t\t\t\t\tisCreator={isCreator}\n\t\t\t\t\tisModerator={isModerator}\n\t\t\t\t\tgroupId={group.id}\n\t\t\t\t\tusers={members}\n\t\t\t\t\ttype={'members'}\n\t\t\t\t/>\n\t\t\t) : (\n\t\t\t\t<Typography gutterBottom>No members in this group.</Typography>\n\t\t\t)}\n\t\t</div>\n\t);\n}\nexport default GroupMembersPanel;\n","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/group/UserList.js",["630","631","632","633","634"],"import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\n\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\n\nimport { addModToGroup, removeMemberFromGroup, removeModFromGroup } from '../actions/groups';\n\nconst useStyles = makeStyles((theme) => ({\n\tbutton   : {\n\t\tmarginTop    : 5,\n\t\tmarginBottom : 5\n\t},\n\tuserInfo : {\n\t\tdisplay    : 'flex',\n\t\talignItems : 'center'\n\t},\n\tlistItem : {\n\t\tdisplay                      : 'flex',\n\t\tflexDirection                : 'column',\n\t\talignItems                   : 'flex-start',\n\n\t\t[theme.breakpoints.up('md')]: {\n\t\t\tdisplay        : 'flex',\n\t\t\tflexDirection  : 'row',\n\t\t\tjustifyContent : 'space-between'\n\t\t}\n\t}\n\t// style={{ display: 'flex', flexDirection: 'column', alignItems: 'flex-start' }}\n}));\n\n/**\n * List of provided array of users. Showing user pic/icon, Name, and \n * optional additions such as add/remove user button.\n */\nfunction UserList({ isCreator, isModerator, groupId, users, type }) {\n\tconst theme = useTheme();\n\tconst dispatch = useDispatch();\n\tconst classes = useStyles(theme);\n\tconst isAuthorized = useSelector((st) => st.auth.authenticated);\n\n\tconst actionBtns = (type, userId) => {\n\t\tif (!isAuthorized) return null;\n\t\tif (isCreator && type === 'mods') {\n\t\t\treturn (\n\t\t\t\t<Button\n\t\t\t\t\tclassName={classes.button}\n\t\t\t\t\tsize=\"small\"\n\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\tonClick={() => dispatch(removeModFromGroup(groupId, userId))}\n\t\t\t\t>\n\t\t\t\t\tRemove As Mod\n\t\t\t\t</Button>\n\t\t\t);\n\t\t}\n\t\telse if (type === 'members')\n\t\t\treturn (\n\t\t\t\t<div>\n\t\t\t\t\t{isModerator && (\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tclassName={classes.button}\n\t\t\t\t\t\t\tstyle={{ marginRight: 5 }}\n\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\tonClick={() => dispatch(removeMemberFromGroup(groupId, userId))}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tRemove Member\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t)}\n\t\t\t\t\t{isCreator && (\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tclassName={classes.button}\n\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\tonClick={() => dispatch(addModToGroup(groupId, userId))}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tAdd As Mod\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t);\n\t\telse return null;\n\t};\n\n\treturn (\n\t\t<List dense={true}>\n\t\t\t{users.map((user) => (\n\t\t\t\t<ListItem key={user.username} className={classes.listItem} divider>\n\t\t\t\t\t<div className={classes.userInfo}>\n\t\t\t\t\t\t<ListItemAvatar>\n\t\t\t\t\t\t\t<Avatar>{user.username[0]}</Avatar>\n\t\t\t\t\t\t</ListItemAvatar>\n\t\t\t\t\t\t<ListItemText primary={user.username} />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div style={{ display: 'flex' }}>{actionBtns(type, user.user_id)}</div>\n\t\t\t\t</ListItem>\n\t\t\t))}\n\t\t</List>\n\t);\n}\nexport default UserList;\n","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/About.js",["635","636"],"import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport lostWoods from './images/not-found-page.jpg';\n\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Link from '@material-ui/core/Link';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => {\n\treturn {\n\t\tinnerContent : {\n\t\t\tpadding  : 20,\n\t\t\t'& > h5' : {\n\t\t\t\tmarginTop : 10\n\t\t\t},\n\t\t\t'& > p'  : {\n\t\t\t\tmarginLeft : 20\n\t\t\t}\n\t\t}\n\t};\n});\n\nfunction About() {\n\tconst theme = useTheme();\n\tconst classes = useStyles(theme);\n\n\treturn (\n\t\t<Grid container className={classes.innerContent} direction=\"column\">\n\t\t\t<Typography align=\"center\" variant=\"h3\" style={{ fontWeight: 'bold' }} gutterBottom>\n\t\t\t\tAbout Tree-Markable\n\t\t\t</Typography>\n\t\t\t<Typography variant=\"h5\" gutterBottom>\n\t\t\t\tWhat is Tree-Markable?\n\t\t\t</Typography>\n\t\t\t<Typography gutterBottom>\n\t\t\t\tTree-Markable began as an idea inspired by some of the amazing ways in which local communities enable\n\t\t\t\ttheir residents to have meaningful engagement with their local urban forest.\n\t\t\t</Typography>\n\t\t\t<Typography gutterBottom>\n\t\t\t\tUsers can share trees that they find remarkable to give some recognition to the silent heroes that do so\n\t\t\t\tmuch for our communities through ecosystem services, climate change resilience, and their intrinsic\n\t\t\t\tvalue. Users can also make and join groups for more specific purposes or collections of trees such as\n\t\t\t\tfor neighborhoods, national champion trees, favorite species, etc.\n\t\t\t</Typography>\n\t\t\t<Typography gutterBottom>\n\t\t\t\tAnyone can search through the shared trees or groups, but signing up with Tree-Markable (no cost or\n\t\t\t\tspam) allows you to share your own, join groups, and comment on trees or groups.\n\t\t\t</Typography>\n\t\t\t<Typography variant=\"h5\" gutterBottom>\n\t\t\t\tWho made Tree-Markable?\n\t\t\t</Typography>\n\t\t\t<Typography gutterBottom>\n\t\t\t\tTree-Markable is a personal, open source project by the Clallam Tree Alliance, and as such is an\n\t\t\t\tevolving project that is subject to change in the future. This web app was created with the goal of\n\t\t\t\tenabling anyone interested in finding and sharing remarkable trees with their local communities and the\n\t\t\t\tworld at large. Check the{' '}\n\t\t\t\t<Link\n\t\t\t\t\thref=\"https://github.com/jvendettuoli/tree-markable\"\n\t\t\t\t\trel=\"norefferer\"\n\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\tstyle={{ color: theme.palette.primary.light }}\n\t\t\t\t>\n\t\t\t\t\tGitHub\n\t\t\t\t</Link>{' '}\n\t\t\t\tfor the project if you are interested in the technology used, or seeing the features that are planned\n\t\t\t\tfor the future, like paths to add tree walks, expanded image handling, custom map markers, and more!\n\t\t\t</Typography>\n\t\t\t<Typography variant=\"h5\" gutterBottom>\n\t\t\t\tWhat is the{' '}\n\t\t\t\t<Link\n\t\t\t\t\thref=\"https://www.facebook.com/clallamtreealliance\"\n\t\t\t\t\trel=\"norefferer\"\n\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\tstyle={{ color: theme.palette.primary.light }}\n\t\t\t\t>\n\t\t\t\t\tClallam Tree Alliance\n\t\t\t\t</Link>?\n\t\t\t</Typography>\n\t\t\t<Typography gutterBottom>\n\t\t\t\tClallam Tree Alliance started as a group of individuals looking to form an officially recognized tree\n\t\t\t\tboard for the City of Port Angeles, WA. After some assessment and evolution of priorities, we are now a\n\t\t\t\tgroup of dedicated volunteers that aims to strengthen our understanding and deepen our appreciation of\n\t\t\t\tthe economic, social, environmental and aesthetic gifts that trees bring to our lives. We hold planting\n\t\t\t\tevents to increase the cover of native plants and trees within the city, engage with the public and\n\t\t\t\tlocal policy makers about the importance of a healthy urban forest canopy, and occasionally donate happy\n\t\t\t\tplants to loving homes.\n\t\t\t</Typography>\n\t\t\t<Typography align=\"center\" variant=\"h4\" gutterBottom style={{ marginTop: 15 }} color=\"primary\">\n\t\t\t\tWe hope you enjoy sharing and exploring remarkable trees, and be sure to check back in as this project\n\t\t\t\tgrows from a sapling to a full-fledged tree!\n\t\t\t</Typography>\n\t\t</Grid>\n\t);\n}\nexport default About;\n","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/ProtectedRoute.js",["637"],"/home/justin/Documents/Springboard/SECT/tree-markable/client/src/PrivateEntityRoute.js",["638","639"],"/home/justin/Documents/Springboard/SECT/tree-markable/client/src/PrivateUserRoute.js",["640"],{"ruleId":"641","replacedBy":"642"},{"ruleId":"643","replacedBy":"644"},{"ruleId":"645","severity":1,"message":"646","line":15,"column":8,"nodeType":"647","messageId":"648","endLine":15,"endColumn":15},{"ruleId":"645","severity":1,"message":"649","line":1,"column":17,"nodeType":"647","messageId":"648","endLine":1,"endColumn":26},{"ruleId":"645","severity":1,"message":"650","line":26,"column":8,"nodeType":"647","messageId":"648","endLine":26,"endColumn":15},{"ruleId":"645","severity":1,"message":"651","line":31,"column":8,"nodeType":"647","messageId":"648","endLine":31,"endColumn":21},{"ruleId":"645","severity":1,"message":"652","line":2,"column":10,"nodeType":"647","messageId":"648","endLine":2,"endColumn":14},{"ruleId":"645","severity":1,"message":"653","line":2,"column":16,"nodeType":"647","messageId":"648","endLine":2,"endColumn":26},{"ruleId":"645","severity":1,"message":"654","line":5,"column":8,"nodeType":"647","messageId":"648","endLine":5,"endColumn":14},{"ruleId":"645","severity":1,"message":"655","line":6,"column":8,"nodeType":"647","messageId":"648","endLine":6,"endColumn":13},{"ruleId":"645","severity":1,"message":"656","line":8,"column":8,"nodeType":"647","messageId":"648","endLine":8,"endColumn":15},{"ruleId":"645","severity":1,"message":"657","line":9,"column":8,"nodeType":"647","messageId":"648","endLine":9,"endColumn":14},{"ruleId":"645","severity":1,"message":"658","line":12,"column":8,"nodeType":"647","messageId":"648","endLine":12,"endColumn":18},{"ruleId":"645","severity":1,"message":"659","line":13,"column":8,"nodeType":"647","messageId":"648","endLine":13,"endColumn":12},{"ruleId":"645","severity":1,"message":"660","line":14,"column":8,"nodeType":"647","messageId":"648","endLine":14,"endColumn":16},{"ruleId":"645","severity":1,"message":"661","line":15,"column":8,"nodeType":"647","messageId":"648","endLine":15,"endColumn":20},{"ruleId":"645","severity":1,"message":"662","line":16,"column":8,"nodeType":"647","messageId":"648","endLine":16,"endColumn":20},{"ruleId":"645","severity":1,"message":"663","line":17,"column":8,"nodeType":"647","messageId":"648","endLine":17,"endColumn":16},{"ruleId":"645","severity":1,"message":"664","line":18,"column":8,"nodeType":"647","messageId":"648","endLine":18,"endColumn":12},{"ruleId":"645","severity":1,"message":"665","line":20,"column":10,"nodeType":"647","messageId":"648","endLine":20,"endColumn":18},{"ruleId":"645","severity":1,"message":"666","line":21,"column":19,"nodeType":"647","messageId":"648","endLine":21,"endColumn":36},{"ruleId":"645","severity":1,"message":"667","line":23,"column":8,"nodeType":"647","messageId":"648","endLine":23,"endColumn":15},{"ruleId":"645","severity":1,"message":"668","line":24,"column":8,"nodeType":"647","messageId":"648","endLine":24,"endColumn":18},{"ruleId":"645","severity":1,"message":"669","line":28,"column":10,"nodeType":"647","messageId":"648","endLine":28,"endColumn":21},{"ruleId":"645","severity":1,"message":"670","line":37,"column":8,"nodeType":"647","messageId":"648","endLine":37,"endColumn":18},{"ruleId":"645","severity":1,"message":"671","line":38,"column":8,"nodeType":"647","messageId":"648","endLine":38,"endColumn":16},{"ruleId":"645","severity":1,"message":"672","line":39,"column":20,"nodeType":"647","messageId":"648","endLine":39,"endColumn":31},{"ruleId":"645","severity":1,"message":"673","line":40,"column":8,"nodeType":"647","messageId":"648","endLine":40,"endColumn":12},{"ruleId":"645","severity":1,"message":"674","line":8,"column":50,"nodeType":"647","messageId":"648","endLine":8,"endColumn":61},{"ruleId":"645","severity":1,"message":"652","line":2,"column":10,"nodeType":"647","messageId":"648","endLine":2,"endColumn":14},{"ruleId":"645","severity":1,"message":"657","line":6,"column":8,"nodeType":"647","messageId":"648","endLine":6,"endColumn":14},{"ruleId":"645","severity":1,"message":"675","line":6,"column":8,"nodeType":"647","messageId":"648","endLine":6,"endColumn":11},{"ruleId":"645","severity":1,"message":"653","line":2,"column":16,"nodeType":"647","messageId":"648","endLine":2,"endColumn":26},{"ruleId":"645","severity":1,"message":"655","line":6,"column":8,"nodeType":"647","messageId":"648","endLine":6,"endColumn":13},{"ruleId":"645","severity":1,"message":"656","line":8,"column":8,"nodeType":"647","messageId":"648","endLine":8,"endColumn":15},{"ruleId":"645","severity":1,"message":"676","line":11,"column":8,"nodeType":"647","messageId":"648","endLine":11,"endColumn":12},{"ruleId":"645","severity":1,"message":"659","line":14,"column":8,"nodeType":"647","messageId":"648","endLine":14,"endColumn":12},{"ruleId":"645","severity":1,"message":"660","line":15,"column":8,"nodeType":"647","messageId":"648","endLine":15,"endColumn":16},{"ruleId":"645","severity":1,"message":"661","line":16,"column":8,"nodeType":"647","messageId":"648","endLine":16,"endColumn":20},{"ruleId":"645","severity":1,"message":"662","line":17,"column":8,"nodeType":"647","messageId":"648","endLine":17,"endColumn":20},{"ruleId":"645","severity":1,"message":"677","line":2,"column":10,"nodeType":"647","messageId":"648","endLine":2,"endColumn":16},{"ruleId":"645","severity":1,"message":"678","line":2,"column":18,"nodeType":"647","messageId":"648","endLine":2,"endColumn":24},{"ruleId":"645","severity":1,"message":"679","line":2,"column":26,"nodeType":"647","messageId":"648","endLine":2,"endColumn":33},{"ruleId":"645","severity":1,"message":"680","line":2,"column":35,"nodeType":"647","messageId":"648","endLine":2,"endColumn":48},{"ruleId":"645","severity":1,"message":"674","line":2,"column":50,"nodeType":"647","messageId":"648","endLine":2,"endColumn":61},{"ruleId":"645","severity":1,"message":"681","line":11,"column":8,"nodeType":"647","messageId":"648","endLine":11,"endColumn":15},{"ruleId":"645","severity":1,"message":"682","line":12,"column":8,"nodeType":"647","messageId":"648","endLine":12,"endColumn":22},{"ruleId":"645","severity":1,"message":"683","line":13,"column":8,"nodeType":"647","messageId":"648","endLine":13,"endColumn":14},{"ruleId":"645","severity":1,"message":"684","line":1,"column":27,"nodeType":"647","messageId":"648","endLine":1,"endColumn":33},{"ruleId":"645","severity":1,"message":"649","line":1,"column":35,"nodeType":"647","messageId":"648","endLine":1,"endColumn":44},{"ruleId":"645","severity":1,"message":"685","line":5,"column":22,"nodeType":"647","messageId":"648","endLine":5,"endColumn":30},{"ruleId":"645","severity":1,"message":"676","line":7,"column":8,"nodeType":"647","messageId":"648","endLine":7,"endColumn":12},{"ruleId":"645","severity":1,"message":"686","line":8,"column":8,"nodeType":"647","messageId":"648","endLine":8,"endColumn":17},{"ruleId":"645","severity":1,"message":"687","line":9,"column":8,"nodeType":"647","messageId":"648","endLine":9,"endColumn":14},{"ruleId":"645","severity":1,"message":"663","line":10,"column":8,"nodeType":"647","messageId":"648","endLine":10,"endColumn":16},{"ruleId":"645","severity":1,"message":"688","line":14,"column":8,"nodeType":"647","messageId":"648","endLine":14,"endColumn":23},{"ruleId":"645","severity":1,"message":"689","line":1,"column":17,"nodeType":"647","messageId":"648","endLine":1,"endColumn":25},{"ruleId":"645","severity":1,"message":"684","line":1,"column":27,"nodeType":"647","messageId":"648","endLine":1,"endColumn":33},{"ruleId":"645","severity":1,"message":"649","line":1,"column":35,"nodeType":"647","messageId":"648","endLine":1,"endColumn":44},{"ruleId":"645","severity":1,"message":"668","line":3,"column":8,"nodeType":"647","messageId":"648","endLine":3,"endColumn":18},{"ruleId":"645","severity":1,"message":"687","line":9,"column":8,"nodeType":"647","messageId":"648","endLine":9,"endColumn":14},{"ruleId":"645","severity":1,"message":"657","line":11,"column":8,"nodeType":"647","messageId":"648","endLine":11,"endColumn":14},{"ruleId":"645","severity":1,"message":"688","line":14,"column":8,"nodeType":"647","messageId":"648","endLine":14,"endColumn":23},{"ruleId":"645","severity":1,"message":"690","line":15,"column":8,"nodeType":"647","messageId":"648","endLine":15,"endColumn":25},{"ruleId":"645","severity":1,"message":"691","line":16,"column":10,"nodeType":"647","messageId":"648","endLine":16,"endColumn":18},{"ruleId":"645","severity":1,"message":"692","line":16,"column":20,"nodeType":"647","messageId":"648","endLine":16,"endColumn":42},{"ruleId":"645","severity":1,"message":"693","line":17,"column":8,"nodeType":"647","messageId":"648","endLine":17,"endColumn":19},{"ruleId":"645","severity":1,"message":"649","line":1,"column":27,"nodeType":"647","messageId":"648","endLine":1,"endColumn":36},{"ruleId":"645","severity":1,"message":"684","line":1,"column":27,"nodeType":"647","messageId":"648","endLine":1,"endColumn":33},{"ruleId":"645","severity":1,"message":"676","line":5,"column":8,"nodeType":"647","messageId":"648","endLine":5,"endColumn":12},{"ruleId":"645","severity":1,"message":"694","line":6,"column":8,"nodeType":"647","messageId":"648","endLine":6,"endColumn":19},{"ruleId":"645","severity":1,"message":"686","line":8,"column":8,"nodeType":"647","messageId":"648","endLine":8,"endColumn":17},{"ruleId":"645","severity":1,"message":"659","line":9,"column":8,"nodeType":"647","messageId":"648","endLine":9,"endColumn":12},{"ruleId":"645","severity":1,"message":"660","line":10,"column":8,"nodeType":"647","messageId":"648","endLine":10,"endColumn":16},{"ruleId":"645","severity":1,"message":"661","line":11,"column":8,"nodeType":"647","messageId":"648","endLine":11,"endColumn":20},{"ruleId":"645","severity":1,"message":"662","line":12,"column":8,"nodeType":"647","messageId":"648","endLine":12,"endColumn":20},{"ruleId":"645","severity":1,"message":"657","line":13,"column":8,"nodeType":"647","messageId":"648","endLine":13,"endColumn":14},{"ruleId":"645","severity":1,"message":"684","line":1,"column":27,"nodeType":"647","messageId":"648","endLine":1,"endColumn":33},{"ruleId":"645","severity":1,"message":"695","line":3,"column":8,"nodeType":"647","messageId":"648","endLine":3,"endColumn":22},{"ruleId":"645","severity":1,"message":"676","line":6,"column":8,"nodeType":"647","messageId":"648","endLine":6,"endColumn":12},{"ruleId":"645","severity":1,"message":"694","line":7,"column":8,"nodeType":"647","messageId":"648","endLine":7,"endColumn":19},{"ruleId":"645","severity":1,"message":"668","line":8,"column":8,"nodeType":"647","messageId":"648","endLine":8,"endColumn":18},{"ruleId":"645","severity":1,"message":"686","line":9,"column":8,"nodeType":"647","messageId":"648","endLine":9,"endColumn":17},{"ruleId":"645","severity":1,"message":"659","line":10,"column":8,"nodeType":"647","messageId":"648","endLine":10,"endColumn":12},{"ruleId":"645","severity":1,"message":"660","line":11,"column":8,"nodeType":"647","messageId":"648","endLine":11,"endColumn":16},{"ruleId":"645","severity":1,"message":"661","line":12,"column":8,"nodeType":"647","messageId":"648","endLine":12,"endColumn":20},{"ruleId":"645","severity":1,"message":"662","line":13,"column":8,"nodeType":"647","messageId":"648","endLine":13,"endColumn":20},{"ruleId":"645","severity":1,"message":"657","line":14,"column":8,"nodeType":"647","messageId":"648","endLine":14,"endColumn":14},{"ruleId":"645","severity":1,"message":"655","line":15,"column":8,"nodeType":"647","messageId":"648","endLine":15,"endColumn":13},{"ruleId":"645","severity":1,"message":"654","line":17,"column":8,"nodeType":"647","messageId":"648","endLine":17,"endColumn":14},{"ruleId":"645","severity":1,"message":"696","line":18,"column":8,"nodeType":"647","messageId":"648","endLine":18,"endColumn":12},{"ruleId":"645","severity":1,"message":"697","line":19,"column":8,"nodeType":"647","messageId":"648","endLine":19,"endColumn":11},{"ruleId":"645","severity":1,"message":"675","line":20,"column":8,"nodeType":"647","messageId":"648","endLine":20,"endColumn":11},{"ruleId":"645","severity":1,"message":"684","line":1,"column":27,"nodeType":"647","messageId":"648","endLine":1,"endColumn":33},{"ruleId":"645","severity":1,"message":"656","line":8,"column":8,"nodeType":"647","messageId":"648","endLine":8,"endColumn":15},{"ruleId":"645","severity":1,"message":"698","line":14,"column":8,"nodeType":"647","messageId":"648","endLine":14,"endColumn":17},{"ruleId":"645","severity":1,"message":"684","line":1,"column":27,"nodeType":"647","messageId":"648","endLine":1,"endColumn":33},{"ruleId":"645","severity":1,"message":"655","line":8,"column":8,"nodeType":"647","messageId":"648","endLine":8,"endColumn":13},{"ruleId":"645","severity":1,"message":"675","line":9,"column":8,"nodeType":"647","messageId":"648","endLine":9,"endColumn":11},{"ruleId":"645","severity":1,"message":"660","line":10,"column":8,"nodeType":"647","messageId":"648","endLine":10,"endColumn":16},{"ruleId":"645","severity":1,"message":"661","line":11,"column":8,"nodeType":"647","messageId":"648","endLine":11,"endColumn":20},{"ruleId":"645","severity":1,"message":"662","line":12,"column":8,"nodeType":"647","messageId":"648","endLine":12,"endColumn":20},{"ruleId":"645","severity":1,"message":"657","line":13,"column":8,"nodeType":"647","messageId":"648","endLine":13,"endColumn":14},{"ruleId":"645","severity":1,"message":"699","line":15,"column":20,"nodeType":"647","messageId":"648","endLine":15,"endColumn":29},{"ruleId":"645","severity":1,"message":"690","line":16,"column":8,"nodeType":"647","messageId":"648","endLine":16,"endColumn":25},{"ruleId":"645","severity":1,"message":"693","line":17,"column":8,"nodeType":"647","messageId":"648","endLine":17,"endColumn":19},{"ruleId":"645","severity":1,"message":"700","line":18,"column":8,"nodeType":"647","messageId":"648","endLine":18,"endColumn":16},{"ruleId":"645","severity":1,"message":"701","line":23,"column":8,"nodeType":"647","messageId":"648","endLine":23,"endColumn":18},{"ruleId":"645","severity":1,"message":"689","line":1,"column":17,"nodeType":"647","messageId":"648","endLine":1,"endColumn":25},{"ruleId":"645","severity":1,"message":"686","line":9,"column":8,"nodeType":"647","messageId":"648","endLine":9,"endColumn":17},{"ruleId":"645","severity":1,"message":"657","line":10,"column":8,"nodeType":"647","messageId":"648","endLine":10,"endColumn":14},{"ruleId":"645","severity":1,"message":"669","line":12,"column":22,"nodeType":"647","messageId":"648","endLine":12,"endColumn":33},{"ruleId":"645","severity":1,"message":"702","line":13,"column":10,"nodeType":"647","messageId":"648","endLine":13,"endColumn":22},{"ruleId":"645","severity":1,"message":"703","line":2,"column":22,"nodeType":"647","messageId":"648","endLine":2,"endColumn":31},{"ruleId":"645","severity":1,"message":"689","line":1,"column":17,"nodeType":"647","messageId":"648","endLine":1,"endColumn":25},{"ruleId":"645","severity":1,"message":"686","line":8,"column":8,"nodeType":"647","messageId":"648","endLine":8,"endColumn":17},{"ruleId":"645","severity":1,"message":"657","line":9,"column":8,"nodeType":"647","messageId":"648","endLine":9,"endColumn":14},{"ruleId":"645","severity":1,"message":"702","line":13,"column":10,"nodeType":"647","messageId":"648","endLine":13,"endColumn":22},{"ruleId":"645","severity":1,"message":"704","line":15,"column":8,"nodeType":"647","messageId":"648","endLine":15,"endColumn":25},{"ruleId":"645","severity":1,"message":"705","line":16,"column":10,"nodeType":"647","messageId":"648","endLine":16,"endColumn":24},{"ruleId":"706","severity":1,"message":"707","line":48,"column":3,"nodeType":"708","endLine":48,"endColumn":32,"suggestions":"709"},{"ruleId":"645","severity":1,"message":"703","line":2,"column":30,"nodeType":"647","messageId":"648","endLine":2,"endColumn":39},{"ruleId":"645","severity":1,"message":"652","line":7,"column":8,"nodeType":"647","messageId":"648","endLine":7,"endColumn":12},{"ruleId":"645","severity":1,"message":"661","line":10,"column":8,"nodeType":"647","messageId":"648","endLine":10,"endColumn":20},{"ruleId":"645","severity":1,"message":"655","line":12,"column":8,"nodeType":"647","messageId":"648","endLine":12,"endColumn":13},{"ruleId":"645","severity":1,"message":"710","line":15,"column":8,"nodeType":"647","messageId":"648","endLine":15,"endColumn":22},{"ruleId":"645","severity":1,"message":"711","line":65,"column":25,"nodeType":"647","messageId":"648","endLine":65,"endColumn":30},{"ruleId":"645","severity":1,"message":"712","line":65,"column":32,"nodeType":"647","messageId":"648","endLine":65,"endColumn":39},{"ruleId":"645","severity":1,"message":"713","line":65,"column":41,"nodeType":"647","messageId":"648","endLine":65,"endColumn":51},{"ruleId":"645","severity":1,"message":"714","line":65,"column":53,"nodeType":"647","messageId":"648","endLine":65,"endColumn":61},{"ruleId":"645","severity":1,"message":"715","line":82,"column":8,"nodeType":"647","messageId":"648","endLine":82,"endColumn":17},{"ruleId":"645","severity":1,"message":"716","line":3,"column":10,"nodeType":"647","messageId":"648","endLine":3,"endColumn":20},{"ruleId":"645","severity":1,"message":"656","line":8,"column":8,"nodeType":"647","messageId":"648","endLine":8,"endColumn":15},{"ruleId":"645","severity":1,"message":"675","line":9,"column":8,"nodeType":"647","messageId":"648","endLine":9,"endColumn":11},{"ruleId":"645","severity":1,"message":"687","line":11,"column":8,"nodeType":"647","messageId":"648","endLine":11,"endColumn":14},{"ruleId":"645","severity":1,"message":"655","line":15,"column":8,"nodeType":"647","messageId":"648","endLine":15,"endColumn":13},{"ruleId":"645","severity":1,"message":"658","line":8,"column":8,"nodeType":"647","messageId":"648","endLine":8,"endColumn":18},{"ruleId":"645","severity":1,"message":"717","line":11,"column":28,"nodeType":"647","messageId":"648","endLine":11,"endColumn":46},{"ruleId":"645","severity":1,"message":"718","line":16,"column":10,"nodeType":"647","messageId":"648","endLine":16,"endColumn":25},{"ruleId":"645","severity":1,"message":"719","line":16,"column":27,"nodeType":"647","messageId":"648","endLine":16,"endColumn":47},{"ruleId":"645","severity":1,"message":"671","line":45,"column":8,"nodeType":"647","messageId":"648","endLine":45,"endColumn":16},{"ruleId":"645","severity":1,"message":"716","line":3,"column":10,"nodeType":"647","messageId":"648","endLine":3,"endColumn":20},{"ruleId":"645","severity":1,"message":"720","line":7,"column":8,"nodeType":"647","messageId":"648","endLine":7,"endColumn":15},{"ruleId":"645","severity":1,"message":"656","line":8,"column":8,"nodeType":"647","messageId":"648","endLine":8,"endColumn":15},{"ruleId":"645","severity":1,"message":"675","line":9,"column":8,"nodeType":"647","messageId":"648","endLine":9,"endColumn":11},{"ruleId":"645","severity":1,"message":"687","line":11,"column":8,"nodeType":"647","messageId":"648","endLine":11,"endColumn":14},{"ruleId":"645","severity":1,"message":"663","line":12,"column":8,"nodeType":"647","messageId":"648","endLine":12,"endColumn":16},{"ruleId":"645","severity":1,"message":"721","line":14,"column":8,"nodeType":"647","messageId":"648","endLine":14,"endColumn":16},{"ruleId":"645","severity":1,"message":"655","line":15,"column":8,"nodeType":"647","messageId":"648","endLine":15,"endColumn":13},{"ruleId":"645","severity":1,"message":"722","line":16,"column":8,"nodeType":"647","messageId":"648","endLine":16,"endColumn":24},{"ruleId":"645","severity":1,"message":"689","line":1,"column":17,"nodeType":"647","messageId":"648","endLine":1,"endColumn":25},{"ruleId":"645","severity":1,"message":"684","line":1,"column":27,"nodeType":"647","messageId":"648","endLine":1,"endColumn":33},{"ruleId":"645","severity":1,"message":"649","line":1,"column":35,"nodeType":"647","messageId":"648","endLine":1,"endColumn":44},{"ruleId":"645","severity":1,"message":"676","line":6,"column":8,"nodeType":"647","messageId":"648","endLine":6,"endColumn":12},{"ruleId":"645","severity":1,"message":"668","line":7,"column":8,"nodeType":"647","messageId":"648","endLine":7,"endColumn":18},{"ruleId":"645","severity":1,"message":"686","line":8,"column":8,"nodeType":"647","messageId":"648","endLine":8,"endColumn":17},{"ruleId":"645","severity":1,"message":"659","line":9,"column":8,"nodeType":"647","messageId":"648","endLine":9,"endColumn":12},{"ruleId":"645","severity":1,"message":"660","line":10,"column":8,"nodeType":"647","messageId":"648","endLine":10,"endColumn":16},{"ruleId":"645","severity":1,"message":"661","line":11,"column":8,"nodeType":"647","messageId":"648","endLine":11,"endColumn":20},{"ruleId":"645","severity":1,"message":"662","line":12,"column":8,"nodeType":"647","messageId":"648","endLine":12,"endColumn":20},{"ruleId":"645","severity":1,"message":"658","line":14,"column":8,"nodeType":"647","messageId":"648","endLine":14,"endColumn":18},{"ruleId":"645","severity":1,"message":"717","line":17,"column":28,"nodeType":"647","messageId":"648","endLine":17,"endColumn":46},{"ruleId":"645","severity":1,"message":"723","line":17,"column":60,"nodeType":"647","messageId":"648","endLine":17,"endColumn":72},{"ruleId":"645","severity":1,"message":"724","line":19,"column":10,"nodeType":"647","messageId":"648","endLine":19,"endColumn":25},{"ruleId":"645","severity":1,"message":"690","line":20,"column":8,"nodeType":"647","messageId":"648","endLine":20,"endColumn":25},{"ruleId":"645","severity":1,"message":"691","line":21,"column":10,"nodeType":"647","messageId":"648","endLine":21,"endColumn":18},{"ruleId":"645","severity":1,"message":"692","line":21,"column":20,"nodeType":"647","messageId":"648","endLine":21,"endColumn":42},{"ruleId":"645","severity":1,"message":"693","line":22,"column":8,"nodeType":"647","messageId":"648","endLine":22,"endColumn":19},{"ruleId":"645","severity":1,"message":"718","line":23,"column":10,"nodeType":"647","messageId":"648","endLine":23,"endColumn":25},{"ruleId":"645","severity":1,"message":"719","line":23,"column":27,"nodeType":"647","messageId":"648","endLine":23,"endColumn":47},{"ruleId":"645","severity":1,"message":"725","line":45,"column":7,"nodeType":"647","messageId":"648","endLine":45,"endColumn":28},{"ruleId":"645","severity":1,"message":"671","line":51,"column":8,"nodeType":"647","messageId":"648","endLine":51,"endColumn":16},{"ruleId":"645","severity":1,"message":"726","line":52,"column":10,"nodeType":"647","messageId":"648","endLine":52,"endColumn":13},{"ruleId":"645","severity":1,"message":"727","line":52,"column":15,"nodeType":"647","messageId":"648","endLine":52,"endColumn":23},{"ruleId":"645","severity":1,"message":"728","line":52,"column":25,"nodeType":"647","messageId":"648","endLine":52,"endColumn":38},{"ruleId":"645","severity":1,"message":"646","line":35,"column":8,"nodeType":"647","messageId":"648","endLine":35,"endColumn":15},{"ruleId":"645","severity":1,"message":"726","line":39,"column":10,"nodeType":"647","messageId":"648","endLine":39,"endColumn":13},{"ruleId":"645","severity":1,"message":"712","line":39,"column":32,"nodeType":"647","messageId":"648","endLine":39,"endColumn":39},{"ruleId":"645","severity":1,"message":"714","line":39,"column":53,"nodeType":"647","messageId":"648","endLine":39,"endColumn":61},{"ruleId":"645","severity":1,"message":"729","line":39,"column":63,"nodeType":"647","messageId":"648","endLine":39,"endColumn":75},{"ruleId":"645","severity":1,"message":"730","line":39,"column":77,"nodeType":"647","messageId":"648","endLine":39,"endColumn":85},{"ruleId":"645","severity":1,"message":"731","line":43,"column":8,"nodeType":"647","messageId":"648","endLine":43,"endColumn":18},{"ruleId":"645","severity":1,"message":"649","line":1,"column":27,"nodeType":"647","messageId":"648","endLine":1,"endColumn":36},{"ruleId":"645","severity":1,"message":"732","line":2,"column":10,"nodeType":"647","messageId":"648","endLine":2,"endColumn":20},{"ruleId":"645","severity":1,"message":"733","line":3,"column":10,"nodeType":"647","messageId":"648","endLine":3,"endColumn":21},{"ruleId":"645","severity":1,"message":"734","line":5,"column":10,"nodeType":"647","messageId":"648","endLine":5,"endColumn":20},{"ruleId":"645","severity":1,"message":"716","line":8,"column":10,"nodeType":"647","messageId":"648","endLine":8,"endColumn":20},{"ruleId":"645","severity":1,"message":"676","line":9,"column":8,"nodeType":"647","messageId":"648","endLine":9,"endColumn":12},{"ruleId":"645","severity":1,"message":"668","line":10,"column":8,"nodeType":"647","messageId":"648","endLine":10,"endColumn":18},{"ruleId":"645","severity":1,"message":"704","line":15,"column":8,"nodeType":"647","messageId":"648","endLine":15,"endColumn":25},{"ruleId":"645","severity":1,"message":"705","line":16,"column":10,"nodeType":"647","messageId":"648","endLine":16,"endColumn":24},{"ruleId":"645","severity":1,"message":"732","line":2,"column":10,"nodeType":"647","messageId":"648","endLine":2,"endColumn":20},{"ruleId":"645","severity":1,"message":"733","line":3,"column":10,"nodeType":"647","messageId":"648","endLine":3,"endColumn":21},{"ruleId":"645","severity":1,"message":"716","line":5,"column":10,"nodeType":"647","messageId":"648","endLine":5,"endColumn":20},{"ruleId":"645","severity":1,"message":"676","line":6,"column":8,"nodeType":"647","messageId":"648","endLine":6,"endColumn":12},{"ruleId":"645","severity":1,"message":"668","line":7,"column":8,"nodeType":"647","messageId":"648","endLine":7,"endColumn":18},{"ruleId":"645","severity":1,"message":"735","line":11,"column":10,"nodeType":"647","messageId":"648","endLine":11,"endColumn":20},{"ruleId":"645","severity":1,"message":"669","line":11,"column":22,"nodeType":"647","messageId":"648","endLine":11,"endColumn":33},{"ruleId":"645","severity":1,"message":"684","line":1,"column":27,"nodeType":"647","messageId":"648","endLine":1,"endColumn":33},{"ruleId":"645","severity":1,"message":"703","line":3,"column":10,"nodeType":"647","messageId":"648","endLine":3,"endColumn":19},{"ruleId":"706","severity":1,"message":"736","line":31,"column":5,"nodeType":"708","endLine":31,"endColumn":7,"suggestions":"737"},{"ruleId":"645","severity":1,"message":"689","line":1,"column":17,"nodeType":"647","messageId":"648","endLine":1,"endColumn":25},{"ruleId":"645","severity":1,"message":"684","line":1,"column":27,"nodeType":"647","messageId":"648","endLine":1,"endColumn":33},{"ruleId":"645","severity":1,"message":"649","line":1,"column":35,"nodeType":"647","messageId":"648","endLine":1,"endColumn":44},{"ruleId":"645","severity":1,"message":"668","line":4,"column":8,"nodeType":"647","messageId":"648","endLine":4,"endColumn":18},{"ruleId":"645","severity":1,"message":"721","line":5,"column":8,"nodeType":"647","messageId":"648","endLine":5,"endColumn":16},{"ruleId":"645","severity":1,"message":"722","line":6,"column":8,"nodeType":"647","messageId":"648","endLine":6,"endColumn":24},{"ruleId":"645","severity":1,"message":"687","line":10,"column":8,"nodeType":"647","messageId":"648","endLine":10,"endColumn":14},{"ruleId":"645","severity":1,"message":"663","line":11,"column":8,"nodeType":"647","messageId":"648","endLine":11,"endColumn":16},{"ruleId":"645","severity":1,"message":"657","line":12,"column":8,"nodeType":"647","messageId":"648","endLine":12,"endColumn":14},{"ruleId":"645","severity":1,"message":"738","line":2,"column":10,"nodeType":"647","messageId":"648","endLine":2,"endColumn":21},{"ruleId":"645","severity":1,"message":"739","line":12,"column":10,"nodeType":"647","messageId":"648","endLine":12,"endColumn":20},{"ruleId":"740","severity":1,"message":"741","line":131,"column":8,"nodeType":"742","endLine":131,"endColumn":56},{"ruleId":"645","severity":1,"message":"743","line":2,"column":10,"nodeType":"647","messageId":"648","endLine":2,"endColumn":22},{"ruleId":"645","severity":1,"message":"744","line":2,"column":24,"nodeType":"647","messageId":"648","endLine":2,"endColumn":30},{"ruleId":"645","severity":1,"message":"745","line":2,"column":32,"nodeType":"647","messageId":"648","endLine":2,"endColumn":44},{"ruleId":"645","severity":1,"message":"746","line":2,"column":46,"nodeType":"647","messageId":"648","endLine":2,"endColumn":52},{"ruleId":"645","severity":1,"message":"747","line":2,"column":54,"nodeType":"647","messageId":"648","endLine":2,"endColumn":59},{"ruleId":"645","severity":1,"message":"748","line":2,"column":61,"nodeType":"647","messageId":"648","endLine":2,"endColumn":70},{"ruleId":"645","severity":1,"message":"749","line":3,"column":10,"nodeType":"647","messageId":"648","endLine":3,"endColumn":26},{"ruleId":"645","severity":1,"message":"750","line":3,"column":28,"nodeType":"647","messageId":"648","endLine":3,"endColumn":49},{"ruleId":"645","severity":1,"message":"687","line":9,"column":8,"nodeType":"647","messageId":"648","endLine":9,"endColumn":14},{"ruleId":"645","severity":1,"message":"663","line":10,"column":8,"nodeType":"647","messageId":"648","endLine":10,"endColumn":16},{"ruleId":"645","severity":1,"message":"716","line":13,"column":10,"nodeType":"647","messageId":"648","endLine":13,"endColumn":20},{"ruleId":"645","severity":1,"message":"751","line":14,"column":8,"nodeType":"647","messageId":"648","endLine":14,"endColumn":24},{"ruleId":"645","severity":1,"message":"752","line":8,"column":8,"nodeType":"647","messageId":"648","endLine":8,"endColumn":12},{"ruleId":"645","severity":1,"message":"684","line":1,"column":27,"nodeType":"647","messageId":"648","endLine":1,"endColumn":33},{"ruleId":"645","severity":1,"message":"733","line":2,"column":23,"nodeType":"647","messageId":"648","endLine":2,"endColumn":34},{"ruleId":"645","severity":1,"message":"703","line":3,"column":30,"nodeType":"647","messageId":"648","endLine":3,"endColumn":39},{"ruleId":"645","severity":1,"message":"661","line":11,"column":8,"nodeType":"647","messageId":"648","endLine":11,"endColumn":20},{"ruleId":"645","severity":1,"message":"662","line":12,"column":8,"nodeType":"647","messageId":"648","endLine":12,"endColumn":20},{"ruleId":"645","severity":1,"message":"657","line":13,"column":8,"nodeType":"647","messageId":"648","endLine":13,"endColumn":14},{"ruleId":"645","severity":1,"message":"655","line":14,"column":8,"nodeType":"647","messageId":"648","endLine":14,"endColumn":13},{"ruleId":"645","severity":1,"message":"753","line":15,"column":8,"nodeType":"647","messageId":"648","endLine":15,"endColumn":12},{"ruleId":"645","severity":1,"message":"656","line":16,"column":8,"nodeType":"647","messageId":"648","endLine":16,"endColumn":15},{"ruleId":"645","severity":1,"message":"754","line":17,"column":8,"nodeType":"647","messageId":"648","endLine":17,"endColumn":19},{"ruleId":"645","severity":1,"message":"755","line":22,"column":10,"nodeType":"647","messageId":"648","endLine":22,"endColumn":24},{"ruleId":"645","severity":1,"message":"724","line":22,"column":26,"nodeType":"647","messageId":"648","endLine":22,"endColumn":41},{"ruleId":"645","severity":1,"message":"701","line":23,"column":8,"nodeType":"647","messageId":"648","endLine":23,"endColumn":18},{"ruleId":"645","severity":1,"message":"693","line":24,"column":8,"nodeType":"647","messageId":"648","endLine":24,"endColumn":19},{"ruleId":"645","severity":1,"message":"700","line":25,"column":8,"nodeType":"647","messageId":"648","endLine":25,"endColumn":16},{"ruleId":"645","severity":1,"message":"684","line":1,"column":27,"nodeType":"647","messageId":"648","endLine":1,"endColumn":33},{"ruleId":"645","severity":1,"message":"649","line":1,"column":35,"nodeType":"647","messageId":"648","endLine":1,"endColumn":44},{"ruleId":"645","severity":1,"message":"738","line":2,"column":10,"nodeType":"647","messageId":"648","endLine":2,"endColumn":21},{"ruleId":"645","severity":1,"message":"733","line":2,"column":23,"nodeType":"647","messageId":"648","endLine":2,"endColumn":34},{"ruleId":"645","severity":1,"message":"703","line":3,"column":10,"nodeType":"647","messageId":"648","endLine":3,"endColumn":19},{"ruleId":"645","severity":1,"message":"659","line":9,"column":8,"nodeType":"647","messageId":"648","endLine":9,"endColumn":12},{"ruleId":"645","severity":1,"message":"660","line":10,"column":8,"nodeType":"647","messageId":"648","endLine":10,"endColumn":16},{"ruleId":"645","severity":1,"message":"661","line":11,"column":8,"nodeType":"647","messageId":"648","endLine":11,"endColumn":20},{"ruleId":"645","severity":1,"message":"662","line":12,"column":8,"nodeType":"647","messageId":"648","endLine":12,"endColumn":20},{"ruleId":"645","severity":1,"message":"657","line":13,"column":8,"nodeType":"647","messageId":"648","endLine":13,"endColumn":14},{"ruleId":"645","severity":1,"message":"753","line":14,"column":8,"nodeType":"647","messageId":"648","endLine":14,"endColumn":12},{"ruleId":"645","severity":1,"message":"754","line":15,"column":8,"nodeType":"647","messageId":"648","endLine":15,"endColumn":19},{"ruleId":"645","severity":1,"message":"655","line":17,"column":8,"nodeType":"647","messageId":"648","endLine":17,"endColumn":13},{"ruleId":"645","severity":1,"message":"756","line":24,"column":8,"nodeType":"647","messageId":"648","endLine":24,"endColumn":19},{"ruleId":"645","severity":1,"message":"689","line":1,"column":17,"nodeType":"647","messageId":"648","endLine":1,"endColumn":25},{"ruleId":"645","severity":1,"message":"649","line":1,"column":27,"nodeType":"647","messageId":"648","endLine":1,"endColumn":36},{"ruleId":"645","severity":1,"message":"738","line":3,"column":10,"nodeType":"647","messageId":"648","endLine":3,"endColumn":21},{"ruleId":"645","severity":1,"message":"733","line":3,"column":23,"nodeType":"647","messageId":"648","endLine":3,"endColumn":34},{"ruleId":"645","severity":1,"message":"757","line":6,"column":10,"nodeType":"647","messageId":"648","endLine":6,"endColumn":18},{"ruleId":"645","severity":1,"message":"758","line":7,"column":9,"nodeType":"647","messageId":"648","endLine":7,"endColumn":16},{"ruleId":"645","severity":1,"message":"759","line":8,"column":12,"nodeType":"647","messageId":"648","endLine":8,"endColumn":22},{"ruleId":"645","severity":1,"message":"760","line":9,"column":11,"nodeType":"647","messageId":"648","endLine":9,"endColumn":20},{"ruleId":"645","severity":1,"message":"761","line":10,"column":13,"nodeType":"647","messageId":"648","endLine":10,"endColumn":24},{"ruleId":"645","severity":1,"message":"762","line":11,"column":10,"nodeType":"647","messageId":"648","endLine":11,"endColumn":18},{"ruleId":"645","severity":1,"message":"763","line":12,"column":13,"nodeType":"647","messageId":"648","endLine":12,"endColumn":24},{"ruleId":"645","severity":1,"message":"764","line":13,"column":11,"nodeType":"647","messageId":"648","endLine":13,"endColumn":20},{"ruleId":"645","severity":1,"message":"717","line":14,"column":20,"nodeType":"647","messageId":"648","endLine":14,"endColumn":38},{"ruleId":"645","severity":1,"message":"646","line":24,"column":8,"nodeType":"647","messageId":"648","endLine":24,"endColumn":15},{"ruleId":"645","severity":1,"message":"716","line":6,"column":10,"nodeType":"647","messageId":"648","endLine":6,"endColumn":20},{"ruleId":"706","severity":1,"message":"765","line":56,"column":3,"nodeType":"708","endLine":56,"endColumn":26,"suggestions":"766"},{"ruleId":"645","severity":1,"message":"757","line":5,"column":10,"nodeType":"647","messageId":"648","endLine":5,"endColumn":18},{"ruleId":"645","severity":1,"message":"758","line":6,"column":9,"nodeType":"647","messageId":"648","endLine":6,"endColumn":16},{"ruleId":"645","severity":1,"message":"759","line":7,"column":12,"nodeType":"647","messageId":"648","endLine":7,"endColumn":22},{"ruleId":"645","severity":1,"message":"760","line":8,"column":11,"nodeType":"647","messageId":"648","endLine":8,"endColumn":20},{"ruleId":"645","severity":1,"message":"761","line":9,"column":13,"nodeType":"647","messageId":"648","endLine":9,"endColumn":24},{"ruleId":"645","severity":1,"message":"762","line":10,"column":10,"nodeType":"647","messageId":"648","endLine":10,"endColumn":18},{"ruleId":"645","severity":1,"message":"763","line":11,"column":13,"nodeType":"647","messageId":"648","endLine":11,"endColumn":24},{"ruleId":"645","severity":1,"message":"764","line":12,"column":11,"nodeType":"647","messageId":"648","endLine":12,"endColumn":20},{"ruleId":"645","severity":1,"message":"717","line":13,"column":20,"nodeType":"647","messageId":"648","endLine":13,"endColumn":38},{"ruleId":"645","severity":1,"message":"646","line":24,"column":8,"nodeType":"647","messageId":"648","endLine":24,"endColumn":15},{"ruleId":"645","severity":1,"message":"738","line":2,"column":10,"nodeType":"647","messageId":"648","endLine":2,"endColumn":21},{"ruleId":"645","severity":1,"message":"646","line":16,"column":8,"nodeType":"647","messageId":"648","endLine":16,"endColumn":15},{"ruleId":"645","severity":1,"message":"767","line":18,"column":10,"nodeType":"647","messageId":"648","endLine":18,"endColumn":18},{"ruleId":"645","severity":1,"message":"768","line":18,"column":20,"nodeType":"647","messageId":"648","endLine":18,"endColumn":31},{"ruleId":"645","severity":1,"message":"769","line":26,"column":10,"nodeType":"647","messageId":"648","endLine":26,"endColumn":18},{"ruleId":"645","severity":1,"message":"770","line":34,"column":9,"nodeType":"647","messageId":"648","endLine":34,"endColumn":16},{"ruleId":"645","severity":1,"message":"771","line":46,"column":8,"nodeType":"647","messageId":"648","endLine":46,"endColumn":20},{"ruleId":"772","severity":1,"message":"773","line":60,"column":5,"nodeType":"774","messageId":"775","endLine":76,"endColumn":6},{"ruleId":"740","severity":1,"message":"741","line":103,"column":5,"nodeType":"742","endLine":110,"endColumn":7},{"ruleId":"645","severity":1,"message":"689","line":1,"column":17,"nodeType":"647","messageId":"648","endLine":1,"endColumn":25},{"ruleId":"645","severity":1,"message":"684","line":1,"column":27,"nodeType":"647","messageId":"648","endLine":1,"endColumn":33},{"ruleId":"645","severity":1,"message":"649","line":1,"column":35,"nodeType":"647","messageId":"648","endLine":1,"endColumn":44},{"ruleId":"645","severity":1,"message":"703","line":3,"column":10,"nodeType":"647","messageId":"648","endLine":3,"endColumn":19},{"ruleId":"645","severity":1,"message":"654","line":6,"column":8,"nodeType":"647","messageId":"648","endLine":6,"endColumn":14},{"ruleId":"645","severity":1,"message":"696","line":7,"column":8,"nodeType":"647","messageId":"648","endLine":7,"endColumn":12},{"ruleId":"645","severity":1,"message":"697","line":8,"column":8,"nodeType":"647","messageId":"648","endLine":8,"endColumn":11},{"ruleId":"645","severity":1,"message":"675","line":10,"column":8,"nodeType":"647","messageId":"648","endLine":10,"endColumn":11},{"ruleId":"645","severity":1,"message":"657","line":11,"column":8,"nodeType":"647","messageId":"648","endLine":11,"endColumn":14},{"ruleId":"645","severity":1,"message":"676","line":12,"column":8,"nodeType":"647","messageId":"648","endLine":12,"endColumn":12},{"ruleId":"645","severity":1,"message":"776","line":13,"column":8,"nodeType":"647","messageId":"648","endLine":13,"endColumn":16},{"ruleId":"645","severity":1,"message":"655","line":14,"column":8,"nodeType":"647","messageId":"648","endLine":14,"endColumn":13},{"ruleId":"645","severity":1,"message":"701","line":16,"column":8,"nodeType":"647","messageId":"648","endLine":16,"endColumn":18},{"ruleId":"645","severity":1,"message":"777","line":17,"column":8,"nodeType":"647","messageId":"648","endLine":17,"endColumn":16},{"ruleId":"645","severity":1,"message":"778","line":19,"column":8,"nodeType":"647","messageId":"648","endLine":19,"endColumn":26},{"ruleId":"645","severity":1,"message":"755","line":20,"column":10,"nodeType":"647","messageId":"648","endLine":20,"endColumn":24},{"ruleId":"645","severity":1,"message":"646","line":40,"column":8,"nodeType":"647","messageId":"648","endLine":40,"endColumn":15},{"ruleId":"645","severity":1,"message":"671","line":41,"column":8,"nodeType":"647","messageId":"648","endLine":41,"endColumn":16},{"ruleId":"645","severity":1,"message":"779","line":42,"column":8,"nodeType":"647","messageId":"648","endLine":42,"endColumn":19},{"ruleId":"645","severity":1,"message":"732","line":3,"column":10,"nodeType":"647","messageId":"648","endLine":3,"endColumn":20},{"ruleId":"645","severity":1,"message":"676","line":5,"column":8,"nodeType":"647","messageId":"648","endLine":5,"endColumn":12},{"ruleId":"645","severity":1,"message":"668","line":7,"column":8,"nodeType":"647","messageId":"648","endLine":7,"endColumn":18},{"ruleId":"645","severity":1,"message":"661","line":11,"column":8,"nodeType":"647","messageId":"648","endLine":11,"endColumn":20},{"ruleId":"645","severity":1,"message":"780","line":12,"column":8,"nodeType":"647","messageId":"648","endLine":12,"endColumn":31},{"ruleId":"645","severity":1,"message":"781","line":2,"column":18,"nodeType":"647","messageId":"648","endLine":2,"endColumn":28},{"ruleId":"645","severity":1,"message":"782","line":3,"column":8,"nodeType":"647","messageId":"648","endLine":3,"endColumn":17},{"ruleId":"645","severity":1,"message":"703","line":2,"column":27,"nodeType":"647","messageId":"648","endLine":2,"endColumn":36},{"ruleId":"645","severity":1,"message":"703","line":2,"column":27,"nodeType":"647","messageId":"648","endLine":2,"endColumn":36},{"ruleId":"645","severity":1,"message":"783","line":13,"column":10,"nodeType":"647","messageId":"648","endLine":13,"endColumn":15},{"ruleId":"645","severity":1,"message":"703","line":2,"column":27,"nodeType":"647","messageId":"648","endLine":2,"endColumn":36},"no-native-reassign",["784"],"no-negated-in-lhs",["785"],"no-unused-vars","'classes' is assigned a value but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'history' is assigned a value but never used.","'errorStatuses' is assigned a value but never used.","'Link' is defined but never used.","'withRouter' is defined but never used.","'AppBar' is defined but never used.","'Paper' is defined but never used.","'Divider' is defined but never used.","'Button' is defined but never used.","'IconButton' is defined but never used.","'List' is defined but never used.","'ListItem' is defined but never used.","'ListItemIcon' is defined but never used.","'ListItemText' is defined but never used.","'MenuItem' is defined but never used.","'Menu' is defined but never used.","'MenuIcon' is defined but never used.","'AccountCircleIcon' is defined but never used.","'Toolbar' is defined but never used.","'Typography' is defined but never used.","'signOutUser' is defined but never used.","'isLoggedIn' is assigned a value but never used.","'dispatch' is assigned a value but never used.","'setAnchorEl' is assigned a value but never used.","'open' is assigned a value but never used.","'updateEmail' is defined but never used.","'Box' is defined but never used.","'Grid' is defined but never used.","'signUp' is defined but never used.","'signIn' is defined but never used.","'signOut' is defined but never used.","'anonymousAuth' is defined but never used.","'homeImg' is defined but never used.","'searchTreesImg' is defined but never used.","'zIndex' is defined but never used.","'useRef' is defined but never used.","'useTheme' is defined but never used.","'TextField' is defined but never used.","'Slider' is defined but never used.","'TreeMarkableApi' is defined but never used.","'useState' is defined but never used.","'SelectLocationMap' is defined but never used.","'treesRef' is defined but never used.","'uploadImagesToFirebase' is defined but never used.","'ImagesInput' is defined but never used.","'ButtonGroup' is defined but never used.","'SwipeableViews' is defined but never used.","'Tabs' is defined but never used.","'Tab' is defined but never used.","'TableHead' is defined but never used.","'getGroups' is defined but never used.","'Carousel' is defined but never used.","'LeafletMap' is defined but never used.","'errorDisplay' is defined but never used.","'useParams' is defined but never used.","'SelectCoordinates' is defined but never used.","'getUserFromApi' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["786"],"'ExpandMoreIcon' is defined but never used.","'email' is assigned a value but never used.","'img_url' is assigned a value but never used.","'created_at' is assigned a value but never used.","'is_admin' is assigned a value but never used.","'favGroups' is assigned a value but never used.","'makeStyles' is defined but never used.","'FavoriteBorderIcon' is defined but never used.","'addToSavedTrees' is defined but never used.","'removeFromSavedTrees' is defined but never used.","'Tooltip' is defined but never used.","'Checkbox' is defined but never used.","'FormControlLabel' is defined but never used.","'FavoriteIcon' is defined but never used.","'getTreesFromApi' is defined but never used.","'checkTreeIdInUserFavs' is assigned a value but never used.","'uid' is assigned a value but never used.","'username' is assigned a value but never used.","'savedGroupIds' is assigned a value but never used.","'savedTreeIds' is assigned a value but never used.","'groupIds' is assigned a value but never used.","'handleEdit' is assigned a value but never used.","'useHistory' is defined but never used.","'useDispatch' is defined but never used.","'signUpUser' is defined but never used.","'signInUser' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'remainingSelectionTreeIds', and 'userFavTrees'. Either include them or remove the dependency array.",["787"],"'useSelector' is defined but never used.","'storageRef' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'MapContainer' is defined but never used.","'useMap' is defined but never used.","'useMapEvents' is defined but never used.","'Marker' is defined but never used.","'Popup' is defined but never used.","'TileLayer' is defined but never used.","'GeoSearchControl' is defined but never used.","'OpenStreetMapProvider' is defined but never used.","'CircularProgress' is defined but never used.","'Fade' is defined but never used.","'Card' is defined but never used.","'CardContent' is defined but never used.","'getTreeFromApi' is defined but never used.","'EditIconBtn' is defined but never used.","'InfoIcon' is defined but never used.","'AddIcon' is defined but never used.","'NatureIcon' is defined but never used.","'GroupIcon' is defined but never used.","'ExploreIcon' is defined but never used.","'HomeIcon' is defined but never used.","'MessageIcon' is defined but never used.","'CheckIcon' is defined but never used.","React Hook useEffect has a missing dependency: 'tree.id'. Either include it or remove the dependency array.",["788"],"'formData' is assigned a value but never used.","'setFormData' is assigned a value but never used.","'imageRef' is assigned a value but never used.","'fileRef' is assigned a value but never used.","'handleSubmit' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'Backdrop' is defined but never used.","'TreeList' is defined but never used.","'GroupTreeEditTable' is defined but never used.","'groupStatus' is assigned a value but never used.","'ListItemSecondaryAction' is defined but never used.","'RouterLink' is defined but never used.","'lostWoods' is defined but never used.","'blank' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"789","fix":"790"},{"desc":"791","fix":"792"},{"desc":"793","fix":"794"},"Update the dependencies array to be: [history, isAuthenticated, username]",{"range":"795","text":"796"},"Update the dependencies array to be: [dispatch, remainingSelectionTreeIds, userFavTrees]",{"range":"797","text":"798"},"Update the dependencies array to be: [isLoading, dispatch, tree.id]",{"range":"799","text":"800"},[1459,1488],"[history, isAuthenticated, username]",[1187,1189],"[dispatch, remainingSelectionTreeIds, userFavTrees]",[1662,1685],"[isLoading, dispatch, tree.id]"]