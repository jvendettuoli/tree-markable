[{"/home/justin/Documents/Springboard/SECT/tree-markable/client/src/index.js":"1","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/store.js":"2","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/App.js":"3","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/Routes.js":"4","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/Navigation.js":"5","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/reducers/root.js":"6","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/actions/auth.js":"7","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/styles/navDrawer.js":"8","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/LandingPage.js":"9","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/NotFound.js":"10","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/NavDrawer.js":"11","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/NavAppBar.js":"12","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/reducers/currUser.js":"13","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/reducers/groups.js":"14","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/reducers/trees.js":"15","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/TreeMarkableApi.js":"16","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/actions/types.js":"17","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/reducers/auth.js":"18","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/firebase/firebaseAuth.js":"19","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/firebase/firebaseIndex.js":"20","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/actions/currUser.js":"21","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/styles/formStyle.js":"22","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/LandingPageElement.js":"23","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/actions/trees.js":"24","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/firebase/firebaseStorage.js":"25","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/actions/groups.js":"26","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/styles/markerCard.js":"27","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/styles/leafletMap.js":"28","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/helpers/formErrorDisplay.js":"29","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/tree/CreateNewTree.js":"30","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/tree/TreeFormBasicFields.js":"31","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/group/CreateNewGroup.js":"32","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/tree/ExploreTrees.js":"33","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/group/ExploreGroups.js":"34","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/tree/TreePage.js":"35","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/tree/EditTree.js":"36","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/group/GroupPage.js":"37","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/user/SignIn.js":"38","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/user/EditUser.js":"39","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/user/SignUp.js":"40","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/user/UserProfilePage.js":"41","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/tree/TreeSearchForm.js":"42","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/tree/TreeList.js":"43","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/group/GroupSearchForm.js":"44","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/group/GroupList.js":"45","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/user/CurrUserInfo.js":"46","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/user/SignUpForm.js":"47","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/user/SignInForm.js":"48","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/group/GroupTabPanel.js":"49","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/group/GroupTreeEditTable.js":"50","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/group/GroupFormBasicFields.js":"51","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/imageHandling/ImagesInput.js":"52","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/leafletMap/SelectCoordinates.js":"53","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/imageHandling/Carousel.js":"54","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/comment/CommentsContainer.js":"55","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/comment/Comment.js":"56","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/iconBtns/EditIconBtn.js":"57","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/iconBtns/FollowGroupIconBtn.js":"58","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/leafletMap/TreePopup.js":"59","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/iconBtns/FavoriteIconBtn.js":"60","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/iconBtns/EditTreeInGroupIconBtn.js":"61","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/leafletMap/LeafletMap.js":"62","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/group/EditGroup.js":"63","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/imageHandling/UploadImagesToFirebase.js":"64","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/group/GroupMembersPanel.js":"65","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/group/UserList.js":"66","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/About.js":"67"},{"size":959,"mtime":1615920245613,"results":"68","hashOfConfig":"69"},{"size":815,"mtime":1615920245613,"results":"70","hashOfConfig":"69"},{"size":870,"mtime":1615920245601,"results":"71","hashOfConfig":"69"},{"size":2637,"mtime":1617214361739,"results":"72","hashOfConfig":"69"},{"size":2721,"mtime":1615920245605,"results":"73","hashOfConfig":"69"},{"size":346,"mtime":1615920245613,"results":"74","hashOfConfig":"69"},{"size":3846,"mtime":1616729310934,"results":"75","hashOfConfig":"69"},{"size":990,"mtime":1615920245613,"results":"76","hashOfConfig":"69"},{"size":3831,"mtime":1615920245605,"results":"77","hashOfConfig":"69"},{"size":1594,"mtime":1617224648375,"results":"78","hashOfConfig":"69"},{"size":3321,"mtime":1615920245605,"results":"79","hashOfConfig":"69"},{"size":3632,"mtime":1615920245605,"results":"80","hashOfConfig":"69"},{"size":3179,"mtime":1616728803846,"results":"81","hashOfConfig":"69"},{"size":3260,"mtime":1617133930102,"results":"82","hashOfConfig":"69"},{"size":1309,"mtime":1616728753158,"results":"83","hashOfConfig":"69"},{"size":7240,"mtime":1617135349350,"results":"84","hashOfConfig":"69"},{"size":1778,"mtime":1617133657470,"results":"85","hashOfConfig":"69"},{"size":1105,"mtime":1615920245613,"results":"86","hashOfConfig":"69"},{"size":1885,"mtime":1615920245605,"results":"87","hashOfConfig":"69"},{"size":849,"mtime":1615931355370,"results":"88","hashOfConfig":"69"},{"size":4383,"mtime":1617219891575,"results":"89","hashOfConfig":"69"},{"size":297,"mtime":1615920245613,"results":"90","hashOfConfig":"69"},{"size":2855,"mtime":1615920245605,"results":"91","hashOfConfig":"69"},{"size":1877,"mtime":1616727292818,"results":"92","hashOfConfig":"69"},{"size":4402,"mtime":1615920245605,"results":"93","hashOfConfig":"69"},{"size":5961,"mtime":1617219018295,"results":"94","hashOfConfig":"69"},{"size":361,"mtime":1615920245613,"results":"95","hashOfConfig":"69"},{"size":619,"mtime":1616440135985,"results":"96","hashOfConfig":"69"},{"size":1376,"mtime":1616801952908,"results":"97","hashOfConfig":"69"},{"size":4218,"mtime":1617218622399,"results":"98","hashOfConfig":"69"},{"size":2951,"mtime":1616613875493,"results":"99","hashOfConfig":"69"},{"size":2930,"mtime":1617219061179,"results":"100","hashOfConfig":"69"},{"size":3391,"mtime":1617222561223,"results":"101","hashOfConfig":"69"},{"size":1871,"mtime":1616649317189,"results":"102","hashOfConfig":"69"},{"size":5045,"mtime":1617223433947,"results":"103","hashOfConfig":"69"},{"size":4576,"mtime":1616698021056,"results":"104","hashOfConfig":"69"},{"size":4490,"mtime":1617224006711,"results":"105","hashOfConfig":"69"},{"size":1832,"mtime":1616729233546,"results":"106","hashOfConfig":"69"},{"size":5485,"mtime":1616727039662,"results":"107","hashOfConfig":"69"},{"size":1907,"mtime":1616208590013,"results":"108","hashOfConfig":"69"},{"size":3303,"mtime":1616699071620,"results":"109","hashOfConfig":"69"},{"size":5786,"mtime":1616619708253,"results":"110","hashOfConfig":"69"},{"size":3994,"mtime":1616699444004,"results":"111","hashOfConfig":"69"},{"size":2148,"mtime":1616799899380,"results":"112","hashOfConfig":"69"},{"size":2931,"mtime":1616613875493,"results":"113","hashOfConfig":"69"},{"size":1939,"mtime":1616646824257,"results":"114","hashOfConfig":"69"},{"size":2700,"mtime":1616205539693,"results":"115","hashOfConfig":"69"},{"size":1957,"mtime":1616729490350,"results":"116","hashOfConfig":"69"},{"size":5219,"mtime":1617065083187,"results":"117","hashOfConfig":"69"},{"size":1284,"mtime":1617128496146,"results":"118","hashOfConfig":"69"},{"size":1946,"mtime":1616801984528,"results":"119","hashOfConfig":"69"},{"size":4030,"mtime":1616615225777,"results":"120","hashOfConfig":"69"},{"size":3158,"mtime":1616645837617,"results":"121","hashOfConfig":"69"},{"size":1661,"mtime":1616204575431,"results":"122","hashOfConfig":"69"},{"size":4382,"mtime":1617223562467,"results":"123","hashOfConfig":"69"},{"size":4389,"mtime":1617223559403,"results":"124","hashOfConfig":"69"},{"size":902,"mtime":1616204705157,"results":"125","hashOfConfig":"69"},{"size":1523,"mtime":1617130380786,"results":"126","hashOfConfig":"69"},{"size":3438,"mtime":1616208755761,"results":"127","hashOfConfig":"69"},{"size":1551,"mtime":1616208659817,"results":"128","hashOfConfig":"69"},{"size":1326,"mtime":1616208639237,"results":"129","hashOfConfig":"69"},{"size":3582,"mtime":1616705076162,"results":"130","hashOfConfig":"69"},{"size":2938,"mtime":1616875423658,"results":"131","hashOfConfig":"69"},{"size":2597,"mtime":1616208716709,"results":"132","hashOfConfig":"69"},{"size":2712,"mtime":1617220303647,"results":"133","hashOfConfig":"69"},{"size":3196,"mtime":1617139831790,"results":"134","hashOfConfig":"69"},{"size":4013,"mtime":1617232362675,"results":"135","hashOfConfig":"69"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},"15nr02n",{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"138"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"138"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"138"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"138"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"138"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"162","messages":"163","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"138"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"138"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"138"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"138"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"138"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"138"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"138"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"138"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"216","messages":"217","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"138"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"221","messages":"222","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223","usedDeprecatedRules":"138"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"226","messages":"227","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228","usedDeprecatedRules":"138"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"231","usedDeprecatedRules":"138"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"234","usedDeprecatedRules":"138"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"237","usedDeprecatedRules":"138"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"240","usedDeprecatedRules":"138"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"243","usedDeprecatedRules":"138"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"246","usedDeprecatedRules":"138"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"249","usedDeprecatedRules":"138"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"252","usedDeprecatedRules":"138"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"255","usedDeprecatedRules":"138"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"258","usedDeprecatedRules":"138"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"261","usedDeprecatedRules":"138"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"264","usedDeprecatedRules":"138"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"267","usedDeprecatedRules":"138"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"270","usedDeprecatedRules":"138"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"273","usedDeprecatedRules":"138"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"276","usedDeprecatedRules":"138"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"279","usedDeprecatedRules":"138"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"282","messages":"283","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"284","usedDeprecatedRules":"138"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"289","usedDeprecatedRules":"138"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"292","usedDeprecatedRules":"138"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"295","usedDeprecatedRules":"138"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"300","usedDeprecatedRules":"138"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"303","messages":"304","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"305","usedDeprecatedRules":"138"},{"filePath":"306","messages":"307","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"308","usedDeprecatedRules":"138"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/justin/Documents/Springboard/SECT/tree-markable/client/src/index.js",[],["311","312"],"/home/justin/Documents/Springboard/SECT/tree-markable/client/src/store.js",[],"/home/justin/Documents/Springboard/SECT/tree-markable/client/src/App.js",["313"],"import React, { useEffect } from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\n\nimport { verifyAuth } from './actions/auth';\nimport { useTheme } from '@material-ui/core/styles';\n\nimport Routes from './Routes';\nimport Navigation from './Navigation';\n\nimport useStyles from './styles/navDrawer';\n\nfunction App() {\n\tconst theme = useTheme();\n\tconst classes = useStyles(theme);\n\tconst dispatch = useDispatch();\n\t// Set Firebase Auth Listener, onAuthStateChanged, on App\n\t// initialization. unsubscribe removes listener on dismount.\n\n\tuseEffect(\n\t\t() => {\n\t\t\tconst unsubscribe = dispatch(verifyAuth());\n\t\t\treturn () => unsubscribe();\n\t\t},\n\t\t[ dispatch ]\n\t);\n\n\treturn (\n\t\t<BrowserRouter>\n\t\t\t<div className=\"App\">\n\t\t\t\t<Navigation>\n\t\t\t\t\t<Routes />\n\t\t\t\t</Navigation>\n\t\t\t</div>\n\t\t</BrowserRouter>\n\t);\n}\n\nexport default App;\n","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/Routes.js",["314","315","316"],"import React, { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\n\nimport { Switch, Route, useHistory } from 'react-router-dom';\n\nimport LandingPage from './LandingPage';\nimport SignUp from './user/SignUp';\nimport SignIn from './user/SignIn';\nimport EditUser from './user/EditUser';\nimport CreateNewTree from './tree/CreateNewTree';\nimport NotFound from './NotFound';\nimport ExploreTrees from './tree/ExploreTrees';\nimport ExploreGroups from './group/ExploreGroups';\nimport TreePage from './tree/TreePage';\nimport EditTree from './tree/EditTree';\nimport CreateNewGroup from './group/CreateNewGroup';\nimport UserProfilePage from './user/UserProfilePage';\nimport GroupPage from './group/GroupPage';\nimport EditGroup from './group/EditGroup';\nimport About from './About';\n\nfunction Routes() {\n\tconst history = useHistory();\n\tconst authErrorStatus = useSelector((st) => st.auth.error);\n\tconst currUserErrorStatus = useSelector((st) => st.currUser.error);\n\tconst groupsErrorStatus = useSelector((st) => st.groups.error);\n\tconst treesErrorStatus = useSelector((st) => st.trees.error);\n\tconst errorStatuses = [ authErrorStatus, currUserErrorStatus, groupsErrorStatus, treesErrorStatus ];\n\n\t// useEffect(\n\t// \t() => {\n\t// \t\tconsole.log('ROUTES 404', errorStatuses);\n\t// \t\terrorStatuses.forEach((error) => {\n\t// \t\t\tif (error !== null && error[0].status === 404) {\n\t// \t\t\t\thistory.push('/404');\n\t// \t\t\t}\n\t// \t\t});\n\t// \t},\n\t// \t[\n\t// \t\tauthErrorStatus,\n\t// \t\tcurrUserErrorStatus,\n\t// \t\tgroupsErrorStatus,\n\t// \t\ttreesErrorStatus\n\t// \t]\n\t// );\n\n\treturn (\n\t\t<Switch>\n\t\t\t<Route exact path=\"/\">\n\t\t\t\t<LandingPage />\n\t\t\t</Route>\n\t\t\t<Route exact path=\"/about\">\n\t\t\t\t<About />\n\t\t\t</Route>\n\t\t\t<Route exact path=\"/users/:username\">\n\t\t\t\t<UserProfilePage />\n\t\t\t</Route>\n\t\t\t<Route exact path=\"/users/:username/edit\">\n\t\t\t\t<EditUser />\n\t\t\t</Route>\n\t\t\t<Route exact path=\"/signup\">\n\t\t\t\t<SignUp />\n\t\t\t</Route>\n\t\t\t<Route exact path=\"/signin\">\n\t\t\t\t<SignIn />\n\t\t\t</Route>\n\t\t\t<Route exact path=\"/trees\">\n\t\t\t\t<ExploreTrees />\n\t\t\t</Route>\n\t\t\t<Route exact path=\"/trees/new\">\n\t\t\t\t<CreateNewTree />\n\t\t\t</Route>\n\t\t\t<Route exact path=\"/trees/:id\">\n\t\t\t\t<TreePage />\n\t\t\t</Route>\n\t\t\t<Route exact path=\"/trees/:id/edit\">\n\t\t\t\t<EditTree />\n\t\t\t</Route>\n\t\t\t<Route exact path=\"/groups\">\n\t\t\t\t<ExploreGroups />\n\t\t\t</Route>\n\t\t\t<Route exact path=\"/groups/new\">\n\t\t\t\t<CreateNewGroup />\n\t\t\t</Route>\n\t\t\t<Route exact path=\"/groups/:id\">\n\t\t\t\t<GroupPage />\n\t\t\t</Route>\n\t\t\t<Route exact path=\"/groups/:id/edit\">\n\t\t\t\t<EditGroup />\n\t\t\t</Route>\n\t\t\t<Route exact path=\"/404\">\n\t\t\t\t<NotFound />\n\t\t\t</Route>\n\t\t\t<Route>\n\t\t\t\t<NotFound />\n\t\t\t</Route>\n\t\t</Switch>\n\t);\n}\n\nexport default Routes;\n","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/Navigation.js",["317","318","319","320","321","322","323","324","325","326","327","328","329","330","331","332","333","334","335","336","337","338"],"import React, { useState } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Paper from '@material-ui/core/Paper';\n\nimport Divider from '@material-ui/core/Divider';\nimport Button from '@material-ui/core/Button';\nimport Drawer from '@material-ui/core/Drawer';\nimport Hidden from '@material-ui/core/Hidden';\nimport IconButton from '@material-ui/core/IconButton';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport {\n\tMenu as MenuIcon,\n\tAccountCircle as AccountCircleIcon\n} from '@material-ui/icons';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { useTheme } from '@material-ui/core/styles';\n\nimport useStyles from './styles/navDrawer';\nimport { signOutUser } from './actions/auth';\nimport NavDrawer from './NavDrawer';\nimport NavAppBar from './NavAppBar';\n\nfunction Navigation(props) {\n\tconst { window, children } = props;\n\tconst theme = useTheme();\n\tconst classes = useStyles(theme);\n\tconst [ mobileOpen, setMobileOpen ] = useState(false);\n\tconst isLoggedIn = useSelector((st) => st.auth.authenticated);\n\tconst dispatch = useDispatch();\n\tconst [ anchorEl, setAnchorEl ] = React.useState(null);\n\tconst open = Boolean(anchorEl);\n\n\tconst handleDrawerToggle = () => {\n\t\tsetMobileOpen(!mobileOpen);\n\t};\n\n\tconst container =\n\t\twindow !== undefined ? () => window().document.body : undefined;\n\n\treturn (\n\t\t<div className={classes.root}>\n\t\t\t<NavAppBar handleDrawerToggle={handleDrawerToggle} />\n\t\t\t<nav className={classes.drawer} aria-label=\"navigation drawer\">\n\t\t\t\t<Hidden mdUp implementation=\"js\">\n\t\t\t\t\t<Drawer\n\t\t\t\t\t\tcontainer={container}\n\t\t\t\t\t\tvariant=\"temporary\"\n\t\t\t\t\t\tanchor={\n\t\t\t\t\t\t\ttheme.direction === 'rtl' ? 'right' : 'left'\n\t\t\t\t\t\t}\n\t\t\t\t\t\topen={mobileOpen}\n\t\t\t\t\t\tonClose={handleDrawerToggle}\n\t\t\t\t\t\tclasses={{\n\t\t\t\t\t\t\tpaper : classes.drawerPaper\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tModalProps={{\n\t\t\t\t\t\t\tkeepMounted : true // Better open performance on mobile.\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<NavDrawer />\n\t\t\t\t\t</Drawer>\n\t\t\t\t</Hidden>\n\t\t\t\t<Hidden smDown implementation=\"js\">\n\t\t\t\t\t<Drawer\n\t\t\t\t\t\tclasses={{\n\t\t\t\t\t\t\tpaper : classes.drawerPaper\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tvariant=\"permanent\"\n\t\t\t\t\t\topen\n\t\t\t\t\t>\n\t\t\t\t\t\t<NavDrawer />\n\t\t\t\t\t</Drawer>\n\t\t\t\t</Hidden>\n\t\t\t</nav>\n\t\t\t<main className={classes.content}>\n\t\t\t\t<div className={classes.toolbar} />\n\t\t\t\t{children}\n\t\t\t</main>\n\t\t</div>\n\t);\n}\n\nexport default Navigation;\n","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/reducers/root.js",[],"/home/justin/Documents/Springboard/SECT/tree-markable/client/src/actions/auth.js",["339"],"/**\n * Action creators for handling authentication of user. When user signs in\n * and is authenticated, updates store. Resets store on user sign out.\n * \n * Also updates user store to keep current user synced with authentication.\n */\n\nimport { signUp, signIn, signOut, anonymousAuth, updateEmail, updateProfile } from '../firebase/firebaseAuth';\nimport TreeMarkableApi from '../TreeMarkableApi';\nimport { auth } from '../firebase/firebaseIndex';\nimport {\n\tAUTH_ERROR,\n\tAUTH_USER,\n\tSIGN_OUT_USER,\n\tLOAD_CURR_USER_REQUEST,\n\tLOAD_CURR_USER_SUCCESS,\n\tLOAD_CURR_USER_FAILURE,\n\tLOAD_CURR_USER,\n\tRESET_CURR_USER\n} from './types';\n\nfunction signUpUser(credentials, userData) {\n\tconsole.log('Auth - signUpUser - ', credentials, userData);\n\treturn async function(dispatch) {\n\t\tdispatch({ type: LOAD_CURR_USER_REQUEST });\n\t\ttry {\n\t\t\t// create user in FirebaseAuth\n\t\t\tconst firebaseRes = await signUp(credentials.email, credentials.password);\n\t\t\t// create user in TreeMarkable Database\n\t\t\tconst apiRes = await TreeMarkableApi.registerUser({\n\t\t\t\t...userData,\n\t\t\t\tfirebase_id : firebaseRes.user.uid\n\t\t\t});\n\n\t\t\tawait updateProfile({ displayName: apiRes.username });\n\t\t\tconst currUserData = {\n\t\t\t\t...apiRes,\n\t\t\t\ttoken : firebaseRes.user.refreshToken\n\t\t\t};\n\t\t\tdispatch(\n\t\t\t\tauthUser({\n\t\t\t\t\ttoken : firebaseRes.user.refreshToken\n\t\t\t\t})\n\t\t\t);\n\t\t\tdispatch(loadCurrUser(currUserData));\n\t\t\tdispatch({ type: LOAD_CURR_USER_SUCCESS });\n\t\t} catch (err) {\n\t\t\tconsole.log('signUpUser error', err);\n\t\t\tdispatch(authError(err));\n\t\t\tdispatch({ type: LOAD_CURR_USER_FAILURE });\n\t\t}\n\t};\n}\nfunction signInUser(credentials) {\n\tconsole.log('Auth - signInUser', credentials);\n\n\treturn async function(dispatch) {\n\t\tdispatch({ type: LOAD_CURR_USER_REQUEST });\n\n\t\ttry {\n\t\t\tconst firebaseRes = await signIn(credentials.email, credentials.password);\n\n\t\t\tconst apiRes = await TreeMarkableApi.getUser(firebaseRes.user.displayName);\n\t\t\tconst currUserData = {\n\t\t\t\t...apiRes,\n\t\t\t\ttoken : firebaseRes.user.refreshToken\n\t\t\t};\n\t\t\tdispatch(\n\t\t\t\tauthUser({\n\t\t\t\t\ttoken : firebaseRes.user.refreshToken\n\t\t\t\t})\n\t\t\t);\n\t\t\tdispatch(loadCurrUser(currUserData));\n\t\t\tdispatch({ type: LOAD_CURR_USER_SUCCESS });\n\t\t} catch (err) {\n\t\t\tconsole.log('signInUser error', err);\n\t\t\tdispatch(authError(err));\n\t\t\tdispatch({ type: LOAD_CURR_USER_FAILURE });\n\t\t}\n\t};\n}\n\nfunction signOutUser() {\n\tconsole.log('Auth - signOutUser');\n\treturn async function(dispatch) {\n\t\ttry {\n\t\t\tawait signOut();\n\t\t\tdispatch({ type: SIGN_OUT_USER });\n\t\t\tdispatch({ type: RESET_CURR_USER });\n\t\t} catch (err) {\n\t\t\tconsole.log('signOutUser error', err);\n\t\t\tdispatch(authError(err));\n\t\t}\n\t};\n}\n\nfunction signInAnonUser() {\n\treturn async function(dispatch) {\n\t\ttry {\n\t\t\tconst res = await anonymousAuth();\n\t\t\tdispatch(authUser(res.user));\n\t\t} catch (err) {\n\t\t\tconsole.log('anonAuth error', err);\n\t\t\tdispatch(authError(err));\n\t\t}\n\t};\n}\n\nfunction verifyAuth() {\n\treturn function(dispatch) {\n\t\ttry {\n\t\t\tconst unsubscribe = auth.onAuthStateChanged(async (user) => {\n\t\t\t\tif (user) {\n\t\t\t\t\tconsole.log('verifyAuth - user', user);\n\t\t\t\t\t// const apiRes = await TreeMarkableApi.getUser(\n\t\t\t\t\t// \tuser.displayName\n\t\t\t\t\t// );\n\t\t\t\t\t// const currUserData = {\n\t\t\t\t\t// \t...apiRes,\n\t\t\t\t\t// \ttoken : user.refreshToken\n\t\t\t\t\t// };\n\t\t\t\t\t// dispatch(authUser({ token: user.refreshToken }));\n\t\t\t\t\t// dispatch(loadCurrUser(currUserData));\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tconsole.log('verifyAuth - no user');\n\t\t\t\t\tdispatch(signOutUser());\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn unsubscribe;\n\t\t} catch (err) {\n\t\t\tconsole.log('verifyAuth error', err);\n\t\t\tdispatch(authError(err));\n\t\t}\n\t};\n}\n\nfunction authUser(user) {\n\treturn { type: AUTH_USER, payload: user };\n}\nfunction authError(error) {\n\treturn { type: AUTH_ERROR, payload: error };\n}\nfunction loadCurrUser(user) {\n\treturn { type: LOAD_CURR_USER, payload: user };\n}\n\nexport { signUpUser, signInUser, signOutUser, signInAnonUser, verifyAuth };\n","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/styles/navDrawer.js",[],"/home/justin/Documents/Springboard/SECT/tree-markable/client/src/LandingPage.js",["340","341"],"import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport Grid from '@material-ui/core/Grid';\nimport Hidden from '@material-ui/core/Hidden';\nimport Button from '@material-ui/core/Button';\nimport Divider from '@material-ui/core/Divider';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\n\nimport homeImg from './images/landing-page-main.jpg';\nimport searchTreesImg from './images/search-trees-snip.JPG';\nimport shareTreesImg from './images/share-trees.jpg';\nimport LandingPageElement from './LandingPageElement';\n\nconst useStyles = makeStyles((theme) => {\n\treturn {\n\t\tbackgroundImage : {\n\t\t\theight               : '100%',\n\t\t\tbackgroundImage      : `url(${homeImg})`,\n\t\t\tbackgroundAttachment : 'fixed',\n\t\t\tbackgroundRepeat     : 'no-repeat',\n\t\t\tbackgroundPosition   : 'center',\n\t\t\tbackgroundSize       : 'cover',\n\t\t\tbackgroundColor      : theme.palette.secondary.dark\n\t\t}\n\t};\n});\n\nfunction LandingPage() {\n\tconst theme = useTheme();\n\tconst classes = useStyles(theme);\n\n\tconst lightDivider = (\n\t\t<Grid item xs={12}>\n\t\t\t<Divider\n\t\t\t\tflexItem\n\t\t\t\tstyle={{\n\t\t\t\t\theight          : 2,\n\t\t\t\t\tbackgroundColor : 'rgba(255,255,255, .5)'\n\t\t\t\t}}\n\t\t\t\tvariant=\"middle\"\n\t\t\t/>\n\t\t</Grid>\n\t);\n\n\treturn (\n\t\t<Grid\n\t\t\tcontainer\n\t\t\tclassName={classes.backgroundImage}\n\t\t\talignItems=\"stretch\"\n\t\t>\n\t\t\t<Grid\n\t\t\t\tcontainer\n\t\t\t\titem\n\t\t\t\tstyle={{\n\t\t\t\t\tbackgroundColor : 'rgba(0,0,0,.5)',\n\t\t\t\t\tpaddingTop      : theme.spacing(10),\n\t\t\t\t\tpaddingRight    : theme.spacing(3),\n\t\t\t\t\tpaddingLeft     : theme.spacing(3)\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<Grid\n\t\t\t\t\tcontainer\n\t\t\t\t\titem\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tmarginBottom : theme.spacing(10)\n\t\t\t\t\t}}\n\t\t\t\t\tjustify=\"center\"\n\t\t\t\t>\n\t\t\t\t\t<Typography\n\t\t\t\t\t\talign=\"center\"\n\t\t\t\t\t\tvariant=\"h1\"\n\t\t\t\t\t\tstyle={{ color: 'white', fontWeight: 'bold' }}\n\t\t\t\t\t>\n\t\t\t\t\t\tWELCOME TO TREE-MARKABLE\n\t\t\t\t\t</Typography>\n\t\t\t\t</Grid>\n\t\t\t\t{lightDivider}\n\t\t\t\t<Hidden xlUp>\n\t\t\t\t\t<LandingPageElement\n\t\t\t\t\t\ttitleText=\"Explore\"\n\t\t\t\t\t\tbodyText=\"Find remarkable trees near you or around the\n\t\t\t\t\t\t\tworld!\"\n\t\t\t\t\t\timgSrc={searchTreesImg}\n\t\t\t\t\t\timgAlt=\"search trees map\"\n\t\t\t\t\t\tbuttonLink=\"trees\"\n\t\t\t\t\t\tbuttonText=\"Search Trees\"\n\t\t\t\t\t/>\n\t\t\t\t\t{lightDivider}\n\t\t\t\t\t<LandingPageElement\n\t\t\t\t\t\ttitleText=\"Share\"\n\t\t\t\t\t\tbodyText=\"Add your favorite trees for others to enjoy!\"\n\t\t\t\t\t\timgSrc={shareTreesImg}\n\t\t\t\t\t\timgAlt=\"large tree photo by Rob Mulally\"\n\t\t\t\t\t\timgSide=\"right\"\n\t\t\t\t\t\tbuttonLink=\"trees/new\"\n\t\t\t\t\t\tbuttonText=\"Create a Tree\"\n\t\t\t\t\t/>\n\t\t\t\t\t{lightDivider}\n\t\t\t\t\t<LandingPageElement\n\t\t\t\t\t\ttitleText=\"Collaborate\"\n\t\t\t\t\t\tbodyText=\"Create or join groups to track specific trees for a\n\t\t\t\tpurpose!\"\n\t\t\t\t\t\timgSrc={searchTreesImg}\n\t\t\t\t\t\timgAlt=\"\"\n\t\t\t\t\t\tbuttonLink=\"groups\"\n\t\t\t\t\t\tbuttonText=\"Search Groups\"\n\t\t\t\t\t/>\n\t\t\t\t</Hidden>\n\t\t\t\t<Hidden lgDown>\n\t\t\t\t\t<Grid container>\n\t\t\t\t\t\t<Grid item xs={4}>\n\t\t\t\t\t\t\t<LandingPageElement\n\t\t\t\t\t\t\t\ttitleText=\"Explore\"\n\t\t\t\t\t\t\t\tbodyText=\"Find remarkable trees near you or around the\n\t\t\t\t\t\t\tworld!\"\n\t\t\t\t\t\t\t\timgSrc={searchTreesImg}\n\t\t\t\t\t\t\t\timgAlt=\"search trees map\"\n\t\t\t\t\t\t\t\tbuttonLink=\"trees\"\n\t\t\t\t\t\t\t\tbuttonText=\"Search Trees\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid item xs={4}>\n\t\t\t\t\t\t\t<LandingPageElement\n\t\t\t\t\t\t\t\ttitleText=\"Share\"\n\t\t\t\t\t\t\t\tbodyText=\"Add your favorite trees for others to enjoy!\"\n\t\t\t\t\t\t\t\timgSrc={shareTreesImg}\n\t\t\t\t\t\t\t\timgAlt=\"large tree photo by Rob Mulally\"\n\t\t\t\t\t\t\t\timgSide=\"right\"\n\t\t\t\t\t\t\t\tbuttonLink=\"trees/new\"\n\t\t\t\t\t\t\t\tbuttonText=\"Create a Tree\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid item xs={4}>\n\t\t\t\t\t\t\t<LandingPageElement\n\t\t\t\t\t\t\t\ttitleText=\"Collaborate\"\n\t\t\t\t\t\t\t\tbodyText=\"Create or join groups to track specific trees for a\n\t\t\t\tpurpose!\"\n\t\t\t\t\t\t\t\timgSrc={searchTreesImg}\n\t\t\t\t\t\t\t\timgAlt=\"\"\n\t\t\t\t\t\t\t\tbuttonLink=\"groups\"\n\t\t\t\t\t\t\t\tbuttonText=\"Search Groups\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Hidden>\n\t\t\t</Grid>\n\t\t</Grid>\n\t);\n}\nexport default LandingPage;\n","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/NotFound.js",[],"/home/justin/Documents/Springboard/SECT/tree-markable/client/src/NavDrawer.js",["342"],"import React from 'react';\nimport { Link, withRouter } from 'react-router-dom';\n\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { useTheme } from '@material-ui/core/styles';\nimport {\n\tInfo as InfoIcon,\n\tAdd as AddIcon,\n\tNature as NatureIcon,\n\tGroup as GroupIcon,\n\tExplore as ExploreIcon,\n\tHome as HomeIcon\n} from '@material-ui/icons';\n\nimport useStyles from './styles/navDrawer';\n\nfunction NavDrawer(props) {\n\tconst { location: { pathname } } = props;\n\n\tconst theme = useTheme();\n\tconst classes = useStyles(theme);\n\n\treturn (\n\t\t<div>\n\t\t\t<Paper\n\t\t\t\tclassName={classes.toolbar}\n\t\t\t\tstyle={{\n\t\t\t\t\tbackgroundColor : theme.palette.primary.dark,\n\t\t\t\t\tjustifyContent  : 'center',\n\t\t\t\t\talignItems      : 'center'\n\t\t\t\t}}\n\t\t\t\tsquare\n\t\t\t\televation={5}\n\t\t\t>\n\t\t\t\t<Typography\n\t\t\t\t\talign=\"center\"\n\t\t\t\t\tvariant=\"h5\"\n\t\t\t\t\tnoWrap\n\t\t\t\t\tstyle={{ color: 'white' }}\n\t\t\t\t>\n\t\t\t\t\tTree-Markable\n\t\t\t\t</Typography>\n\t\t\t</Paper>\n\n\t\t\t<Divider />\n\t\t\t<List>\n\t\t\t\t<ListItem\n\t\t\t\t\tbutton\n\t\t\t\t\tcomponent={Link}\n\t\t\t\t\tto=\"/\"\n\t\t\t\t\tselected={'/' === pathname}\n\t\t\t\t>\n\t\t\t\t\t<ListItemIcon>\n\t\t\t\t\t\t<HomeIcon />\n\t\t\t\t\t</ListItemIcon>\n\t\t\t\t\t<ListItemText primary=\"Home\" />\n\t\t\t\t</ListItem>\n\t\t\t\t<Divider />\n\n\t\t\t\t<ListItem>\n\t\t\t\t\t<ListItemIcon>\n\t\t\t\t\t\t<AddIcon />\n\t\t\t\t\t</ListItemIcon>\n\t\t\t\t\t<ListItemText primary=\"Create\" />\n\t\t\t\t</ListItem>\n\t\t\t\t<List component=\"div\" disablePadding>\n\t\t\t\t\t<ListItem\n\t\t\t\t\t\tbutton\n\t\t\t\t\t\tclassName={classes.nested}\n\t\t\t\t\t\tcomponent={Link}\n\t\t\t\t\t\tto=\"/trees/new\"\n\t\t\t\t\t\tselected={'/trees/new' === pathname}\n\t\t\t\t\t>\n\t\t\t\t\t\t<ListItemIcon>\n\t\t\t\t\t\t\t<NatureIcon />\n\t\t\t\t\t\t</ListItemIcon>\n\t\t\t\t\t\t<ListItemText primary=\"Tree\" />\n\t\t\t\t\t</ListItem>\n\t\t\t\t\t<ListItem\n\t\t\t\t\t\tbutton\n\t\t\t\t\t\tclassName={classes.nested}\n\t\t\t\t\t\tcomponent={Link}\n\t\t\t\t\t\tto=\"/groups/new\"\n\t\t\t\t\t\tselected={'/groups/new' === pathname}\n\t\t\t\t\t>\n\t\t\t\t\t\t<ListItemIcon>\n\t\t\t\t\t\t\t<GroupIcon />\n\t\t\t\t\t\t</ListItemIcon>\n\t\t\t\t\t\t<ListItemText primary=\"Group\" />\n\t\t\t\t\t</ListItem>\n\t\t\t\t</List>\n\t\t\t</List>\n\t\t\t<Divider />\n\t\t\t<List>\n\t\t\t\t<ListItem>\n\t\t\t\t\t<ListItemIcon>\n\t\t\t\t\t\t<ExploreIcon />\n\t\t\t\t\t</ListItemIcon>\n\t\t\t\t\t<ListItemText primary=\"Explore\" />\n\t\t\t\t</ListItem>\n\t\t\t\t<List component=\"div\" disablePadding>\n\t\t\t\t\t<ListItem\n\t\t\t\t\t\tbutton\n\t\t\t\t\t\tclassName={classes.nested}\n\t\t\t\t\t\tcomponent={Link}\n\t\t\t\t\t\tto=\"/trees\"\n\t\t\t\t\t\tselected={'/trees' === pathname}\n\t\t\t\t\t>\n\t\t\t\t\t\t<ListItemIcon>\n\t\t\t\t\t\t\t<NatureIcon />\n\t\t\t\t\t\t</ListItemIcon>\n\t\t\t\t\t\t<ListItemText primary=\"Trees\" />\n\t\t\t\t\t</ListItem>\n\t\t\t\t\t<ListItem\n\t\t\t\t\t\tbutton\n\t\t\t\t\t\tclassName={classes.nested}\n\t\t\t\t\t\tcomponent={Link}\n\t\t\t\t\t\tto=\"/groups\"\n\t\t\t\t\t\tselected={'/groups' === pathname}\n\t\t\t\t\t>\n\t\t\t\t\t\t<ListItemIcon>\n\t\t\t\t\t\t\t<GroupIcon />\n\t\t\t\t\t\t</ListItemIcon>\n\t\t\t\t\t\t<ListItemText primary=\"Groups\" />\n\t\t\t\t\t</ListItem>\n\t\t\t\t</List>\n\t\t\t\t<Divider />\n\t\t\t\t<ListItem\n\t\t\t\t\tbutton\n\t\t\t\t\tcomponent={Link}\n\t\t\t\t\tto=\"/about\"\n\t\t\t\t\tselected={'/about' === pathname}\n\t\t\t\t>\n\t\t\t\t\t<ListItemIcon>\n\t\t\t\t\t\t<InfoIcon />\n\t\t\t\t\t</ListItemIcon>\n\t\t\t\t\t<ListItemText primary=\"About\" />\n\t\t\t\t</ListItem>\n\t\t\t</List>\n\t\t</div>\n\t);\n}\n\nexport default withRouter(NavDrawer);\n","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/NavAppBar.js",["343","344","345","346","347","348","349","350"],"import React, { useState } from 'react';\nimport { Link, withRouter, useHistory } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Paper from '@material-ui/core/Paper';\n\nimport Divider from '@material-ui/core/Divider';\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport Grid from '@material-ui/core/Grid';\nimport Hidden from '@material-ui/core/Hidden';\nimport IconButton from '@material-ui/core/IconButton';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport {\n\tMenu as MenuIcon,\n\tAccountCircle as AccountCircleIcon\n} from '@material-ui/icons';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { useTheme } from '@material-ui/core/styles';\n\nimport useStyles from './styles/navDrawer';\nimport { signOutUser } from './actions/auth';\n\nfunction NavAppBar({ handleDrawerToggle, ...props }) {\n\tconst history = useHistory();\n\tconst theme = useTheme();\n\tconst classes = useStyles(theme);\n\tconst isLoggedIn = useSelector((st) => st.auth.authenticated);\n\tconst username = useSelector((st) => st.currUser.username);\n\tconst dispatch = useDispatch();\n\tconst [ anchorEl, setAnchorEl ] = useState(null);\n\tconst open = Boolean(anchorEl);\n\n\tconst handleMenu = (event) => {\n\t\tsetAnchorEl(event.currentTarget);\n\t};\n\n\tconst handleClose = () => {\n\t\tsetAnchorEl(null);\n\t};\n\tconst handleProfileClick = () => {\n\t\thandleClose();\n\t\thistory.push(`/users/${username}`);\n\t};\n\n\tconst handleSignOut = () => {\n\t\thandleClose();\n\t\tdispatch(signOutUser());\n\t\thistory.push('/');\n\t};\n\n\treturn (\n\t\t<AppBar position=\"fixed\" className={classes.appBar}>\n\t\t\t<Toolbar className={classes.toolbar}>\n\t\t\t\t<IconButton\n\t\t\t\t\tcolor=\"inherit\"\n\t\t\t\t\taria-label=\"open drawer\"\n\t\t\t\t\tedge=\"start\"\n\t\t\t\t\tonClick={handleDrawerToggle}\n\t\t\t\t\tclassName={classes.menuButton}\n\t\t\t\t>\n\t\t\t\t\t<MenuIcon />\n\t\t\t\t</IconButton>\n\t\t\t\t<Hidden mdUp implementation=\"js\">\n\t\t\t\t\t<Typography variant=\"h6\" noWrap>\n\t\t\t\t\t\tTree-Markable\n\t\t\t\t\t</Typography>\n\t\t\t\t</Hidden>\n\t\t\t\t<Hidden smDown implementation=\"js\">\n\t\t\t\t\t<div />\n\t\t\t\t</Hidden>\n\t\t\t\t{isLoggedIn ? (\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\taria-label=\"account of current user\"\n\t\t\t\t\t\t\taria-controls=\"menu-appbar\"\n\t\t\t\t\t\t\taria-haspopup=\"true\"\n\t\t\t\t\t\t\tonClick={handleMenu}\n\t\t\t\t\t\t\tcolor=\"inherit\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<AccountCircleIcon />\n\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t<Menu\n\t\t\t\t\t\t\tid=\"menu-appbar\"\n\t\t\t\t\t\t\tanchorEl={anchorEl}\n\t\t\t\t\t\t\tanchorOrigin={{\n\t\t\t\t\t\t\t\tvertical   : 'top',\n\t\t\t\t\t\t\t\thorizontal : 'right'\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tkeepMounted\n\t\t\t\t\t\t\ttransformOrigin={{\n\t\t\t\t\t\t\t\tvertical   : 'top',\n\t\t\t\t\t\t\t\thorizontal : 'right'\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\topen={open}\n\t\t\t\t\t\t\tonClose={handleClose}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<MenuItem onClick={handleProfileClick}>\n\t\t\t\t\t\t\t\tProfile\n\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t\t<MenuItem onClick={handleSignOut}>\n\t\t\t\t\t\t\t\tSign Out\n\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t</Menu>\n\t\t\t\t\t</div>\n\t\t\t\t) : (\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<ButtonGroup size=\"small\" variant=\"text\">\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tstyle={{ color: 'white' }}\n\t\t\t\t\t\t\t\tcomponent={Link}\n\t\t\t\t\t\t\t\tto=\"/signup\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tSign Up\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tstyle={{ color: 'white' }}\n\t\t\t\t\t\t\t\tcomponent={Link}\n\t\t\t\t\t\t\t\tto=\"/signin\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tSign In\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</ButtonGroup>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t</Toolbar>\n\t\t</AppBar>\n\t);\n}\n\nexport default NavAppBar;\n","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/reducers/currUser.js",[],"/home/justin/Documents/Springboard/SECT/tree-markable/client/src/reducers/groups.js",["351"],"/**\n * groupReducer with cases for reseting data and loading a group.\n */\n\nimport {\n\tLOAD_GROUP,\n\tLOAD_GROUPS,\n\tLOAD_TREE_TO_GROUP,\n\tREMOVE_TREE_FROM_GROUP,\n\tLOAD_MEMBER_TO_GROUP,\n\tREMOVE_MEMBER_FROM_GROUP,\n\tGROUP_ERROR,\n\tLOAD_GROUP_REQUEST,\n\tLOAD_GROUP_SUCCESS,\n\tLOAD_GROUP_FAILURE,\n\tRESET_ALL\n} from '../actions/types';\n\nconst INITIAL_STATE = { entities: {}, status: 'idle', error: null };\n\nfunction groups(state = INITIAL_STATE, action) {\n\tswitch (action.type) {\n\t\tcase RESET_ALL:\n\t\t\treturn { ...INITIAL_STATE };\n\n\t\tcase LOAD_GROUP_REQUEST:\n\t\t\treturn { ...state, status: 'isLoading' };\n\n\t\tcase LOAD_GROUP_SUCCESS:\n\t\t\treturn { ...state, status: 'idle' };\n\n\t\tcase LOAD_GROUP_FAILURE:\n\t\t\treturn { ...state, status: 'failure' };\n\n\t\tcase LOAD_GROUP:\n\t\t\tconsole.log('REDUCERS LOAD_GROUP - action', action);\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tentities : {\n\t\t\t\t\t...state.entities,\n\t\t\t\t\t[action.payload.id]: { ...action.payload }\n\t\t\t\t},\n\t\t\t\tstatus   : 'success',\n\t\t\t\terror    : null\n\t\t\t};\n\n\t\tcase LOAD_GROUPS:\n\t\t\tconsole.log('REDUCERS LOAD_GROUPS - action', action);\n\t\t\tconst groupsObj = action.payload.reduce((obj, group) => {\n\t\t\t\tobj[group.id] = group;\n\t\t\t\treturn obj;\n\t\t\t}, {});\n\t\t\treturn { entities: groupsObj, status: 'success', error: null };\n\n\t\tcase LOAD_TREE_TO_GROUP:\n\t\t\tconsole.log('REDUCERS LOAD_TREE_TO_GROUP - action', action);\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tstatus   : 'success',\n\t\t\t\terror    : null,\n\t\t\t\tentities : {\n\t\t\t\t\t...state.entities,\n\t\t\t\t\t[action.payload.groupId]: {\n\t\t\t\t\t\t...state.entities[action.payload.groupId],\n\t\t\t\t\t\ttrees : [ ...state.entities[action.payload.groupId].trees, action.payload.treeId ]\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\n\t\tcase REMOVE_TREE_FROM_GROUP:\n\t\t\tconsole.log('REDUCERS REMOVE_TREE_FROM_GROUP - action', action);\n\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tstatus   : 'success',\n\t\t\t\terror    : null,\n\t\t\t\tentities : {\n\t\t\t\t\t...state.entities,\n\t\t\t\t\t[action.payload.groupId]: {\n\t\t\t\t\t\t...state.entities[action.payload.groupId],\n\t\t\t\t\t\ttrees : [\n\t\t\t\t\t\t\t...state.entities[action.payload.groupId].trees.filter(\n\t\t\t\t\t\t\t\t(treeId) => treeId !== action.payload.treeId\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\n\t\t/**\n\t\t * Currently no use case for this. \n\t\t */\n\t\t// case LOAD_MEMBER_TO_GROUP:\n\t\t// \tconsole.log('REDUCERS LOAD_MEMBER_TO_GROUP - action', action);\n\t\t// \treturn {\n\t\t// \t\t...state,\n\t\t// \t\tstatus   : 'success',\n\t\t// \t\terror    : null,\n\t\t// \t\tentities : {\n\t\t// \t\t\t...state.entities,\n\t\t// \t\t\t[action.payload.groupId]: {\n\t\t// \t\t\t\t...state.entities[action.payload.groupId],\n\t\t// \t\t\t\tmembers : [ ...state.entities[action.payload.groupId].members, action.payload.member ]\n\t\t// \t\t\t}\n\t\t// \t\t}\n\t\t// \t};\n\n\t\tcase REMOVE_MEMBER_FROM_GROUP:\n\t\t\tconsole.log('REDUCERS REMOVE_MEMBER_FROM_GROUP - action', action);\n\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tstatus   : 'success',\n\t\t\t\terror    : null,\n\t\t\t\tentities : {\n\t\t\t\t\t...state.entities,\n\t\t\t\t\t[action.payload.groupId]: {\n\t\t\t\t\t\t...state.entities[action.payload.groupId],\n\t\t\t\t\t\tmembers : [\n\t\t\t\t\t\t\t...state.entities[action.payload.groupId].members.filter(\n\t\t\t\t\t\t\t\t(member) => member.user_id !== action.payload.userId\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\n\t\tcase GROUP_ERROR:\n\t\t\tconsole.log('REDUCERS GROUP_ERROR - action', action);\n\n\t\t\treturn { ...state, error: action.payload };\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n\nexport default groups;\n","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/reducers/trees.js",[],"/home/justin/Documents/Springboard/SECT/tree-markable/client/src/TreeMarkableApi.js",[],"/home/justin/Documents/Springboard/SECT/tree-markable/client/src/actions/types.js",[],"/home/justin/Documents/Springboard/SECT/tree-markable/client/src/reducers/auth.js",[],"/home/justin/Documents/Springboard/SECT/tree-markable/client/src/firebase/firebaseAuth.js",[],"/home/justin/Documents/Springboard/SECT/tree-markable/client/src/firebase/firebaseIndex.js",[],"/home/justin/Documents/Springboard/SECT/tree-markable/client/src/actions/currUser.js",["352","353","354","355","356"],"import TreeMarkableApi from '../TreeMarkableApi';\nimport { signUp, signIn, signOut, anonymousAuth, updateEmail, reauthenticate } from '../firebase/firebaseAuth';\nimport {\n\tLOAD_CURR_USER,\n\tLOAD_CURR_USER_REQUEST,\n\tLOAD_CURR_USER_SUCCESS,\n\tLOAD_CURR_USER_FAILURE,\n\tLOAD_CURR_USER_ERROR,\n\tLOAD_SAVED_TREE,\n\tREMOVE_SAVED_TREE,\n\tLOAD_FOLLOWED_GROUP,\n\tREMOVE_FOLLOWED_GROUP\n} from './types';\n\n/**\n * Action creator for editing the current user.\n */\n\nfunction editCurrUser(credentials, username, data) {\n\tconsole.log('currUser - editCurrUser - ', credentials, username, data);\n\treturn async function(dispatch) {\n\t\tdispatch({ type: LOAD_CURR_USER_REQUEST });\n\t\ttry {\n\t\t\tawait reauthenticate(credentials);\n\t\t\t// await updateEmail(data.email);\n\n\t\t\tconst user = await TreeMarkableApi.updateUser(username, data);\n\t\t\tif (data.email) {\n\t\t\t\tawait reauthenticate({\n\t\t\t\t\temail    : data.email,\n\t\t\t\t\tpassword : credentials.password\n\t\t\t\t});\n\t\t\t}\n\t\t\tdispatch(loadCurrUser(user));\n\t\t\tdispatch({ type: LOAD_CURR_USER_SUCCESS });\n\t\t} catch (err) {\n\t\t\tconsole.log('editCurrUser error', err);\n\t\t\tdispatch(currUserError(err));\n\t\t\tdispatch({ type: LOAD_CURR_USER_FAILURE });\n\t\t}\n\t};\n}\n\n// function updateUser(credentials, username, newEmail) {\n// \tconsole.log('Auth - updateUserEmail');\n// \treturn async function(dispatch) {\n// \t\ttry {\n// \t\t\tconst res = await updateEmail(credentials, newEmail);\n// \t\t\tconsole.log('res');\n// \t\t} catch (err) {\n// \t\t\tconsole.log('Auth - updateUserEmail - err', err);\n// \t\t\tdispatch(authError(err));\n// \t\t}\n// \t};\n// }\n\n/**\n * Action creators for updating the current User's saved Trees and \n */\n\nfunction addToSavedTrees(username, treeId) {\n\tconsole.log('currUser - addToSavedTrees - ', username, treeId);\n\treturn async function(dispatch) {\n\t\tdispatch({ type: LOAD_CURR_USER_REQUEST });\n\t\ttry {\n\t\t\tawait TreeMarkableApi.userAddTree(username, treeId);\n\t\t\tdispatch(treeSaved(treeId));\n\t\t\tdispatch({ type: LOAD_CURR_USER_SUCCESS });\n\t\t} catch (err) {\n\t\t\tconsole.log('addToSavedTrees error', err);\n\t\t\tdispatch(currUserError(err));\n\t\t\tdispatch({ type: LOAD_CURR_USER_FAILURE });\n\t\t}\n\t};\n}\nfunction removeFromSavedTrees(username, treeId) {\n\tconsole.log('currUser - removeFromSavedTrees - ', username, treeId);\n\treturn async function(dispatch) {\n\t\tdispatch({ type: LOAD_CURR_USER_REQUEST });\n\t\ttry {\n\t\t\tawait TreeMarkableApi.userRemoveTree(username, treeId);\n\t\t\tdispatch(treeRemoved(treeId));\n\t\t\tdispatch({ type: LOAD_CURR_USER_SUCCESS });\n\t\t} catch (err) {\n\t\t\tconsole.log('removeFromSavedTrees error', err);\n\t\t\tdispatch(currUserError(err));\n\t\t\tdispatch({ type: LOAD_CURR_USER_FAILURE });\n\t\t}\n\t};\n}\n/**\n * Action creators for updating the current User's followed Groups\n */\n\nfunction addToFollowedGroups(userId, groupId, isModerator) {\n\tconsole.log('currUser - addToFollowedGroups - ', userId, groupId, isModerator);\n\treturn async function(dispatch) {\n\t\tdispatch({ type: LOAD_CURR_USER_REQUEST });\n\t\ttry {\n\t\t\tawait TreeMarkableApi.userAddGroup(userId, groupId, isModerator);\n\t\t\tdispatch(groupFollowed(groupId));\n\t\t\tdispatch({ type: LOAD_CURR_USER_SUCCESS });\n\t\t} catch (err) {\n\t\t\tconsole.log('addToFollowedGroups error', err);\n\t\t\tdispatch(currUserError(err));\n\t\t\tdispatch({ type: LOAD_CURR_USER_FAILURE });\n\t\t}\n\t};\n}\nfunction removeFromFollowedGroups(userId, groupId) {\n\tconsole.log('currUser - removeFromFollowedGroups - ', userId, groupId);\n\treturn async function(dispatch) {\n\t\tdispatch({ type: LOAD_CURR_USER_REQUEST });\n\t\ttry {\n\t\t\tawait TreeMarkableApi.userRemoveGroup(userId, groupId);\n\t\t\tdispatch(groupUnfollowed(groupId));\n\t\t\tdispatch({ type: LOAD_CURR_USER_SUCCESS });\n\t\t} catch (err) {\n\t\t\tconsole.log('removeFromFollowedGroups error', err);\n\t\t\tdispatch(currUserError(err));\n\t\t\tdispatch({ type: LOAD_CURR_USER_FAILURE });\n\t\t}\n\t};\n}\n\nfunction loadCurrUser(user) {\n\treturn { type: LOAD_CURR_USER, payload: user };\n}\nfunction currUserError(error) {\n\treturn { type: LOAD_CURR_USER_ERROR, payload: error };\n}\nfunction treeSaved(treeId) {\n\treturn { type: LOAD_SAVED_TREE, payload: treeId };\n}\nfunction treeRemoved(treeId) {\n\treturn { type: REMOVE_SAVED_TREE, payload: treeId };\n}\nfunction groupFollowed(groupId) {\n\treturn { type: LOAD_FOLLOWED_GROUP, payload: groupId };\n}\nfunction groupUnfollowed(groupId) {\n\treturn { type: REMOVE_FOLLOWED_GROUP, payload: groupId };\n}\n\nexport { addToSavedTrees, removeFromSavedTrees, editCurrUser, addToFollowedGroups, removeFromFollowedGroups };\n","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/styles/formStyle.js",[],"/home/justin/Documents/Springboard/SECT/tree-markable/client/src/LandingPageElement.js",["357","358","359"],"import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport Hidden from '@material-ui/core/Hidden';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\n\nimport homeImg from './images/landing-page-main.jpg';\nimport searchTreesImg from './images/search-trees-snip.JPG';\nimport zIndex from '@material-ui/core/styles/zIndex';\n\nconst useStyles = makeStyles({\n\timgPaper : {\n\t\theight    : 300,\n\t\twidth     : 300,\n\t\tzIndex    : 1,\n\t\tposition  : 'relative',\n\t\tboxShadow : `0px 11px 15px -7px rgba(0,0,0,0.10),\n\t\t\t0px 24px 38px 3px rgba(0,0,0,0.60),\n\t\t\t0px 9px 46px 8px rgba(0,0,0,0.51)`\n\t}\n});\n\nfunction LandingPageElement({\n\ttitleText,\n\tbodyText,\n\timgSrc,\n\timgAlt,\n\timgSide = 'left',\n\tbuttonLink,\n\tbuttonText\n}) {\n\tconst classes = useStyles();\n\tconst theme = useTheme();\n\n\tconst imgContainer = (\n\t\t<Grid container justify=\"center\" item xs={12} md={6}>\n\t\t\t<Paper className={classes.imgPaper} elevation={10}>\n\t\t\t\t<Link to={`/${buttonLink}`}>\n\t\t\t\t\t<img\n\t\t\t\t\t\theight=\"100%\"\n\t\t\t\t\t\twidth=\"100%\"\n\t\t\t\t\t\talt={imgAlt}\n\t\t\t\t\t\ttitle={imgAlt}\n\t\t\t\t\t\tsrc={imgSrc}\n\t\t\t\t\t/>\n\t\t\t\t</Link>\n\t\t\t</Paper>\n\t\t</Grid>\n\t);\n\n\tconst textContainer = (\n\t\t<Grid\n\t\t\tcontainer\n\t\t\tjustify=\"center\"\n\t\t\talignItems=\"center\"\n\t\t\titem\n\t\t\txs={12}\n\t\t\tmd={6}\n\t\t\tstyle={{\n\t\t\t\tpaddingTop : theme.spacing(5)\n\t\t\t}}\n\t\t>\n\t\t\t<Grid container justify=\"center\" item xs={12}>\n\t\t\t\t<Typography\n\t\t\t\t\talign=\"center\"\n\t\t\t\t\tvariant=\"h4\"\n\t\t\t\t\tstyle={{ color: 'white' }}\n\t\t\t\t\tgutterBottom\n\t\t\t\t>\n\t\t\t\t\t{bodyText}\n\t\t\t\t</Typography>\n\t\t\t</Grid>\n\t\t\t<Grid container justify=\"center\" item xs={12}>\n\t\t\t\t<Button\n\t\t\t\t\tcomponent={Link}\n\t\t\t\t\tto={`/${buttonLink}`}\n\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\tsize=\"large\"\n\t\t\t\t>\n\t\t\t\t\t{buttonText}\n\t\t\t\t</Button>\n\t\t\t</Grid>\n\t\t</Grid>\n\t);\n\n\treturn (\n\t\t<Grid\n\t\t\tcontainer\n\t\t\titem\n\t\t\tjustify=\"center\"\n\t\t\tstyle={{\n\t\t\t\tpaddingTop    : theme.spacing(5),\n\t\t\t\tpaddingBottom : theme.spacing(8)\n\t\t\t}}\n\t\t>\n\t\t\t<Typography\n\t\t\t\talign=\"center\"\n\t\t\t\tvariant=\"h2\"\n\t\t\t\tstyle={{ color: 'white' }}\n\t\t\t\tgutterBottom\n\t\t\t>\n\t\t\t\t{titleText}\n\t\t\t</Typography>\n\t\t\t<Hidden only={[ 'xs', 'sm', 'xl' ]} implementation=\"js\">\n\t\t\t\t{imgSide === 'right' ? (\n\t\t\t\t\t<Grid container item xs={12}>\n\t\t\t\t\t\t{textContainer}\n\t\t\t\t\t\t{imgContainer}\n\t\t\t\t\t</Grid>\n\t\t\t\t) : (\n\t\t\t\t\t<Grid container item xs={12}>\n\t\t\t\t\t\t{imgContainer}\n\t\t\t\t\t\t{textContainer}\n\t\t\t\t\t</Grid>\n\t\t\t\t)}\n\t\t\t</Hidden>\n\t\t\t<Hidden only={[ 'md', 'lg' ]} implementation=\"js\">\n\t\t\t\t<Grid container item xs={12}>\n\t\t\t\t\t<Grid container justify=\"center\" item xs={12}>\n\t\t\t\t\t\t{imgContainer}\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid container justify=\"center\" item xs={12}>\n\t\t\t\t\t\t{textContainer}\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t</Hidden>\n\t\t</Grid>\n\t);\n}\nexport default LandingPageElement;\n","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/actions/trees.js",[],"/home/justin/Documents/Springboard/SECT/tree-markable/client/src/firebase/firebaseStorage.js",[],"/home/justin/Documents/Springboard/SECT/tree-markable/client/src/actions/groups.js",[],"/home/justin/Documents/Springboard/SECT/tree-markable/client/src/styles/markerCard.js",[],"/home/justin/Documents/Springboard/SECT/tree-markable/client/src/styles/leafletMap.js",[],"/home/justin/Documents/Springboard/SECT/tree-markable/client/src/helpers/formErrorDisplay.js",[],"/home/justin/Documents/Springboard/SECT/tree-markable/client/src/tree/CreateNewTree.js",["360","361","362","363","364","365","366"],"import React, { useState, useRef, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Slider from '@material-ui/core/Slider';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Divider from '@material-ui/core/Divider';\nimport Button from '@material-ui/core/Button';\n\nimport TreeMarkableApi from '../TreeMarkableApi';\nimport TreeFormBasicFields from './TreeFormBasicFields';\nimport SelectCoordinates from '../leafletMap/SelectCoordinates';\nimport { treesRef, uploadImagesToFirebase } from '../firebase/firebaseStorage';\nimport ImagesInput from '../imageHandling/ImagesInput';\n\nconst useStyles = makeStyles({\n\tinnerContent : {\n\t\tpadding : 20\n\t},\n\tform         : {\n\t\tdisplay       : 'flex',\n\t\tflexDirection : 'column',\n\t\t'& div'       : {\n\t\t\tmarginBottom : 10\n\t\t}\n\t}\n});\n\nfunction CreateNewTree() {\n\tconst history = useHistory();\n\tconst INITIAL_TREE_FORM_DATA = {\n\t\tname            : '',\n\t\tdescription     : '',\n\t\tcommon_name     : '',\n\t\tscientific_name : '',\n\t\theight          : '',\n\t\tdsh             : '',\n\t\tleaf_type       : '',\n\t\tfruit_bearing   : false\n\t};\n\tconst classes = useStyles();\n\tconst [ treeFormData, setTreeFormData ] = useState(INITIAL_TREE_FORM_DATA);\n\tconst [ coordinates, setCoordinates ] = useState({ lat: '', lng: '' });\n\tconst [ imageFiles, setImageFiles ] = useState([]);\n\n\tconsole.log('CreateNewTree Load - coordinates', coordinates);\n\tconsole.log('CreateNewTree Load - imageFiles', imageFiles);\n\n\tconst handleTreeFormChange = (data) => {\n\t\tlet { name, value } = data;\n\t\tif (name === 'fruit_bearing') {\n\t\t\tvalue = data.checked;\n\t\t}\n\n\t\tsetTreeFormData((fData) => ({\n\t\t\t...fData,\n\t\t\t[name] : value\n\t\t}));\n\t};\n\n\tconst handleCoordinatesChange = (data) => {\n\t\tconsole.log('CreateNewTree - handleCoordinatesChange', data);\n\t\tconst { name, value } = data;\n\n\t\tsetCoordinates((fData) => ({\n\t\t\t...fData,\n\t\t\t[name] : value\n\t\t}));\n\t};\n\n\tconst handleMapCoordinatesChange = (coords) => {\n\t\tconsole.log('CreateNewTree - handleMapCoordinatesChange', coords);\n\n\t\tsetCoordinates(coords);\n\t};\n\n\tconst handleImageFilesChange = (files) => {\n\t\tsetImageFiles(files);\n\t};\n\n\t// On form submit, convert data to type expected by server\n\t// and make POST request to create new tree\n\tconst handleSubmit = async (evt) => {\n\t\tevt.preventDefault();\n\n\t\tlet newTree = {\n\t\t\t...treeFormData,\n\t\t\tgeolocation : {\n\t\t\t\tlatitude  : parseFloat(coordinates.lat),\n\t\t\t\tlongitude : parseFloat(coordinates.lng)\n\t\t\t}\n\t\t};\n\n\t\tfor (let field in newTree) {\n\t\t\tif (newTree[field] === '') {\n\t\t\t\tdelete newTree[field];\n\t\t\t}\n\t\t\telse if (field === 'height' || field === 'dsh') {\n\t\t\t\tnewTree[field] = parseFloat(newTree[field]);\n\t\t\t}\n\t\t}\n\n\t\tconsole.log('newtree', newTree);\n\t\ttry {\n\t\t\tconst res = await TreeMarkableApi.createTree(newTree);\n\t\t\tconsole.log('Trees Submit res', res);\n\t\t\tconsole.log('CreateNewTree- handleSubmit -ImageFiles', imageFiles);\n\t\t\tawait uploadImagesToFirebase(treesRef, res.id, imageFiles);\n\n\t\t\thistory.push(`/trees/${res.id}`);\n\t\t} catch (err) {\n\t\t\tconsole.log('TreeForm Errors', err);\n\t\t}\n\t};\n\n\treturn (\n\t\t<div className={classes.innerContent}>\n\t\t\t<Typography variant=\"h4\" gutterBottom>\n\t\t\t\tCreate New Tree\n\t\t\t</Typography>\n\t\t\t<form onSubmit={handleSubmit} className={classes.form}>\n\t\t\t\t<TreeFormBasicFields formData={treeFormData} onFormChange={handleTreeFormChange} />\n\t\t\t\t<Typography variant=\"h5\" gutterBottom>\n\t\t\t\t\tTree Location\n\t\t\t\t</Typography>\n\t\t\t\t<SelectCoordinates\n\t\t\t\t\tformData={coordinates}\n\t\t\t\t\tonCoordinatesChange={handleCoordinatesChange}\n\t\t\t\t\tonMapCoordinatesChange={handleMapCoordinatesChange}\n\t\t\t\t/>\n\t\t\t\t<Divider variant=\"middle\" style={{ marginTop: 15, marginBottom: 15 }} />\n\t\t\t\t<div>\n\t\t\t\t\t<Typography variant=\"h5\" gutterBottom>\n\t\t\t\t\t\tAdd Images\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<ImagesInput onImageFilesChange={handleImageFilesChange} />\n\t\t\t\t\t<Divider variant=\"middle\" style={{ marginBottom: 15 }} />\n\t\t\t\t</div>\n\n\t\t\t\t<Button color=\"secondary\" variant=\"contained\" type=\"submit\">\n\t\t\t\t\tCreate Tree\n\t\t\t\t</Button>\n\t\t\t</form>\n\t\t</div>\n\t);\n}\nexport default CreateNewTree;\n","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/tree/TreeFormBasicFields.js",["367","368","369","370","371","372","373","374","375","376","377"],"import React, { useState, useRef, useEffect } from 'react';\n\nimport Typography from '@material-ui/core/Typography';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\n\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Slider from '@material-ui/core/Slider';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Button from '@material-ui/core/Button';\n\nimport useStyles from '../styles/formStyle';\nimport TreeMarkableApi from '../TreeMarkableApi';\nimport SelectLocationMap from '../leafletMap/SelectLocationMap';\nimport {\n\ttreesRef,\n\tuploadImagesToFirebase\n} from '../firebase/firebaseStorage';\nimport ImagesInput from '../imageHandling/ImagesInput';\n\nfunction TreeFormBasicFields({ formData, onFormChange }) {\n\tconst classes = useStyles();\n\n\tconst handleChange = (evt) => {\n\t\tonFormChange(evt.target);\n\t};\n\n\treturn (\n\t\t<Grid container className={classes.form}>\n\t\t\t<TextField\n\t\t\t\tid=\"name\"\n\t\t\t\tname=\"name\"\n\t\t\t\tlabel=\"Tree Name\"\n\t\t\t\tplaceholder=\"Hyperion\"\n\t\t\t\tonChange={handleChange}\n\t\t\t\tvalue={formData.name}\n\t\t\t\trequired\n\t\t\t/>\n\t\t\t<TextField\n\t\t\t\tid=\"description\"\n\t\t\t\tname=\"description\"\n\t\t\t\tlabel=\"Description\"\n\t\t\t\tmultiline\n\t\t\t\tplaceholder=\"World's tallest known living tree!\"\n\t\t\t\tonChange={handleChange}\n\t\t\t\tvalue={formData.description}\n\t\t\t/>\n\n\t\t\t<TextField\n\t\t\t\tid=\"common_name\"\n\t\t\t\tname=\"common_name\"\n\t\t\t\tlabel=\"Species Common Name\"\n\t\t\t\tplaceholder=\"Bigleaf Maple\"\n\t\t\t\tonChange={handleChange}\n\t\t\t\tvalue={formData.common_name}\n\t\t\t/>\n\n\t\t\t<TextField\n\t\t\t\tid=\"scientific_name\"\n\t\t\t\tname=\"scientific_name\"\n\t\t\t\tlabel=\"Species Scientifc Name\"\n\t\t\t\tplaceholder=\"Acer Macrophyllum\"\n\t\t\t\tonChange={handleChange}\n\t\t\t\tvalue={formData.scientific_name}\n\t\t\t/>\n\n\t\t\t<TextField\n\t\t\t\tid=\"height\"\n\t\t\t\tname=\"height\"\n\t\t\t\tlabel=\"Height (ft.)\"\n\t\t\t\ttype=\"number\"\n\t\t\t\tplaceholder=\"From base to the tallest branch.\"\n\t\t\t\tinputProps={{ min: 0, max: 500, step: 0.01 }}\n\t\t\t\tonChange={handleChange}\n\t\t\t\tvalue={formData.height}\n\t\t\t/>\n\t\t\t<TextField\n\t\t\t\tid=\"dsh\"\n\t\t\t\tname=\"dsh\"\n\t\t\t\tlabel=\"Diameter Standard Height (in.)\"\n\t\t\t\ttype=\"number\"\n\t\t\t\tinputProps={{ min: 0, max: 500, step: 0.01 }}\n\t\t\t\tplaceholder=\"Trunk circumference 4.5ft above the ground.\"\n\t\t\t\tonChange={handleChange}\n\t\t\t\tvalue={formData.dsh}\n\t\t\t/>\n\t\t\t<TextField\n\t\t\t\tid=\"leaf_type\"\n\t\t\t\tname=\"leaf_type\"\n\t\t\t\tlabel=\"Leaf Type\"\n\t\t\t\tselect\n\t\t\t\tonChange={handleChange}\n\t\t\t\tvalue={formData.leaf_type}\n\t\t\t>\n\t\t\t\t<MenuItem value=\"\">Unknown</MenuItem>\n\t\t\t\t<MenuItem value=\"deciduous\">Deciduous</MenuItem>\n\t\t\t\t<MenuItem value=\"evergreen\">Evergreen</MenuItem>\n\t\t\t</TextField>\n\t\t\t<FormControlLabel\n\t\t\t\tcontrol={\n\t\t\t\t\t<Checkbox\n\t\t\t\t\t\tid=\"fruit_bearing\"\n\t\t\t\t\t\tname=\"fruit_bearing\"\n\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\tchecked={formData.fruit_bearing}\n\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t/>\n\t\t\t\t}\n\t\t\t\tlabel=\"Fruit Bearing? Consider adding what type of fruit to the description!\"\n\t\t\t/>\n\t\t</Grid>\n\t);\n}\nexport default TreeFormBasicFields;\n","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/group/CreateNewGroup.js",["378","379","380","381"],"import React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\n\nimport Divider from '@material-ui/core/Divider';\nimport Button from '@material-ui/core/Button';\n\nimport GroupFormBasicFields from './GroupFormBasicFields';\nimport { groupsRef, uploadImagesToFirebase } from '../firebase/firebaseStorage';\nimport ImagesInput from '../imageHandling/ImagesInput';\nimport { addToFollowedGroups } from '../actions/currUser';\nimport { createGroup } from '../actions/groups';\n\nconst useStyles = makeStyles({\n\tinnerContent : {\n\t\tpadding : 20\n\t},\n\tform         : {\n\t\tdisplay       : 'flex',\n\t\tflexDirection : 'column',\n\t\t'& div'       : {\n\t\t\tmarginBottom : 10\n\t\t}\n\t}\n});\n\nfunction CreateNewGroup() {\n\tconst classes = useStyles();\n\tconst dispatch = useDispatch();\n\tconst history = useHistory();\n\tconst userId = useSelector((st) => st.currUser.uid);\n\tconst INITIAL_GROUP_FORM_DATA = {\n\t\tname        : '',\n\t\tdescription : '',\n\t\tis_public   : true\n\t};\n\tconst [ groupFormData, setGroupFormData ] = useState(INITIAL_GROUP_FORM_DATA);\n\tconst [ imageFiles, setImageFiles ] = useState([]);\n\n\tconst handleGroupFormChange = (data) => {\n\t\tlet { name, value } = data;\n\t\tif (name === 'is_public') {\n\t\t\tvalue = data.checked;\n\t\t}\n\n\t\tsetGroupFormData((fData) => ({\n\t\t\t...fData,\n\t\t\t[name] : value\n\t\t}));\n\t};\n\n\tconst handleImageFilesChange = (files) => {\n\t\tconsole.log('handleImageFilesChange', files);\n\t\tsetImageFiles(files);\n\t};\n\n\t// On form submit, convert data to type expected by server\n\t// and make POST request to create new group\n\tconst handleSubmit = async (evt) => {\n\t\tevt.preventDefault();\n\n\t\tlet newGroup = { ...groupFormData };\n\n\t\tfor (let field in newGroup) {\n\t\t\tif (newGroup[field] === '') {\n\t\t\t\tdelete newGroup[field];\n\t\t\t}\n\t\t}\n\n\t\tconsole.log('new group', newGroup);\n\t\tconst groupId = await dispatch(createGroup(newGroup, imageFiles, userId, history));\n\t\tif (groupId) {\n\t\t\tconsole.log('CreateNewGroup - groupId', groupId);\n\t\t\thistory.push(`/groups/${groupId}`);\n\t\t}\n\t};\n\n\treturn (\n\t\t<div className={classes.innerContent}>\n\t\t\t<Typography variant=\"h4\" gutterBottom>\n\t\t\t\tCreate New Group\n\t\t\t</Typography>\n\t\t\t<form onSubmit={handleSubmit} className={classes.form}>\n\t\t\t\t<GroupFormBasicFields formData={groupFormData} onFormChange={handleGroupFormChange} />\n\t\t\t\t<Divider variant=\"middle\" style={{ marginTop: 15, marginBottom: 15 }} />\n\t\t\t\t<div>\n\t\t\t\t\t<Typography variant=\"h5\" gutterBottom>\n\t\t\t\t\t\tGroup Header Image\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<ImagesInput allowMultiple={false} onImageFilesChange={handleImageFilesChange} />\n\t\t\t\t\t<Divider variant=\"middle\" style={{ marginBottom: 15 }} />\n\t\t\t\t</div>\n\n\t\t\t\t<Button color=\"secondary\" variant=\"contained\" type=\"submit\">\n\t\t\t\t\tCreate Group\n\t\t\t\t</Button>\n\t\t\t</form>\n\t\t</div>\n\t);\n}\nexport default CreateNewGroup;\n","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/tree/ExploreTrees.js",["382","383","384","385","386","387","388","389","390","391"],"/home/justin/Documents/Springboard/SECT/tree-markable/client/src/group/ExploreGroups.js",["392","393","394","395","396","397","398","399","400","401","402","403","404","405","406","407"],"import React, { useState, useRef, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport SwipeableViews from 'react-swipeable-views';\n\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Box from '@material-ui/core/Box';\n\nimport { getGroupsFromApi } from '../actions/groups';\nimport GroupSearchForm from './GroupSearchForm';\nimport GroupList from './GroupList';\n\nconst useStyles = makeStyles((theme) => ({\n\tinnerContent : {\n\t\tbackgroundColor : theme.palette.background.paper,\n\t\tpadding         : 20\n\t}\n}));\n\nfunction ExploreGroups() {\n\tconst theme = useTheme();\n\tconst classes = useStyles(theme);\n\tconst dispatch = useDispatch();\n\n\tconst [ isLoading, setIsLoading ] = useState(true);\n\n\tuseEffect(\n\t\t() => {\n\t\t\tif (isLoading) {\n\t\t\t\tdispatch(getGroupsFromApi());\n\t\t\t\tsetIsLoading(false);\n\t\t\t}\n\t\t},\n\t\t[ isLoading, dispatch ]\n\t);\n\n\tlet groups = useSelector((st) => Object.values(st.groups.entities).map((group) => group));\n\n\tconsole.log('ExploreGroups - groups', groups);\n\n\tif (isLoading) {\n\t\treturn <div>Loading</div>;\n\t}\n\n\treturn (\n\t\t<div className={classes.innerContent}>\n\t\t\t<GroupSearchForm />\n\n\t\t\t<GroupList groups={groups} />\n\t\t</div>\n\t);\n}\nexport default ExploreGroups;\n","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/tree/TreePage.js",["408","409","410","411"],"/home/justin/Documents/Springboard/SECT/tree-markable/client/src/tree/EditTree.js",["412","413","414","415","416","417","418","419"],"import React, { useState, useRef, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useHistory, useParams } from 'react-router-dom';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Slider from '@material-ui/core/Slider';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Divider from '@material-ui/core/Divider';\nimport Button from '@material-ui/core/Button';\n\nimport TreeMarkableApi from '../TreeMarkableApi';\nimport TreeFormBasicFields from './TreeFormBasicFields';\nimport SelectCoordinates from '../leafletMap/SelectCoordinates';\nimport { treesRef, uploadImagesToFirebase, deleteImagesFromFirebase } from '../firebase/firebaseStorage';\nimport ImagesInput from '../imageHandling/ImagesInput';\nimport { updateTreeInApi } from '../actions/trees';\nimport { TransitEnterexitRounded } from '@material-ui/icons';\n\nconst useStyles = makeStyles({\n\tinnerContent : {\n\t\tpadding : 20\n\t},\n\tform         : {\n\t\tdisplay       : 'flex',\n\t\tflexDirection : 'column',\n\t\t'& div'       : {\n\t\t\tmarginBottom : 10\n\t\t}\n\t}\n});\n\nfunction EditTree() {\n\tconst classes = useStyles();\n\n\tconst { id } = useParams();\n\tconst dispatch = useDispatch();\n\tconst tree = useSelector((st) => st.trees.entities[id]);\n\tconst history = useHistory();\n\tconst INITIAL_TREE_FORM_DATA = {\n\t\tname            : tree.name,\n\t\tdescription     : tree.description || '',\n\t\tcommon_name     : tree.common_name || '',\n\t\tscientific_name : tree.scientific_name || '',\n\t\theight          : tree.height || '',\n\t\tdsh             : tree.dsh || '',\n\t\tleaf_type       : tree.leaf_type || '',\n\t\tfruit_bearing   : tree.fruit_bearing || false\n\t};\n\tconst [ treeFormData, setTreeFormData ] = useState(INITIAL_TREE_FORM_DATA);\n\tconst [ coordinates, setCoordinates ] = useState({\n\t\tlat : tree.geolocation.y,\n\t\tlng : tree.geolocation.x\n\t});\n\tconst [ imageFiles, setImageFiles ] = useState([]);\n\n\tconst handleTreeFormChange = (data) => {\n\t\tlet { name, value } = data;\n\t\tif (name === 'fruit_bearing') {\n\t\t\tvalue = data.checked;\n\t\t}\n\n\t\tsetTreeFormData((fData) => ({\n\t\t\t...fData,\n\t\t\t[name] : value\n\t\t}));\n\t};\n\n\tconst handleCoordinatesChange = (data) => {\n\t\tconsole.log('handleCoordinatesChange', data);\n\t\tconst { name, value } = data;\n\n\t\tsetCoordinates((fData) => ({\n\t\t\t...fData,\n\t\t\t[name] : value\n\t\t}));\n\t};\n\n\tconst handleMapCoordinatesChange = (coords) => {\n\t\tconsole.log('handleMapCoordinatesChange', coords);\n\n\t\tsetCoordinates(coords);\n\t};\n\n\tconst handleImageFilesChange = (files) => {\n\t\tconsole.log('handleImageFilesChange', files);\n\n\t\tsetImageFiles(files);\n\t};\n\n\t// On form submit, convert data to type expected by server\n\t// and make POST request to edit tree\n\tconst handleSubmit = async (evt) => {\n\t\tevt.preventDefault();\n\n\t\tlet editTree = {\n\t\t\t...treeFormData,\n\t\t\tgeolocation : {\n\t\t\t\tlatitude  : parseFloat(coordinates.lat),\n\t\t\t\tlongitude : parseFloat(coordinates.lng)\n\t\t\t},\n\t\t\theight      : treeFormData.height || null,\n\t\t\tdsh         : treeFormData.dsh || null\n\t\t};\n\n\t\tconsole.log('editTree', editTree);\n\t\tdispatch(updateTreeInApi(id, editTree));\n\n\t\tconsole.log('EditTree handleSubmit - ImageFiles', imageFiles);\n\t\tif (imageFiles.length > 0) {\n\t\t\tconsole.log('EditTree handleSubmit - inDelete images');\n\n\t\t\tawait deleteImagesFromFirebase(treesRef, id);\n\t\t\tawait uploadImagesToFirebase(treesRef, id, imageFiles);\n\t\t}\n\n\t\thistory.push(`/trees/${id}`);\n\t};\n\n\treturn (\n\t\t<div className={classes.innerContent}>\n\t\t\t<Typography variant=\"h4\" gutterBottom>\n\t\t\t\tEdit Tree\n\t\t\t</Typography>\n\t\t\t<form onSubmit={handleSubmit} className={classes.form}>\n\t\t\t\t<TreeFormBasicFields formData={treeFormData} onFormChange={handleTreeFormChange} />\n\t\t\t\t<Typography variant=\"h5\" gutterBottom>\n\t\t\t\t\tTree Location\n\t\t\t\t</Typography>\n\t\t\t\t<SelectCoordinates\n\t\t\t\t\tformData={coordinates}\n\t\t\t\t\tonCoordinatesChange={handleCoordinatesChange}\n\t\t\t\t\tonMapCoordinatesChange={handleMapCoordinatesChange}\n\t\t\t\t/>\n\t\t\t\t<Divider variant=\"middle\" />\n\t\t\t\t<div>\n\t\t\t\t\t<Typography variant=\"h5\" gutterBottom>\n\t\t\t\t\t\tEdit Images\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<Typography gutterBottom>\n\t\t\t\t\t\tIgnore this section if you want to leave them the same. Any images added will overwrite\n\t\t\t\t\t\tpreviously uploaded images.\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<ImagesInput onImageFilesChange={handleImageFilesChange} />\n\t\t\t\t\t<Divider variant=\"middle\" />\n\t\t\t\t</div>\n\n\t\t\t\t<Button color=\"secondary\" variant=\"contained\" type=\"submit\">\n\t\t\t\t\tEdit Tree\n\t\t\t\t</Button>\n\t\t\t</form>\n\t\t</div>\n\t);\n}\nexport default EditTree;\n","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/group/GroupPage.js",["420","421","422","423","424","425","426","427","428","429","430","431"],"/home/justin/Documents/Springboard/SECT/tree-markable/client/src/user/SignIn.js",["432","433","434","435","436"],"import React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\nimport { signInUser, signOutUser } from '../actions/auth';\nimport { errorDisplay } from '../helpers/formErrorDisplay';\nimport SignInForm from './SignInForm';\n\nconst useStyles = makeStyles({\n\tinnerContent : {\n\t\tpadding : 20\n\t},\n\tform         : {\n\t\tdisplay       : 'flex',\n\t\tflexDirection : 'column',\n\t\t'& div'       : {\n\t\t\tmarginBottom : 10\n\t\t}\n\t}\n});\n\nfunction SignIn() {\n\tconsole.log('SignIn Component - Start');\n\tconst classes = useStyles();\n\tconst dispatch = useDispatch();\n\tconst history = useHistory();\n\tconst isAuthenticated = useSelector((st) => st.auth.authenticated);\n\tconst username = useSelector((st) => st.currUser.username);\n\tconst status = useSelector((st) => st.currUser.status);\n\n\t// Avoid updating during an existing state transition by checking\n\t// auth status in useEffect. Also redirect already logged in users\n\tuseEffect(\n\t\t() => {\n\t\t\t// If user is authenticated, push to user page\n\t\t\tif ((isAuthenticated && status === 'idle') || status === 'successful') {\n\t\t\t\thistory.push(`/users/${username}`);\n\t\t\t}\n\t\t},\n\t\t[ isAuthenticated, username, history, status ]\n\t);\n\n\tconst submitFormData = (formData) => {\n\t\tdispatch(signInUser(formData));\n\t};\n\n\treturn (\n\t\t<Grid container className={classes.innerContent}>\n\t\t\t<Grid item xs={12}>\n\t\t\t\t<Typography variant=\"h3\" gutterBottom>\n\t\t\t\t\tSign In\n\t\t\t\t</Typography>\n\t\t\t\t<SignInForm submitFormData={submitFormData} />\n\t\t\t</Grid>\n\t\t</Grid>\n\t);\n}\nexport default SignIn;\n","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/user/EditUser.js",["437"],"import React, { useState, useEffect } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Divider from '@material-ui/core/Divider';\n\nimport CurrUserInfo from './CurrUserInfo';\nimport { errorDisplay } from '../helpers/formErrorDisplay';\nimport { editCurrUser } from '../actions/currUser';\n\nconst useStyles = makeStyles({\n\tinnerContent : {\n\t\tpadding : 20\n\t},\n\tform         : {\n\t\tdisplay       : 'flex',\n\t\tflexDirection : 'column',\n\t\t'& div'       : {\n\t\t\tmarginBottom : 10\n\t\t}\n\t}\n});\n\nfunction EditUser() {\n\tconst classes = useStyles();\n\tconst history = useHistory();\n\tconst { username: paramsUsername } = useParams();\n\tconst dispatch = useDispatch();\n\tconst { username, error } = useSelector((st) => st.currUser);\n\tconst status = useSelector((st) => st.currUser.status);\n\n\tconst INITIAL_FORM_DATA = {\n\t\tcurrent_email    : '',\n\t\tcurrent_password : '',\n\t\tusername         : '',\n\t\tnew_email        : '',\n\t\tnew_password     : '',\n\t\timg_url          : ''\n\t};\n\tconst [ formData, setFormData ] = useState(INITIAL_FORM_DATA);\n\n\t// When a user changes their username, push to the updated username\n\t// to prevent issues on a potential refresh.\n\tuseEffect(\n\t\t() => {\n\t\t\tif (status === 'success') {\n\t\t\t\thistory.push(`/users/${username}`);\n\t\t\t}\n\t\t},\n\t\t[ username, paramsUsername, history, status ]\n\t);\n\n\tconst handleChange = (evt) => {\n\t\tconst { name, value } = evt.target;\n\n\t\tsetFormData((fData) => ({\n\t\t\t...fData,\n\t\t\t[name] : value\n\t\t}));\n\t};\n\n\tconst handleCancel = () => {\n\t\thistory.push(`/users/${username}`);\n\t};\n\n\tconst handleSubmit = (evt) => {\n\t\tevt.preventDefault();\n\n\t\t// email and password required by Firebase Reauthentication\n\t\tconst credentials = {\n\t\t\temail    : formData.current_email,\n\t\t\tpassword : formData.current_password\n\t\t};\n\n\t\t// user data required by TreeMarkableApi to edit user\n\t\tconst userData = {\n\t\t\tusername : formData.username,\n\t\t\timg_url  : formData.img_url,\n\t\t\temail    : formData.new_email,\n\t\t\tpassword : formData.new_password\n\t\t};\n\n\t\tfor (let field in userData) {\n\t\t\tif (userData[field] === '') {\n\t\t\t\tdelete userData[field];\n\t\t\t}\n\t\t}\n\t\tconsole.log('Edit User - handleSumbit - userData', userData);\n\t\tdispatch(editCurrUser(credentials, username, userData));\n\t};\n\n\tconst handleErrorDisplay = (field) => {\n\t\treturn errorDisplay(field, error);\n\t};\n\n\treturn (\n\t\t<Grid container className={classes.innerContent} direction=\"column\">\n\t\t\t<Grid item>\n\t\t\t\t<Typography variant=\"h3\" gutterBottom>\n\t\t\t\t\tEdit User\n\t\t\t\t</Typography>\n\t\t\t</Grid>\n\t\t\t<Divider variant=\"middle\" style={{ marginBottom: 15 }} />\n\t\t\t<Grid container item xs={12}>\n\t\t\t\t<Grid container direction=\"column\" item xs={12}>\n\t\t\t\t\t<form onSubmit={handleSubmit} className={classes.form}>\n\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t<Typography>Any fields left blank will be ignored.</Typography>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\tid=\"username\"\n\t\t\t\t\t\t\t\tname=\"username\"\n\t\t\t\t\t\t\t\tlabel=\"New Username\"\n\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\tvalue={formData.username}\n\t\t\t\t\t\t\t\tinputProps={{ maxLength: 55 }}\n\t\t\t\t\t\t\t\terror={Boolean(handleErrorDisplay('username'))}\n\t\t\t\t\t\t\t\thelperText={handleErrorDisplay('username')}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\tid=\"new_email\"\n\t\t\t\t\t\t\t\tname=\"new_email\"\n\t\t\t\t\t\t\t\tlabel=\"New Email\"\n\t\t\t\t\t\t\t\ttype=\"email\"\n\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\tvalue={formData.new_email}\n\t\t\t\t\t\t\t\tautoComplete=\"email\"\n\t\t\t\t\t\t\t\terror={Boolean(handleErrorDisplay('email'))}\n\t\t\t\t\t\t\t\thelperText={handleErrorDisplay('email')}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\tid=\"new_password\"\n\t\t\t\t\t\t\t\tname=\"new_password\"\n\t\t\t\t\t\t\t\tlabel=\"New Password\"\n\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\tvalue={formData.new_password}\n\t\t\t\t\t\t\t\tinputProps={{ minLength: 6 }}\n\t\t\t\t\t\t\t\terror={Boolean(handleErrorDisplay('new_password'))}\n\t\t\t\t\t\t\t\thelperText={handleErrorDisplay('new_password')}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t{/* <Grid item >\n\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\tid=\"img_url\"\n\t\t\t\t\t\t\t\tname=\"img_url\"\n\t\t\t\t\t\t\t\tlabel=\"New Profile Image URL\"\n\t\t\t\t\t\t\t\ttype=\"url\"\n\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\tvalue={formData.img_url}\n\t\t\t\t\t\t\t\tautoComplete=\"img_url\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Grid> */}\n\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t<Typography variant=\"subtitle2\">Verify Account</Typography>\n\n\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\tid=\"current_password\"\n\t\t\t\t\t\t\t\tname=\"current_password\"\n\t\t\t\t\t\t\t\tlabel=\"Current Password\"\n\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\tvalue={formData.current_password}\n\t\t\t\t\t\t\t\tinputProps={{ minLength: 6 }}\n\t\t\t\t\t\t\t\terror={Boolean(handleErrorDisplay('password'))}\n\t\t\t\t\t\t\t\thelperText={handleErrorDisplay('password')}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid container item justify=\"space-between\" style={{ paddingLeft: 40, paddingRight: 40 }}>\n\t\t\t\t\t\t\t<Button onClick={handleCancel} variant=\"contained\" color=\"secondary\">\n\t\t\t\t\t\t\t\tGo Back\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t<Button variant=\"contained\" color=\"primary\" type=\"submit\">\n\t\t\t\t\t\t\t\tSave Edits\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</form>\n\t\t\t\t</Grid>\n\t\t\t\t{/* <Grid container item xs={6}>\n\t\t\t\t\t<CurrUserInfo />\n\t\t\t\t</Grid> */}\n\t\t\t</Grid>\n\t\t</Grid>\n\t);\n}\nexport default EditUser;\n","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/user/SignUp.js",["438","439","440","441","442","443","444","445"],"import React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\n\n\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\nimport { signUpUser } from '../actions/auth';\nimport { errorDisplay } from '../helpers/formErrorDisplay';\nimport useStyles from '../styles/formStyle';\nimport SignUpForm from './SignUpForm';\nimport SelectCoordinates from '../leafletMap/SelectCoordinates';\nimport { getUserFromApi } from '../actions/currUser';\n// TODO change geolocation request to use my location\n\nfunction SignUp() {\n\tconst classes = useStyles();\n\tconst history = useHistory();\n\tconst dispatch = useDispatch();\n\tconst isAuthenticated = useSelector((st) => st.auth.authenticated);\n\tconst username = useSelector((st) => st.currUser.username);\n\n\t// Avoid updating during an existing state transition by checking\n\t// auth status in useEffect\n\tuseEffect(\n\t\t() => {\n\t\t\t// If user is authenticated, push to user page\n\t\t\tif (isAuthenticated) {\n\t\t\t\thistory.push(`/users/${username}`);\n\t\t\t}\n\t\t},\n\t\t[ isAuthenticated, username ]\n\t);\n\n\tconst submitFormData = (formData) => {\n\t\t// email and password required by Firebase Authentication\n\t\tconst credentials = {\n\t\t\temail    : formData.email,\n\t\t\tpassword : formData.password\n\t\t};\n\t\t// remove password for TreeMarkableApi user creation\n\t\tconst userData = { ...formData };\n\t\tdelete userData.password;\n\n\t\tdispatch(signUpUser(credentials, userData));\n\t};\n\n\treturn (\n\t\t<Grid container className={classes.form}>\n\t\t\t<Typography variant=\"h3\" gutterBottom>\n\t\t\t\tSign Up\n\t\t\t</Typography>\n\t\t\t<Grid item>\n\t\t\t\t<SignUpForm submitFormData={submitFormData} />\n\t\t\t</Grid>\n\t\t</Grid>\n\t);\n}\n\nexport default SignUp;\n","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/user/UserProfilePage.js",["446","447","448","449","450","451","452","453","454","455","456"],"import React from 'react';\nimport { Link as RouterLink, useParams, useHistory } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\n\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport Link from '@material-ui/core/Link';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Paper from '@material-ui/core/Paper';\n\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Hidden from '@material-ui/core/Hidden';\nimport Button from '@material-ui/core/Button';\nimport Divider from '@material-ui/core/Divider';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\n\nimport profileHeaderImg from '../images/profile-page-header.jpg';\nimport CurrUserInfo from './CurrUserInfo';\n\nconst useStyles = makeStyles((theme) => ({\n\taccordianContainer  : {\n\t\twidth : '100%'\n\t},\n\theading             : {\n\t\tfontSize   : theme.typography.pxToRem(15),\n\t\tfontWeight : theme.typography.fontWeightRegular\n\t},\n\theaderImgBackground : {\n\t\theight             : 300,\n\t\tbackgroundImage    : `url(${profileHeaderImg})`,\n\t\tbackgroundRepeat   : 'no-repeat',\n\t\tbackgroundPosition : 'center',\n\t\tbackgroundSize     : 'cover',\n\t\tbackgroundColor    : theme.palette.secondary.dark\n\t},\n\tinnerContent        : {\n\t\tpadding : 15\n\t}\n}));\n\n/**\n * Shows the current logged in user's profile. Allows use to edit\n * their information or delete their account.\n * \n * \n * If this is changed to allow users to view each other's profiles\n * in the future, then change getting user info from store and make\n * a request to the API for it. \n */\nfunction UserProfilePage() {\n\tconst theme = useTheme();\n\tconst classes = useStyles(theme);\n\n\tconst history = useHistory();\n\n\tconst { uid, username, email, img_url, created_at, is_admin, savedTreeIds } = useSelector((st) => st.currUser);\n\tconst trees = useSelector((st) => st.trees.entities);\n\n\tconst pushToEditForm = () => {\n\t\thistory.push(`/users/${username}/edit`);\n\t};\n\n\treturn (\n\t\t<Grid container direction=\"column\">\n\t\t\t<Grid className={classes.headerImgBackground} container justify=\"center\" alignItems=\"flex-end\" item xs={12}>\n\t\t\t\t<div style={{ height: 300 }} />\n\t\t\t</Grid>\n\t\t\t<Grid container item className={classes.innerContent}>\n\t\t\t\t<Grid>\n\t\t\t\t\t<CurrUserInfo />\n\t\t\t\t\t<Button color=\"secondary\" onClick={pushToEditForm}>\n\t\t\t\t\t\tEdit User\n\t\t\t\t\t</Button>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid container item>\n\t\t\t\t\t<Grid container alignItems=\"flex-end\">\n\t\t\t\t\t\t<Box mr={2}>\n\t\t\t\t\t\t\t<Typography variant=\"h5\">Favorite Trees</Typography>\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t<Link component={RouterLink} to=\"/trees\">\n\t\t\t\t\t\t\t<Typography variant=\"subtitle1\">Find more trees!</Typography>\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<List>\n\t\t\t\t\t\t{savedTreeIds.length > 0 ? (\n\t\t\t\t\t\t\tsavedTreeIds.map((id) => (\n\t\t\t\t\t\t\t\t<ListItem button component={RouterLink} to={`/trees/${id}`} key={`tree-${id}`}>\n\t\t\t\t\t\t\t\t\t<ListItemText>{trees[id].name}</ListItemText>\n\t\t\t\t\t\t\t\t</ListItem>\n\t\t\t\t\t\t\t))\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<Grid>\n\t\t\t\t\t\t\t\t<Typography>No Favorite Trees</Typography>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</List>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t</Grid>\n\t);\n}\nexport default UserProfilePage;\n","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/tree/TreeSearchForm.js",["457","458","459","460","461"],"import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Divider from '@material-ui/core/Divider';\nimport Box from '@material-ui/core/Box';\nimport TextField from '@material-ui/core/TextField';\nimport Slider from '@material-ui/core/Slider';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Paper from '@material-ui/core/Paper';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\n\nimport { getTreesFromApi } from '../actions/trees';\n\nimport useStyles from '../styles/formStyle';\n\nfunction TreeSearchForm({ mapCenter, setGetLocation }) {\n\tconst classes = useStyles();\n\tconst dispatch = useDispatch();\n\n\tconsole.log('TreeSearchForm - mapCenter', mapCenter);\n\n\tconst [ formData, setFormData ] = useState({\n\t\tsearch        : '',\n\t\tdistance      : '',\n\t\tleaf_type     : '',\n\t\tfruit_bearing : false,\n\t\theight_min    : '',\n\t\theight_max    : '',\n\t\tdsh_min       : '',\n\t\tdsh_max       : ''\n\t});\n\n\tconst handleChange = (evt) => {\n\t\tconst name = evt.target.name;\n\t\tconst value =\n\t\t\tname === 'fruit_bearing'\n\t\t\t\t? evt.target.checked\n\t\t\t\t: evt.target.value;\n\n\t\tsetFormData((fData) => ({\n\t\t\t...fData,\n\t\t\t[name] : value\n\t\t}));\n\t};\n\n\tconst handleSubmit = (evt) => {\n\t\tevt.preventDefault();\n\t\tsetFormData(formData);\n\n\t\tconst searchParams = {\n\t\t\tsearch        : formData.search,\n\t\t\tdistance      : parseFloat(formData.distance) || '',\n\t\t\tmap_center_x  : mapCenter[1],\n\t\t\tmap_center_y  : mapCenter[0],\n\t\t\tleaf_type     : formData.leaf_type,\n\t\t\tfruit_bearing : formData.fruit_bearing || '',\n\t\t\theight_min    : parseFloat(formData.height_min) || '',\n\t\t\theight_max    : parseFloat(formData.height_max) || '',\n\t\t\tdsh_min       : parseFloat(formData.dsh_min) || '',\n\t\t\tdsh_max       : parseFloat(formData.dsh_max) || ''\n\t\t};\n\n\t\tfor (let field in searchParams) {\n\t\t\tif (searchParams[field] === '') {\n\t\t\t\tdelete searchParams[field];\n\t\t\t}\n\t\t}\n\n\t\tconsole.log('Searchparams', searchParams);\n\t\tdispatch(getTreesFromApi(searchParams));\n\t};\n\n\tconst handleGetLocationClick = () => {\n\t\tconsole.log('handleGetLocationClick - click');\n\t\tsetGetLocation(true);\n\t};\n\n\treturn (\n\t\t<form onSubmit={handleSubmit} className={classes.form}>\n\t\t\t<Grid container>\n\t\t\t\t<Typography variant=\"h3\">Explore Trees</Typography>\n\t\t\t\t<Grid item xs={12} className={classes.form}>\n\t\t\t\t\t<TextField\n\t\t\t\t\t\tid=\"search\"\n\t\t\t\t\t\tname=\"search\"\n\t\t\t\t\t\tlabel=\"Search Term\"\n\t\t\t\t\t\tplaceholder=\"Search Tree Name, Common Name, Scientific Name...\"\n\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\tvalue={formData.search}\n\t\t\t\t\t/>\n\t\t\t\t</Grid>\n\n\t\t\t\t<Grid container item xs={12} md={6}>\n\t\t\t\t\t<Grid item xs={6}>\n\t\t\t\t\t\t<Typography variant=\"subtitle1\">\n\t\t\t\t\t\t\tHeight (ft.)\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tid=\"height_min\"\n\t\t\t\t\t\t\tname=\"height_min\"\n\t\t\t\t\t\t\tlabel=\"Min\"\n\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\tinputProps={{ min: 0, max: 500, step: 0.01 }}\n\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\tvalue={formData.height_min}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tid=\"height_max\"\n\t\t\t\t\t\t\tname=\"height_max\"\n\t\t\t\t\t\t\tlabel=\"Max\"\n\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\tinputProps={{ min: 1, max: 500, step: 0.01 }}\n\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\tvalue={formData.height_max}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item xs={6}>\n\t\t\t\t\t\t<Typography variant=\"subtitle1\">\n\t\t\t\t\t\t\tDSH (in.)\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tid=\"dsh_min\"\n\t\t\t\t\t\t\tname=\"dsh_min\"\n\t\t\t\t\t\t\tlabel=\"Min\"\n\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\tinputProps={{\n\t\t\t\t\t\t\t\tmin  : 0,\n\t\t\t\t\t\t\t\tmax  : 500,\n\t\t\t\t\t\t\t\tstep : 0.01\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\tvalue={formData.dsh_min}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tid=\"dsh_max\"\n\t\t\t\t\t\t\tname=\"dsh_max\"\n\t\t\t\t\t\t\tlabel=\"Max\"\n\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\tinputProps={{\n\t\t\t\t\t\t\t\tmin  : 1,\n\t\t\t\t\t\t\t\tmax  : 500,\n\t\t\t\t\t\t\t\tstep : 0.01\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\tvalue={formData.dsh_max}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid container item xs={12} md={6}>\n\t\t\t\t\t<Grid item xs={6} md={12}>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tid=\"leaf_type\"\n\t\t\t\t\t\t\tname=\"leaf_type\"\n\t\t\t\t\t\t\tlabel=\"Leaf Type\"\n\t\t\t\t\t\t\tselect\n\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\tvalue={formData.leaf_type}\n\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<MenuItem value=\"\">Any</MenuItem>\n\t\t\t\t\t\t\t<MenuItem value=\"deciduous\">\n\t\t\t\t\t\t\t\tDeciduous\n\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t\t<MenuItem value=\"evergreen\">\n\t\t\t\t\t\t\t\tEvergreen\n\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t</TextField>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item xs={6} md={12}>\n\t\t\t\t\t\t<FormControlLabel\n\t\t\t\t\t\t\tcontrol={\n\t\t\t\t\t\t\t\t<Checkbox\n\t\t\t\t\t\t\t\t\tid=\"fruit_bearing\"\n\t\t\t\t\t\t\t\t\tname=\"fruit_bearing\"\n\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\tchecked={formData.fruit_bearing}\n\t\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tlabel=\"Fruit Bearing\"\n\t\t\t\t\t\t\tlabelPlacement=\"top\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid container alignItems=\"center\" item xs={12}>\n\t\t\t\t\t<Grid item md={8}>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tid=\"distance\"\n\t\t\t\t\t\t\tname=\"distance\"\n\t\t\t\t\t\t\tlabel=\"Miles from Map Center to Show Trees\"\n\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\tinputProps={{ min: 0, step: 1 }}\n\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\tvalue={formData.distance}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid container justify=\"center\" item md={4}>\n\t\t\t\t\t\t<Tooltip title=\"Requires user location permission\">\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\tonClick={handleGetLocationClick}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tCenter on Me\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t\t<Button\n\t\t\t\t\tfullWidth\n\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\ttype=\"submit\"\n\t\t\t\t>\n\t\t\t\t\tSearch\n\t\t\t\t</Button>\n\t\t\t</Grid>\n\t\t</form>\n\t);\n}\n\nexport default TreeSearchForm;\n","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/tree/TreeList.js",["462","463","464","465","466"],"import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport { DataGrid } from '@material-ui/data-grid';\n\nimport { FavoriteBorder as FavoriteBorderIcon, Favorite as FavoriteIcon } from '@material-ui/icons';\n\nimport FavoriteIconBtn from '../iconBtns/FavoriteIconBtn';\nimport EditTreeInGroupIconBtn from '../iconBtns/EditTreeInGroupIconBtn';\n\nimport { addToSavedTrees, removeFromSavedTrees } from '../actions/currUser';\n\nconst useStyles = makeStyles((theme) => ({\n\ttreeListContainer : {\n\t\tbackgroundColor           : theme.palette.background.paper,\n\t\t'& .data-grid-fav-header' : {\n\t\t\t'& .MuiDataGrid-colCellTitleContainer' : {\n\t\t\t\talignItems : 'center'\n\t\t\t}\n\t\t},\n\t\tdisplay                   : 'flex',\n\t\theight                    : '100%'\n\t}\n}));\n\nfunction DetailsLinkBtn(props) {\n\treturn (\n\t\t<Button color=\"primary\" component={Link} {...props}>\n\t\t\tShow\n\t\t</Button>\n\t);\n}\n\nconst checkTreeIdInCollection = (collection, treeId) => {\n\treturn collection.includes(treeId);\n};\n\nfunction TreeList({ trees, group = null }) {\n\tconst classes = useStyles();\n\tconst dispatch = useDispatch();\n\tconst { username, savedTreeIds } = useSelector((st) => st.currUser);\n\tlet treeRows;\n\tconsole.log('TreeList - trees', trees);\n\tif (!group) {\n\t\ttreeRows = trees.map((tree) => ({\n\t\t\tisFavTree : {\n\t\t\t\tid    : tree.id,\n\t\t\t\tisFav : checkTreeIdInCollection(savedTreeIds, tree.id)\n\t\t\t},\n\t\t\t...tree,\n\t\t\tlink      : `trees/${tree.id}`\n\t\t}));\n\t}\n\telse if (group) {\n\t\ttreeRows = trees.map((tree) => ({\n\t\t\ttreeInGroup : {\n\t\t\t\tid          : tree.id,\n\t\t\t\ttreeInGroup : checkTreeIdInCollection(group.trees, tree.id)\n\t\t\t},\n\t\t\t...tree,\n\t\t\tlink        : `trees/${tree.id}`\n\t\t}));\n\t}\n\n\tconst columns = [\n\t\t// Tree List outside of group has favorite/unfavorite btn for user\n\t\t!group && {\n\t\t\tfield           : 'isFavTree',\n\t\t\trenderHeader    : (params) => <FavoriteIcon />,\n\t\t\theaderClassName : 'data-grid-fav-header',\n\t\t\theaderAlign     : 'center',\n\t\t\trenderCell      : (params) => {\n\t\t\t\treturn <FavoriteIconBtn treeId={parseInt(params.value.id)} />;\n\t\t\t},\n\t\t\tsortComparator  : (value1, value2, param1, param2) => {\n\t\t\t\t//sort by favorited status of true or false\n\t\t\t\treturn value1.isFav === value2.isFav ? 0 : value1.isFav ? -1 : 1;\n\t\t\t}\n\t\t},\n\t\t// Tree List displayed as part of group page has column for\n\t\t// adding or removing tree from group.\n\t\tgroup !== null && {\n\t\t\tfield           : 'treeInGroup',\n\t\t\theaderName      : 'Add Tree',\n\t\t\theaderClassName : 'data-grid-tree-in-group-header',\n\t\t\theaderAlign     : 'center',\n\t\t\twidth           : 120,\n\t\t\trenderCell      : (params) => {\n\t\t\t\treturn <EditTreeInGroupIconBtn group={group} treeId={parseInt(params.value.id)} />;\n\t\t\t},\n\t\t\tsortComparator  : (value1, value2, param1, param2) => {\n\t\t\t\t//sort by whether tree is in group trees of true or false\n\t\t\t\treturn value1.treeInGroup === value2.treeInGroup ? 0 : value1.treeInGroup ? -1 : 1;\n\t\t\t}\n\t\t},\n\t\t{ field: 'name', headerName: 'Name', width: 150 },\n\t\t{ field: 'common_name', headerName: 'Common Name' },\n\t\t{\n\t\t\tfield      : 'scientific_name',\n\t\t\theaderName : 'Scientific Name'\n\t\t},\n\t\t{ field: 'height', headerName: 'Ht. (ft.)', type: 'number' },\n\t\t{ field: 'dsh', headerName: 'DBH (in.)', type: 'number' },\n\t\t{\n\t\t\tfield          : 'fruit_bearing',\n\t\t\theaderName     : 'Fruit Bearing',\n\t\t\tvalueFormatter : (params) => {\n\t\t\t\treturn params.value === true ? 'Yes' : ' ';\n\t\t\t}\n\t\t},\n\t\t{ field: 'leaf_type', headerName: 'Leaf Type' },\n\t\t{\n\t\t\tfield      : 'link',\n\t\t\theaderName : 'Details',\n\t\t\trenderCell : (params) => <DetailsLinkBtn to={params.value} />\n\t\t}\n\t];\n\n\tif (!username) columns.shift();\n\n\treturn (\n\t\t<div className={classes.treeListContainer}>\n\t\t\t<div style={{ flexGrow: 1 }}>\n\t\t\t\t<DataGrid rows={treeRows} columns={columns} pageSize={10} autoHeight />\n\t\t\t</div>\n\t\t</div>\n\t);\n}\nexport default TreeList;\n","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/group/GroupSearchForm.js",["467","468","469","470","471","472","473","474","475"],"import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Divider from '@material-ui/core/Divider';\nimport Box from '@material-ui/core/Box';\nimport TextField from '@material-ui/core/TextField';\nimport Slider from '@material-ui/core/Slider';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Paper from '@material-ui/core/Paper';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\n\nimport { getGroupsFromApi } from './actions/groups';\n\nimport useStyles from './styles/formStyle';\n\nfunction GroupSearchForm() {\n\tconst classes = useStyles();\n\tconst dispatch = useDispatch();\n\n\tconst [ formData, setFormData ] = useState({\n\t\tsearch : ''\n\t});\n\n\tconst handleChange = (evt) => {\n\t\tconst { name, value } = evt.target;\n\n\t\tsetFormData((fData) => ({\n\t\t\t...fData,\n\t\t\t[name] : value\n\t\t}));\n\t};\n\n\tconst handleSubmit = (evt) => {\n\t\tevt.preventDefault();\n\t\tsetFormData(formData);\n\n\t\tconst searchParams = {\n\t\t\tsearch : formData.search\n\t\t};\n\n\t\tfor (let field in searchParams) {\n\t\t\tif (searchParams[field] === '') {\n\t\t\t\tdelete searchParams[field];\n\t\t\t}\n\t\t}\n\n\t\tconsole.log('Searchparams', searchParams);\n\t\tdispatch(getGroupsFromApi(searchParams));\n\t};\n\n\treturn (\n\t\t<form onSubmit={handleSubmit} className={classes.form}>\n\t\t\t<Grid container>\n\t\t\t\t<Typography variant=\"h3\" gutterBottom>\n\t\t\t\t\tExplore Groups\n\t\t\t\t</Typography>\n\t\t\t\t<Grid container item xs={12}>\n\t\t\t\t\t<Grid item xs>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tid=\"search\"\n\t\t\t\t\t\t\tname=\"search\"\n\t\t\t\t\t\t\tlabel=\"Search Term\"\n\t\t\t\t\t\t\tplaceholder=\"Search Group Name...\"\n\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\tvalue={formData.search}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item xs={2}>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tSearch\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t</form>\n\t);\n}\n\nexport default GroupSearchForm;\n","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/group/GroupList.js",["476","477","478","479","480","481","482","483","484","485","486","487","488","489","490","491","492","493","494","495","496","497"],"import React, { useState, useRef, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport { DataGrid } from '@material-ui/data-grid';\n\nimport {\n\tFavoriteBorder as FavoriteBorderIcon,\n\tFavorite as FavoriteIcon\n} from '@material-ui/icons';\n\nimport { getTreesFromApi } from '../actions/trees';\nimport SelectLocationMap from '../leafletMap/SelectLocationMap';\nimport {\n\ttreesRef,\n\tuploadImagesToFirebase\n} from '../firebase/firebaseStorage';\nimport ImagesInput from '../imageHandling/ImagesInput';\nimport { addToSavedTrees, removeFromSavedTrees } from '../actions/currUser';\n\nconst useStyles = makeStyles((theme) => ({\n\troot : {\n\t\twidth                     : '100%',\n\t\tbackgroundColor           : theme.palette.background.paper,\n\t\t'& .data-grid-fav-header' : {\n\t\t\t'& .MuiDataGrid-colCellTitleContainer' : {\n\t\t\t\talignItems : 'center'\n\t\t\t}\n\t\t}\n\t}\n}));\n\nfunction DetailsLinkBtn(props) {\n\treturn (\n\t\t<Button color=\"primary\" component={Link} {...props}>\n\t\t\tShow\n\t\t</Button>\n\t);\n}\n\nconst checkTreeIdInUserFavs = (userFavTreeIds, treeId) => {\n\treturn userFavTreeIds.includes(treeId);\n};\n\nfunction GroupList({ groups }) {\n\tconst classes = useStyles();\n\tconst dispatch = useDispatch();\n\tconst { username, savedGroupIds } = useSelector((st) => st.currUser);\n\tconst groupRows = groups.map((group) => ({\n\t\t...group,\n\t\tcreated_at : new Date(\n\t\t\tgroup.created_at\n\t\t).toLocaleDateString('en-gb', {\n\t\t\tyear  : 'numeric',\n\t\t\tmonth : 'long',\n\t\t\tday   : 'numeric'\n\t\t}),\n\t\tlink       : `groups/${group.id}`\n\t}));\n\n\tconst handleUnfavoriteClick = (evt) => {\n\t\tconst groupId = parseInt(evt.currentTarget.dataset.groupId);\n\t\tdispatch(removeFromSavedTrees(username, groupId));\n\t};\n\tconst handleFavoriteClick = (evt) => {\n\t\tconst groupId = parseInt(evt.currentTarget.dataset.groupId);\n\t\tdispatch(addToSavedTrees(username, groupId));\n\t};\n\n\tconst columns = [\n\t\t{ field: 'name', headerName: 'Name', width: 200 },\n\t\t{ field: 'description', headerName: 'Description', width: 200 },\n\t\t{\n\t\t\tfield      : 'link',\n\t\t\theaderName : 'Details',\n\t\t\trenderCell : (params) => <DetailsLinkBtn to={params.value} />\n\t\t},\n\t\t{ field: 'created_at', headerName: 'Created', width: 150 }\n\t];\n\n\treturn (\n\t\t<div style={{ width: '100%' }} className={classes.root}>\n\t\t\t<DataGrid\n\t\t\t\trows={groupRows}\n\t\t\t\tcolumns={columns}\n\t\t\t\tpageSize={10}\n\t\t\t\tautoHeight\n\t\t\t/>\n\t\t</div>\n\t);\n}\nexport default GroupList;\n","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/user/CurrUserInfo.js",["498","499","500","501","502","503","504"],"import Grid from '@material-ui/core/Grid';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport profileHeaderImg from '../images/profile-page-header.jpg';\n\nconst useStyles = makeStyles((theme) => ({\n\theading             : {\n\t\tfontSize   : theme.typography.pxToRem(15),\n\t\tfontWeight : theme.typography.fontWeightRegular\n\t},\n\theaderImgBackground : {\n\t\theight             : 300,\n\t\tbackgroundImage    : `url(${profileHeaderImg})`,\n\t\tbackgroundRepeat   : 'no-repeat',\n\t\tbackgroundPosition : 'center',\n\t\tbackgroundSize     : 'cover',\n\t\tbackgroundColor    : theme.palette.secondary.dark\n\t}\n}));\n\n/**\n * Shows the current logged in user's profile. Allows user to edit\n * their information or delete their account.\n * \n * \n * If this is changed to allow users to view each other's profiles\n * in the future, then change getting user info from store and make\n * a request to the API for it. \n */\nfunction CurrUserInfo() {\n\tconst theme = useTheme();\n\tconst classes = useStyles(theme);\n\n\tconst history = useHistory();\n\n\tconst { uid, username, email, img_url, created_at, is_admin, savedTreeIds, groupIds } = useSelector(\n\t\t(st) => st.currUser\n\t);\n\n\tconst handleEdit = (evt) => {\n\t\thistory.push(`/users/${username}/edit`);\n\t};\n\n\treturn (\n\t\t<Grid container item xs={12}>\n\t\t\t<Grid container direction=\"column\">\n\t\t\t\t<Typography variant=\"h5\">User Info</Typography>\n\t\t\t\t<Typography variant=\"subtitle1\">Username: {username}</Typography>\n\t\t\t\t<Typography variant=\"subtitle1\">Email: {email}</Typography>\n\t\t\t\t<Typography variant=\"subtitle1\">\n\t\t\t\t\tJoined:{' '}\n\t\t\t\t\t{new Date(created_at).toLocaleDateString('en-gb', {\n\t\t\t\t\t\tyear  : 'numeric',\n\t\t\t\t\t\tmonth : 'long',\n\t\t\t\t\t\tday   : 'numeric'\n\t\t\t\t\t})}\n\t\t\t\t</Typography>\n\t\t\t</Grid>\n\t\t</Grid>\n\t);\n}\nexport default CurrUserInfo;\n","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/user/SignUpForm.js",["505","506","507","508","509","510","511","512","513"],"import React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { signUpUser } from '../actions/auth';\nimport { errorDisplay } from '../helpers/formErrorDisplay';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\nimport useStyles from '../styles/formStyle';\nimport SelectCoordinates from '../leafletMap/SelectCoordinates';\nimport { getUserFromApi } from '../actions/currUser';\n// TODO change geolocation request to use my location\n\nfunction SignUpForm({ submitFormData }) {\n\tconst classes = useStyles();\n\n\tconst authErrors = useSelector((st) => st.auth.error);\n\n\tconst INITIAL_FORM_DATA = {\n\t\tusername : '',\n\t\temail    : '',\n\t\tpassword : '',\n\t\timg_url  : ''\n\t};\n\tconst [ formData, setFormData ] = useState(INITIAL_FORM_DATA);\n\n\tconst handleChange = (evt) => {\n\t\tconst { name, value } = evt.target;\n\n\t\tsetFormData((fData) => ({\n\t\t\t...fData,\n\t\t\t[name] : value\n\t\t}));\n\t};\n\tconst handleSubmit = (evt) => {\n\t\tevt.preventDefault();\n\t\tsubmitFormData(formData);\n\t};\n\n\tconst handleErrorDisplay = (field) => {\n\t\treturn errorDisplay(field, authErrors);\n\t};\n\n\treturn (\n\t\t<form onSubmit={handleSubmit} className={classes.form}>\n\t\t\t<TextField\n\t\t\t\tid=\"username\"\n\t\t\t\tname=\"username\"\n\t\t\t\tlabel=\"Username\"\n\t\t\t\tonChange={handleChange}\n\t\t\t\tvalue={formData.username}\n\t\t\t\tautoComplete=\"username\"\n\t\t\t\trequired\n\t\t\t\tinputProps={{ minLength: 1, maxLength: 55 }}\n\t\t\t\terror={Boolean(handleErrorDisplay('username'))}\n\t\t\t\thelperText={handleErrorDisplay('username')}\n\t\t\t/>\n\t\t\t<TextField\n\t\t\t\tid=\"email\"\n\t\t\t\tname=\"email\"\n\t\t\t\tlabel=\"Email\"\n\t\t\t\ttype=\"email\"\n\t\t\t\tonChange={handleChange}\n\t\t\t\tvalue={formData.email}\n\t\t\t\tautoComplete=\"email\"\n\t\t\t\trequired\n\t\t\t\tinputProps={{ minLength: 6, maxLength: 60 }}\n\t\t\t\terror={Boolean(handleErrorDisplay('email'))}\n\t\t\t\thelperText={handleErrorDisplay('email')}\n\t\t\t/>\n\t\t\t<TextField\n\t\t\t\tid=\"password\"\n\t\t\t\tname=\"password\"\n\t\t\t\tlabel=\"Password\"\n\t\t\t\ttype=\"password\"\n\t\t\t\tonChange={handleChange}\n\t\t\t\tvalue={formData.password}\n\t\t\t\tautoComplete=\"password\"\n\t\t\t\trequired\n\t\t\t\tinputProps={{ minLength: 6 }}\n\t\t\t\terror={Boolean(handleErrorDisplay('password'))}\n\t\t\t\thelperText={handleErrorDisplay('password')}\n\t\t\t/>\n\n\t\t\t{/* <TextField\n\t\t\t\tid=\"img_url\"\n\t\t\t\tname=\"img_url\"\n\t\t\t\tlabel=\"Profile Image URL\"\n\t\t\t\ttype=\"url\"\n\t\t\t\tonChange={handleChange}\n\t\t\t\tvalue={formData.img_url}\n\t\t\t/> */}\n\t\t\t<Button variant=\"contained\" color=\"secondary\" type=\"submit\">\n\t\t\t\tSign Up\n\t\t\t</Button>\n\t\t</form>\n\t);\n}\nexport default SignUpForm;\n","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/user/SignInForm.js",["514","515","516","517","518","519","520"],"import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\nimport { signInUser, signOutUser } from '../actions/auth';\nimport { errorDisplay } from '../helpers/formErrorDisplay';\nimport useStyles from '../styles/formStyle';\n\nfunction SignIn({ submitFormData }) {\n\tconst classes = useStyles();\n\n\tconst authErrors = useSelector((st) => st.auth.error);\n\n\tconst INITIAL_FORM_DATA = {\n\t\temail    : '',\n\t\tpassword : ''\n\t};\n\tconst [ formData, setFormData ] = useState(INITIAL_FORM_DATA);\n\n\tconst handleChange = (evt) => {\n\t\tconst { name, value } = evt.target;\n\n\t\tsetFormData((fData) => ({\n\t\t\t...fData,\n\t\t\t[name] : value\n\t\t}));\n\t};\n\tconst handleSubmit = (evt) => {\n\t\tevt.preventDefault();\n\t\tsubmitFormData(formData);\n\t};\n\tconst handleErrorDisplay = (field) => {\n\t\treturn errorDisplay(field, authErrors);\n\t};\n\n\treturn (\n\t\t<form onSubmit={handleSubmit} className={classes.form}>\n\t\t\t<TextField\n\t\t\t\tid=\"email\"\n\t\t\t\tname=\"email\"\n\t\t\t\tlabel=\"Email\"\n\t\t\t\ttype=\"email\"\n\t\t\t\tonChange={handleChange}\n\t\t\t\tvalue={formData.email}\n\t\t\t\tautoComplete=\"email\"\n\t\t\t\trequired\n\t\t\t\tinputProps={{ minLength: 6, maxLength: 60 }}\n\t\t\t\terror={Boolean(handleErrorDisplay('email'))}\n\t\t\t\thelperText={handleErrorDisplay('email')}\n\t\t\t/>\n\t\t\t<TextField\n\t\t\t\tid=\"password\"\n\t\t\t\tname=\"password\"\n\t\t\t\tlabel=\"Password\"\n\t\t\t\ttype=\"password\"\n\t\t\t\tonChange={handleChange}\n\t\t\t\tvalue={formData.password}\n\t\t\t\tautoComplete=\"password\"\n\t\t\t\trequired\n\t\t\t\terror={Boolean(handleErrorDisplay('password'))}\n\t\t\t\thelperText={handleErrorDisplay('password')}\n\t\t\t/>\n\t\t\t<Button color=\"secondary\" variant=\"contained\" type=\"submit\">\n\t\t\t\tSign In\n\t\t\t</Button>\n\t\t</form>\n\t);\n}\nexport default SignIn;\n","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/group/GroupTabPanel.js",["521","522"],"import React, { useState, useRef, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useParams } from 'react-router-dom';\n\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Paper from '@material-ui/core/Paper';\n\nimport LeafletMap from '../leafletMap/LeafletMap';\nimport TreeList from '../tree/TreeList';\nimport GroupTreeEditTable from './GroupTreeEditTable';\nimport { getTreeFromApi } from '../actions/trees';\nimport GroupMembersPanel from './GroupMembersPanel';\n\nconst useStyles = makeStyles((theme) => {\n\treturn {\n\t\ttabPanel : {\n\t\t\tflexGrow        : 1,\n\t\t\tbackgroundColor : 'white',\n\t\t\t// backgroundColor : theme.palette.background.paper,\n\t\t\twidth           : '100%'\n\t\t},\n\t\tbackdrop : {\n\t\t\tzIndex : theme.zIndex.drawer + 1,\n\t\t\tcolor  : '#fff'\n\t\t}\n\t};\n});\n\nfunction TabPanel(props) {\n\tconst { children, value, index, ...other } = props;\n\n\treturn (\n\t\t<div\n\t\t\trole=\"tabpanel\"\n\t\t\thidden={value !== index}\n\t\t\tid={`group-tabpanel-${index}`}\n\t\t\taria-labelledby={`group-tab-${index}`}\n\t\t\t{...other}\n\t\t>\n\t\t\t{value === index && <Box p={3}>{children}</Box>}\n\t\t</div>\n\t);\n}\n\nfunction a11yProps(index) {\n\treturn {\n\t\tid              : `group-tab-${index}`,\n\t\t'aria-controls' : `group-tabpanel-${index}`\n\t};\n}\n\nfunction GroupTabPanel({ group, isCreator, imageUrls }) {\n\tconst theme = useTheme();\n\tconst classes = useStyles(theme);\n\tconst dispatch = useDispatch();\n\tconst [ value, setValue ] = useState(0);\n\tconst [ open, setOpen ] = useState(false);\n\tconst currUserUid = useSelector((st) => st.currUser.uid);\n\n\t// check if currUser is a moderator of this group\n\tconst isModerator = Boolean(\n\t\tgroup.members.find((member) => member.user_id === currUserUid && member.is_moderator === true)\n\t);\n\n\t// Get any group trees that are already in store\n\tlet groupTrees = useSelector((st) => [ ...group.trees ].map((id) => st.trees.entities[id]));\n\n\t// Get array of any group tree ids that were not already in store\n\tconst remainingSelectionTreeIds = group.trees.filter((id) => !groupTrees.map((tree) => tree.id).includes(id));\n\tconsole.log('GroupTapPanal remainingSelectionTree', remainingSelectionTreeIds);\n\n\tconsole.log('GroupTapPanal groupTrees', groupTrees);\n\t// Get any other group tree that is not in store from API\n\tuseEffect(\n\t\t() => {\n\t\t\tremainingSelectionTreeIds.forEach((id) => {\n\t\t\t\tconst tree = dispatch(getTreeFromApi(id));\n\t\t\t\tgroupTrees.push(tree);\n\t\t\t});\n\t\t},\n\t\t[ dispatch, groupTrees, remainingSelectionTreeIds ]\n\t);\n\n\tconst handleChange = (event, newValue) => {\n\t\tsetValue(newValue);\n\t};\n\n\tconst displayTreeSelection = () => {\n\t\tsetOpen(true);\n\t};\n\tconst closeTreeSelection = (evt) => {\n\t\tsetOpen(false);\n\t};\n\treturn (\n\t\t<div className={classes.tabPanel}>\n\t\t\t<AppBar position=\"static\">\n\t\t\t\t<Tabs value={value} onChange={handleChange} variant=\"fullWidth\" aria-label=\"group tabs\" centered>\n\t\t\t\t\t<Tab label=\"Trees\" {...a11yProps(0)} />\n\t\t\t\t\t<Tab label=\"Album\" {...a11yProps(1)} />\n\t\t\t\t\t<Tab label=\"Members\" {...a11yProps(2)} />\n\t\t\t\t</Tabs>\n\t\t\t</AppBar>\n\t\t\t<TabPanel value={value} index={0}>\n\t\t\t\t<Grid container direction=\"column\">\n\t\t\t\t\t<Grid container item xs={12} justify=\"center\">\n\t\t\t\t\t\t{isModerator && (\n\t\t\t\t\t\t\t<Button color=\"primary\" onClick={displayTreeSelection} style={{ marginBottom: 20 }}>\n\t\t\t\t\t\t\t\tEdit Group Trees\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<Backdrop className={classes.backdrop} open={open} onClick={closeTreeSelection}>\n\t\t\t\t\t\t\t<Box\n\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\tbackgroundColor : 'white',\n\t\t\t\t\t\t\t\t\twidth           : '85vw',\n\t\t\t\t\t\t\t\t\tmaxWidth        : 1500,\n\t\t\t\t\t\t\t\t\theight          : 650,\n\t\t\t\t\t\t\t\t\tzIndex          : 10,\n\t\t\t\t\t\t\t\t\tcolor           : 'white'\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tonClick={(evt) => {\n\t\t\t\t\t\t\t\t\tevt.stopPropagation();\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<GroupTreeEditTable group={group} groupTrees={groupTrees} />\n\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t</Backdrop>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid container item xs={12} justify=\"center\">\n\t\t\t\t\t\t{groupTrees.length > 0 ? (\n\t\t\t\t\t\t\t<Grid container item xs={12}>\n\t\t\t\t\t\t\t\t<Grid item xs={12} xl={6}>\n\t\t\t\t\t\t\t\t\t<Paper elevation={3}>\n\t\t\t\t\t\t\t\t\t\t<LeafletMap trees={groupTrees} />\n\t\t\t\t\t\t\t\t\t</Paper>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t<Grid container item xs={12} xl={6}>\n\t\t\t\t\t\t\t\t\t<Box\n\t\t\t\t\t\t\t\t\t\tp={2}\n\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\theight : `${120 + Math.min(groupTrees.length, 10) * 52}px`,\n\t\t\t\t\t\t\t\t\t\t\twidth  : '100%'\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<TreeList trees={groupTrees} />\n\t\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<Typography align=\"center\">\n\t\t\t\t\t\t\t\tNo trees within this group yet. Only moderators can edit trees of this group.\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t</TabPanel>\n\t\t\t<TabPanel value={value} index={1}>\n\t\t\t\tAlbum\n\t\t\t</TabPanel>\n\t\t\t<TabPanel value={value} index={2}>\n\t\t\t\t<GroupMembersPanel isCreator={isCreator} isModerator={isModerator} group={group} />\n\t\t\t</TabPanel>\n\t\t</div>\n\t);\n}\nexport default GroupTabPanel;\n","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/group/GroupTreeEditTable.js",["523"],"import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport TreeList from '../tree/TreeList';\nimport { getTreeFromApi } from '../actions/trees';\n\nfunction GroupTreeEditTable({ group, groupTrees }) {\n\tconst dispatch = useDispatch();\n\n\tconst currUserFavTreeIds = useSelector((st) => st.currUser.savedTreeIds);\n\n\t// Get any trees that are already in store\n\tlet userFavTrees = useSelector((st) => currUserFavTreeIds.map((id) => st.trees.entities[id]));\n\n\t// Get array of any tree ids that were not already in store\n\tconst remainingSelectionTreeIds = currUserFavTreeIds.filter(\n\t\t(id) => !userFavTrees.map((tree) => tree.id).includes(id)\n\t);\n\t// console.log('GroupTreeEditTable userFavTrees', userFavTrees);\n\t// console.log('GroupTreeEditTable remainingSelectionTrees', remainingSelectionTreeIds);\n\n\t// Get any other user fav or group tree that is not in store from API\n\tuseEffect(() => {\n\t\tremainingSelectionTreeIds.forEach((id) => {\n\t\t\tconst tree = dispatch(getTreeFromApi(id));\n\t\t\tuserFavTrees.push(tree);\n\t\t});\n\t}, []);\n\tconst treesSet = new Set([ ...groupTrees, ...userFavTrees ]);\n\t// console.log('GroupTreeEditTable treesSet', treesSet);\n\n\treturn <TreeList trees={[ ...treesSet ]} group={group} />;\n}\nexport default GroupTreeEditTable;\n","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/group/GroupFormBasicFields.js",["524","525","526","527","528","529","530","531","532"],"import React, { useState, useRef, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\n\nimport Typography from '@material-ui/core/Typography';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\n\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Slider from '@material-ui/core/Slider';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Button from '@material-ui/core/Button';\n\nimport useStyles from '../styles/formStyle';\nimport { errorDisplay } from '../helpers/formErrorDisplay';\n\nfunction GroupFormBasicFields({ errors, formData, onFormChange, edit = false }) {\n\tconst classes = useStyles();\n\tconst groupError = useSelector((st) => st.groups.error);\n\tconsole.log(groupError);\n\tconst handleChange = (evt) => {\n\t\tonFormChange(evt.target);\n\t};\n\n\tconst handleErrorDisplay = (field) => {\n\t\treturn errorDisplay(field, groupError);\n\t};\n\n\treturn (\n\t\t<Grid container className={classes.form}>\n\t\t\t<TextField\n\t\t\t\tid=\"name\"\n\t\t\t\tname=\"name\"\n\t\t\t\tlabel=\"Group Name\"\n\t\t\t\tplaceholder=\"Clallam Tree Alliance\"\n\t\t\t\tonChange={handleChange}\n\t\t\t\tvalue={formData.name}\n\t\t\t\trequired={!edit}\n\t\t\t\terror={Boolean(handleErrorDisplay('group_name'))}\n\t\t\t\thelperText={handleErrorDisplay('group_name')}\n\t\t\t/>\n\t\t\t<TextField\n\t\t\t\tid=\"description\"\n\t\t\t\tname=\"description\"\n\t\t\t\tlabel=\"Description\"\n\t\t\t\tmultiline\n\t\t\t\tinputProps={{ maxLength: 2000 }}\n\t\t\t\tplaceholder=\"What is the main purpose of your group?\"\n\t\t\t\tonChange={handleChange}\n\t\t\t\tvalue={formData.description}\n\t\t\t/>\n\n\t\t\t{/* TODO add in the future */}\n\t\t\t{/* <FormControlLabel\n\t\t\t\tcontrol={\n\t\t\t\t\t<Checkbox\n\t\t\t\t\t\tid=\"is_public\"\n\t\t\t\t\t\tname=\"is_public\"\n\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\tchecked={formData.is_public}\n\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t/>\n\t\t\t\t}\n\t\t\t\tlabel=\"Do you want this group to be visable for others to join?\"\n\t\t\t/> */}\n\t\t</Grid>\n\t);\n}\nexport default GroupFormBasicFields;\n","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/imageHandling/ImagesInput.js",["533","534","535"],"import React, { useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\n\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Input from '@material-ui/core/Input';\nimport Button from '@material-ui/core/Button';\nimport Box from '@material-ui/core/Box';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\n\nimport { storageRef } from '../firebase/firebaseStorage';\n\n\nconst useStyles = makeStyles((theme) => {\n\treturn {\n\t\timgPreview    : { height: 100, width: 'auto' },\n\t\timgsContainer : {\n\t\t\t'& .selected' : {\n\t\t\t\tbackgroundColor : theme.palette.primary.accent\n\t\t\t}\n\t\t},\n\t\timgPaper      : {\n\t\t\tjustifyContent : 'center',\n\t\t\talignItems     : 'center',\n\t\t\tpadding        : 4,\n\t\t\tpaddingBottom  : 0\n\t\t}\n\t};\n});\n\nfunction ImagesInput({ allowMultiple = true, onImageFilesChange }) {\n\tconst theme = useTheme();\n\tconst classes = useStyles(theme);\n\tconst [ imageUrls, setImageUrls ] = useState([]);\n\tconst [ fileList, setFileList ] = useState([]);\n\n\t// Lift files to parent component\n\tuseEffect(\n\t\t() => {\n\t\t\tconsole.log('useEffect fileList', fileList);\n\t\t\tonImageFilesChange(fileList);\n\t\t},\n\t\t[ fileList, onImageFilesChange ]\n\t);\n\n\tconst readUploadedFileAsDataUrl = (inputFile) => {\n\t\tconst temporaryFileReader = new FileReader();\n\n\t\treturn new Promise((resolve, reject) => {\n\t\t\ttemporaryFileReader.onerror = () => {\n\t\t\t\ttemporaryFileReader.abort();\n\t\t\t\treject(new DOMException('Problem parsing input file.'));\n\t\t\t};\n\n\t\t\ttemporaryFileReader.onload = () => {\n\t\t\t\tresolve(temporaryFileReader.result);\n\t\t\t};\n\t\t\ttemporaryFileReader.readAsDataURL(inputFile);\n\t\t});\n\t};\n\n\tconst getImageUrlsFromFiles = async (files) => {\n\t\tconsole.log('getImageUrlsFromFiles', files);\n\t\tlet urls = [];\n\n\t\tfor (let i = 0; i < files.length; i++) {\n\t\t\tconst url = await readUploadedFileAsDataUrl(files[i]);\n\t\t\turls.push(url);\n\t\t}\n\n\t\tsetImageUrls(urls);\n\t};\n\n\tconst handleChange = async (evt) => {\n\t\tconst files = evt.target.files;\n\t\tconst filesArr = Array.from(files);\n\t\tconsole.log('filesArr', filesArr);\n\n\t\tgetImageUrlsFromFiles(files);\n\t\tsetFileList((fileList) => {\n\t\t\treturn filesArr;\n\t\t});\n\t};\n\n\tconst handlePrimaryChange = (evt) => {\n\t\tconst targetUrl = evt.currentTarget.children[0].src;\n\t\tconst idx = imageUrls.findIndex((url) => url === targetUrl);\n\t\tconsole.log('handlePrimaryChange idx', idx);\n\n\t\tsetImageUrls((imageUrls) => {\n\t\t\tconst filteredUrls = imageUrls.filter(\n\t\t\t\t(url) => url !== targetUrl\n\t\t\t);\n\t\t\tfilteredUrls.unshift(targetUrl);\n\t\t\treturn filteredUrls;\n\t\t});\n\n\t\tconsole.log('handlePrimaryChange fileList', fileList);\n\t\tsetFileList((fileList) => {\n\t\t\treturn [\n\t\t\t\tfileList[idx],\n\t\t\t\t...fileList.slice(0, idx),\n\t\t\t\t...fileList.slice(idx + 1)\n\t\t\t];\n\t\t});\n\t\tconsole.log('handlePrimaryChange fileList post', fileList);\n\t};\n\n\treturn (\n\t\t<Grid container className=\"ImagesInput\">\n\t\t\t<Grid item>\n\t\t\t\t<Input\n\t\t\t\t\taccept=\"image/*\"\n\t\t\t\t\tstyle={{ display: 'none' }}\n\t\t\t\t\tid=\"file-upload\"\n\t\t\t\t\ttype=\"file\"\n\t\t\t\t\tinputProps={{ multiple: allowMultiple }}\n\t\t\t\t\tonChange={handleChange}\n\t\t\t\t/>\n\t\t\t\t<Button\n\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\thtmlFor=\"file-upload\"\n\t\t\t\t\tcomponent=\"label\"\n\t\t\t\t>\n\t\t\t\t\t{allowMultiple ? 'Choose Images' : 'Choose Image'}\n\t\t\t\t</Button>\n\t\t\t\t{allowMultiple && (\n\t\t\t\t\t<Typography>\n\t\t\t\t\t\tIf selecting multiple images, click the one you\n\t\t\t\t\t\twant to be the primary image.\n\t\t\t\t\t</Typography>\n\t\t\t\t)}\n\t\t\t</Grid>\n\t\t\t<Grid\n\t\t\t\tcontainer\n\t\t\t\titem\n\t\t\t\txs={12}\n\t\t\t\tjustify=\"center\"\n\t\t\t\tclassName={classes.imgsContainer}\n\t\t\t>\n\t\t\t\t{imageUrls.map((url, idx) => (\n\t\t\t\t\t<Box key={url} mr={1}>\n\t\t\t\t\t\t<Paper\n\t\t\t\t\t\t\televation={3}\n\t\t\t\t\t\t\tonClick={handlePrimaryChange}\n\t\t\t\t\t\t\tclassName={\n\t\t\t\t\t\t\t\timageUrls[0] === url ? (\n\t\t\t\t\t\t\t\t\t`${classes.imgPaper} selected`\n\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\tclasses.imgPaper\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\tclassName={classes.imgPreview}\n\t\t\t\t\t\t\t\tsrc={url}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Paper>\n\t\t\t\t\t</Box>\n\t\t\t\t))}\n\t\t\t</Grid>\n\t\t</Grid>\n\t);\n}\nexport default React.memo(ImagesInput);\n","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/leafletMap/SelectCoordinates.js",["536","537","538","539","540","541","542","543","544","545","546","547"],"import React, { useState, useRef, useEffect } from 'react';\nimport {\n\tMapContainer,\n\tuseMap,\n\tuseMapEvents,\n\tMarker,\n\tPopup,\n\tTileLayer\n} from 'react-leaflet';\nimport {\n\tGeoSearchControl,\n\tOpenStreetMapProvider\n} from 'leaflet-geosearch';\nimport 'leaflet-geosearch/dist/geosearch.css';\n\n\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Slider from '@material-ui/core/Slider';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Button from '@material-ui/core/Button';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport LeafletMap from './LeafletMap';\nimport useStyles from '../styles/formStyle';\n\nfunction SelectCoordinates({\n\tformData,\n\tonCoordinatesChange,\n\tonMapCoordinatesChange\n}) {\n\tconst classes = useStyles();\n\tconst didMountRef = useRef(false);\n\tconst [ showSelectMap, setShowSelectMap ] = useState(true);\n\n\t// Handles change to coordinates from text input\n\tconst handleChange = (evt) => {\n\t\tonCoordinatesChange(evt.target);\n\t};\n\n\t// Scroll to map when shown for selecting tree location\n\t// Ref to map toogle button, toggle dispays Leaflet map\n\t// and changes button text. Only runs on rerenders after first\n\tconst mapToggleRef = useRef(null);\n\tuseEffect(\n\t\t() => {\n\t\t\tif (\n\t\t\t\tshowSelectMap &&\n\t\t\t\tmapToggleRef.current &&\n\t\t\t\tdidMountRef.current\n\t\t\t) {\n\t\t\t\tmapToggleRef.current.scrollIntoView({\n\t\t\t\t\tbehavior : 'smooth'\n\t\t\t\t});\n\t\t\t}\n\t\t\telse {\n\t\t\t\tdidMountRef.current = true;\n\t\t\t}\n\t\t},\n\t\t[ showSelectMap ]\n\t);\n\n\tconst toggleSelectMap = () => {\n\t\tsetShowSelectMap(!showSelectMap);\n\t};\n\tconst selectMapBtn = () => {\n\t\treturn showSelectMap ? (\n\t\t\t<Typography>Hide Map</Typography>\n\t\t) : (\n\t\t\t<Typography>Select Via Map</Typography>\n\t\t);\n\t};\n\tconst setDisplayMapStyle = () => {\n\t\treturn showSelectMap ? {} : { display: 'none' };\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t<Grid item container ref={mapToggleRef}>\n\t\t\t\t<Grid item xs={12} md={6}>\n\t\t\t\t\t<TextField\n\t\t\t\t\t\tid=\"lat\"\n\t\t\t\t\t\tname=\"lat\"\n\t\t\t\t\t\tlabel=\"Latitude\"\n\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\tinputProps={{ step: 'any', min: -90, max: 90 }}\n\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\tInputLabelProps={{ shrink: true }}\n\t\t\t\t\t\tplaceholder=\"-90 to 90 (eg. 48.10045)\"\n\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\tvalue={formData.lat}\n\t\t\t\t\t\trequired\n\t\t\t\t\t/>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item xs={12} md={6}>\n\t\t\t\t\t<TextField\n\t\t\t\t\t\tid=\"lng\"\n\t\t\t\t\t\tname=\"lng\"\n\t\t\t\t\t\tlabel=\"Longitude\"\n\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\tinputProps={{ step: 'any', min: -180, max: 180 }}\n\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\tInputLabelProps={{ shrink: true }}\n\t\t\t\t\t\tplaceholder=\"-180 to 180 (eg. -123.45316)\"\n\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\tvalue={formData.lng}\n\t\t\t\t\t\trequired\n\t\t\t\t\t/>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t\t<Button\n\t\t\t\tvariant=\"outlined\"\n\t\t\t\tcolor=\"secondary\"\n\t\t\t\tfullWidth\n\t\t\t\tonClick={toggleSelectMap}\n\t\t\t>\n\t\t\t\t{selectMapBtn()}\n\t\t\t</Button>\n\t\t\t<div\n\t\t\t\tclassName={classes.mapContainer}\n\t\t\t\tstyle={setDisplayMapStyle()}\n\t\t\t>\n\t\t\t\t<LeafletMap\n\t\t\t\t\tonMapCoordinatesChange={onMapCoordinatesChange}\n\t\t\t\t\tuseGetClickCoordinates={true}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\nexport default React.memo(SelectCoordinates);\n","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/imageHandling/Carousel.js",["548"],"import React, { useState } from 'react';\n\nimport {\n\tNavigateNext as NavigateNextIcon,\n\tNavigateBefore as NavigateBeforeIcon\n} from '@material-ui/icons/';\nimport Card from '@material-ui/core/Card';\nimport Fade from '@material-ui/core/Fade';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport IconButton from '@material-ui/core/IconButton';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n\troot  : {\n\t\twidth        : '100%',\n\t\tborderRadius : '0px'\n\t},\n\n\tmedia : {\n\t\theight         : 600,\n\t\tdisplay        : 'flex',\n\t\tjustifyContent : 'space-between',\n\t\talignItems     : 'center'\n\t}\n});\n\nfunction Carousel({ imageUrls }) {\n\tconst classes = useStyles();\n\tconst [ cardIdx, setCardIdx ] = useState(0);\n\tconst total = imageUrls.length;\n\tconst leftIconHidden = cardIdx === 0 ? true : false;\n\tconst rightIconHidden = cardIdx === total - 1 ? true : false;\n\tconst goForward = () => setCardIdx(cardIdx + 1);\n\tconst goBack = () => setCardIdx(cardIdx - 1);\n\n\treturn (\n\t\t<div className=\"Carousel\">\n\t\t\t<Card className={classes.root}>\n\t\t\t\t<CardMedia\n\t\t\t\t\tclassName={classes.media}\n\t\t\t\t\timage={imageUrls[cardIdx]}\n\t\t\t\t>\n\t\t\t\t\t{!leftIconHidden ? (\n\t\t\t\t\t\t<IconButton onClick={goBack}>\n\t\t\t\t\t\t\t<NavigateBeforeIcon\n\t\t\t\t\t\t\t\tfontSize=\"large\"\n\t\t\t\t\t\t\t\thtmlColor=\"rgba(255,255,255, 0.9)\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<div />\n\t\t\t\t\t)}\n\t\t\t\t\t{!rightIconHidden ? (\n\t\t\t\t\t\t<IconButton onClick={goForward}>\n\t\t\t\t\t\t\t<NavigateNextIcon\n\t\t\t\t\t\t\t\tfontSize=\"large\"\n\t\t\t\t\t\t\t\thtmlColor=\"rgba(255,255,255, 0.9)\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<div />\n\t\t\t\t\t)}\n\t\t\t\t</CardMedia>\n\t\t\t</Card>\n\t\t</div>\n\t);\n}\n\nexport default Carousel;\n","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/comment/CommentsContainer.js",["549","550","551","552","553","554","555","556","557","558","559","560","561","562","563"],"import React, { useState, useRef, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Link as RouterLink, useParams } from 'react-router-dom';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport Link from '@material-ui/core/Link';\nimport Box from '@material-ui/core/Box';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport Card from '@material-ui/core/Card';\nimport Divider from '@material-ui/core/Divider';\nimport CardContent from '@material-ui/core/CardContent';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport SendIcon from '@material-ui/icons/Send';\n\nimport { getTreeFromApi, getTreesFromApi } from '../actions/trees';\nimport LeafletMap from '../leafletMap/LeafletMap';\nimport ImagesInput from '../imageHandling/ImagesInput';\nimport Carousel from '../imageHandling/Carousel';\nimport Comment from './Comment';\n\nimport TreeMarkableApi from '../TreeMarkableApi';\n\nconst useStyles = makeStyles((theme) => ({\n\tuserAvatar : {\n\t\tbackgroundColor : theme.palette.primary.light\n\t}\n}));\n\n/**\n * Component accepts a string type ('groups' or 'trees') and an id\n * and returns the comments associated with that item in the\n * database. \n */\n\nfunction CommentsContainer({ type, id, isCreatorOrModerator }) {\n\tconsole.log('CommentsContainer', type, id);\n\n\tconst classes = useStyles();\n\tconst INITIAL_STATE = {\n\t\ttext : '',\n\t\ttype,\n\t\tid\n\t};\n\tconst [ formData, setFormData ] = useState(INITIAL_STATE);\n\tconst [ isLoading, setIsLoading ] = useState(true);\n\tconst [ commentDeleted, setCommentDeleted ] = useState(false);\n\tconst [ comments, setComments ] = useState([]);\n\tconst username = useSelector((st) => st.currUser.username);\n\n\tuseEffect(\n\t\t() => {\n\t\t\tconst getComments = async (type, id) => {\n\t\t\t\tconst comments = await TreeMarkableApi.getComments(type, id);\n\t\t\t\tconsole.log('getComments - comments', comments);\n\t\t\t\tsetComments(comments);\n\t\t\t\tsetIsLoading(false);\n\t\t\t\tsetCommentDeleted(false);\n\t\t\t};\n\t\t\tgetComments(type, id);\n\t\t},\n\t\t[ isLoading, type, id, commentDeleted ]\n\t);\n\n\tconst handleDeleteComment = () => {\n\t\tsetCommentDeleted(true);\n\t};\n\n\tconst handleChange = (evt) => {\n\t\tconst { name, value } = evt.target;\n\n\t\tsetFormData((fData) => ({\n\t\t\t...fData,\n\t\t\t[name] : value\n\t\t}));\n\t};\n\n\tconst handleSubmit = async (evt) => {\n\t\tevt.preventDefault();\n\t\tconsole.log('Comment submit - text', formData);\n\n\t\tconst res = await TreeMarkableApi.createComment(formData);\n\t\tconsole.log('res', res);\n\t\tsetFormData(INITIAL_STATE);\n\t\tsetIsLoading(true);\n\t};\n\n\treturn (\n\t\t<Grid container className=\"CommentsContainer\">\n\t\t\t<Typography variant=\"h4\">Comments</Typography>\n\t\t\t<Grid container item xs={12}>\n\t\t\t\t<Box mt={2} mb={2} style={{ width: '100%' }}>\n\t\t\t\t\t{comments.length > 0 ? (\n\t\t\t\t\t\tcomments.map((comment) => (\n\t\t\t\t\t\t\t<Comment\n\t\t\t\t\t\t\t\tkey={`comment-${comment.id}`}\n\t\t\t\t\t\t\t\tonDelete={handleDeleteComment}\n\t\t\t\t\t\t\t\tcomment={comment}\n\t\t\t\t\t\t\t\tusername={username}\n\t\t\t\t\t\t\t\tisCreatorOrModerator={isCreatorOrModerator}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t))\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<Typography>No Comments</Typography>\n\t\t\t\t\t)}\n\t\t\t\t</Box>\n\t\t\t</Grid>\n\t\t\t{username ? (\n\t\t\t\t<Grid container item>\n\t\t\t\t\t<Grid container alignItems=\"center\" spacing={2} item xs={12} wrap=\"nowrap\">\n\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t<Avatar className={classes.userAvatar}>{username[0]}</Avatar>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t<form id=\"comment\" onSubmit={handleSubmit}>\n\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\tid=\"text\"\n\t\t\t\t\t\t\t\t\tname=\"text\"\n\t\t\t\t\t\t\t\t\tplaceholder=\"Add comment...\"\n\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\tvalue={formData.text}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</form>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t<IconButton form=\"comment\" type=\"submit\">\n\t\t\t\t\t\t\t\t<SendIcon />\n\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t) : (\n\t\t\t\t<Typography>\n\t\t\t\t\t<Link component={RouterLink} to=\"/signup\">\n\t\t\t\t\t\tSign Up\n\t\t\t\t\t</Link>{' '}\n\t\t\t\t\tor{' '}\n\t\t\t\t\t<Link component={RouterLink} to=\"/signin\">\n\t\t\t\t\t\tSign In\n\t\t\t\t\t</Link>{' '}\n\t\t\t\t\tto add comments.\n\t\t\t\t</Typography>\n\t\t\t)}\n\t\t</Grid>\n\t);\n}\nexport default CommentsContainer;\n","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/comment/Comment.js",["564","565","566","567","568","569","570","571","572","573","574","575","576","577"],"/home/justin/Documents/Springboard/SECT/tree-markable/client/src/iconBtns/EditIconBtn.js",["578","579","580","581","582","583","584","585","586","587","588","589","590","591"],"import React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport {\n\tInfo as InfoIcon,\n\tAdd as AddIcon,\n\tNature as NatureIcon,\n\tGroup as GroupIcon,\n\tExplore as ExploreIcon,\n\tHome as HomeIcon,\n\tMessage as MessageIcon,\n\tCheck as CheckIcon,\n\tFavoriteBorder as FavoriteBorderIcon,\n\tEdit as EditIcon\n} from '@material-ui/icons';\n\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nimport useStyles from '../styles/markerCard';\n\nfunction EditIconBtn({ type, id }) {\n\tconst classes = useStyles();\n\tconst history = useHistory();\n\n\tconst handleClick = () => {\n\t\thistory.push(`/${type}/${id}/edit`);\n\t};\n\n\treturn (\n\t\t<Tooltip title={'Edit'}>\n\t\t\t<IconButton onClick={handleClick}>\n\t\t\t\t<EditIcon />\n\t\t\t</IconButton>\n\t\t</Tooltip>\n\t);\n}\nexport default EditIconBtn;\n","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/iconBtns/FollowGroupIconBtn.js",[],"/home/justin/Documents/Springboard/SECT/tree-markable/client/src/leafletMap/TreePopup.js",["592","593"],"import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\nimport { Nature as NatureIcon } from '@material-ui/icons';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport IconButton from '@material-ui/core/IconButton';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Box from '@material-ui/core/Box';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nimport useStyles from '../styles/markerCard';\n\nimport FavoriteIconBtn from '../iconBtns/FavoriteIconBtn';\n\nimport {\n\ttreesRef,\n\tdownloadImageUrlsFromFirebase\n} from '../firebase/firebaseStorage';\n\nfunction TreePopup({ tree }) {\n\tconst classes = useStyles();\n\n\tconst [ isLoading, setIsLoading ] = useState(true);\n\tconst [ imageUrls, setImageUrls ] = useState({\n\t\tprimary : '',\n\t\talbum   : []\n\t});\n\tconst isAuthenticated = useSelector((st) => st.auth.authenticated);\n\tconst dispatch = useDispatch();\n\n\t// Get Image Urls to display tree image, if it exists\n\tuseEffect(\n\t\t() => {\n\t\t\tconst getImageUrls = async (collectionRef, id) => {\n\t\t\t\tconst imgUrls = await downloadImageUrlsFromFirebase(\n\t\t\t\t\tcollectionRef,\n\t\t\t\t\tid\n\t\t\t\t);\n\t\t\t\tif (imgUrls) {\n\t\t\t\t\tsetImageUrls(imgUrls);\n\t\t\t\t}\n\t\t\t\tsetIsLoading(false);\n\t\t\t};\n\n\t\t\tif (isLoading) {\n\t\t\t\tgetImageUrls(treesRef, tree.id);\n\t\t\t}\n\t\t},\n\t\t[ isLoading, dispatch ]\n\t);\n\n\t// If tree has a primary image, show it on popup. Show\n\t// loading circle while retrieving image from storage.\n\t// Show nothing if no image is saved in storage\n\tconst showPrimaryImage = () => {\n\t\tif (isLoading) {\n\t\t\treturn (\n\t\t\t\t<Box display=\"flex\" justifyContent=\"center\">\n\t\t\t\t\t<CircularProgress />\n\t\t\t\t</Box>\n\t\t\t);\n\t\t}\n\t\telse if (imageUrls.primary === '') return '';\n\t\telse {\n\t\t\treturn (\n\t\t\t\t<CardMedia\n\t\t\t\t\tclassName={classes.media}\n\t\t\t\t\timage={imageUrls.primary}\n\t\t\t\t\ttitle={`${tree.name}`}\n\t\t\t\t/>\n\t\t\t);\n\t\t}\n\t};\n\n\treturn (\n\t\t<Card className={classes.root} elevation={0}>\n\t\t\t{showPrimaryImage()}\n\t\t\t<CardContent className={classes.content}>\n\t\t\t\t<Typography gutterBottom variant=\"h5\" component=\"h2\">\n\t\t\t\t\t{tree.name}\n\t\t\t\t</Typography>\n\t\t\t\t<Typography variant=\"body2\" color=\"textSecondary\">\n\t\t\t\t\t{tree.common_name}\n\t\t\t\t</Typography>\n\t\t\t\t<Typography\n\t\t\t\t\tvariant=\"body2\"\n\t\t\t\t\tcolor=\"textSecondary\"\n\t\t\t\t\tcomponent=\"i\"\n\t\t\t\t>\n\t\t\t\t\t{tree.scientific_name}\n\t\t\t\t</Typography>\n\t\t\t\t<Typography\n\t\t\t\t\tvariant=\"caption\"\n\t\t\t\t\tcolor=\"textSecondary\"\n\t\t\t\t\tcomponent=\"p\"\n\t\t\t\t>\n\t\t\t\t\t{`(${tree.geolocation.y.toFixed(\n\t\t\t\t\t\t5\n\t\t\t\t\t)}, ${tree.geolocation.x.toFixed(5)})`}\n\t\t\t\t</Typography>\n\t\t\t</CardContent>\n\t\t\t<CardActions className={classes.actions}>\n\t\t\t\t<Grid container justify=\"center\">\n\t\t\t\t\t<Grid container justify=\"center\" item xs={6}>\n\t\t\t\t\t\t<Tooltip title=\"Details\">\n\t\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\t\tcomponent={Link}\n\t\t\t\t\t\t\t\tto={`/trees/${tree.id}`}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<NatureIcon color=\"primary\" />\n\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t{isAuthenticated && (\n\t\t\t\t\t\t<Grid container justify=\"center\" item xs={6}>\n\t\t\t\t\t\t\t<FavoriteIconBtn treeId={tree.id} />\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t)}\n\t\t\t\t</Grid>\n\t\t\t</CardActions>\n\t\t</Card>\n\t);\n}\nexport default TreePopup;\n","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/iconBtns/FavoriteIconBtn.js",["594","595","596","597","598","599","600","601","602","603"],"import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport {\n\tInfo as InfoIcon,\n\tAdd as AddIcon,\n\tNature as NatureIcon,\n\tGroup as GroupIcon,\n\tExplore as ExploreIcon,\n\tHome as HomeIcon,\n\tMessage as MessageIcon,\n\tCheck as CheckIcon,\n\tFavoriteBorder as FavoriteBorderIcon,\n\tFavorite as FavoriteIcon\n} from '@material-ui/icons';\n\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nimport useStyles from '../styles/markerCard';\nimport { addToSavedTrees, removeFromSavedTrees } from '../actions/currUser';\n\nfunction FavoriteIconBtn({ treeId }) {\n\tconst classes = useStyles();\n\tconst [ isFav, setIsFav ] = useState(null);\n\tconst username = useSelector((st) => st.currUser.username);\n\tconst savedTreeIds = useSelector((st) => st.currUser.savedTreeIds);\n\tconst dispatch = useDispatch();\n\n\tuseEffect(\n\t\t() => {\n\t\t\tconst checkFavStatus = (treeId, savedTreeIds) => {\n\t\t\t\tsetIsFav(savedTreeIds.includes(treeId));\n\t\t\t};\n\t\t\tcheckFavStatus(treeId, savedTreeIds);\n\t\t},\n\t\t[ savedTreeIds, treeId ]\n\t);\n\n\tconst handleClick = async () => {\n\t\tif (isFav) {\n\t\t\tdispatch(removeFromSavedTrees(username, treeId));\n\t\t}\n\t\telse {\n\t\t\tdispatch(addToSavedTrees(username, treeId));\n\t\t}\n\t\tsetIsFav(!isFav);\n\t};\n\n\tif (!username) {\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<Tooltip title={isFav ? 'Unfavorite' : 'Favorite'}>\n\t\t\t<IconButton onClick={handleClick}>\n\t\t\t\t<FavoriteIcon htmlColor={isFav ? 'red' : 'pink'} />\n\t\t\t</IconButton>\n\t\t</Tooltip>\n\t);\n}\nexport default FavoriteIconBtn;\n","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/iconBtns/EditTreeInGroupIconBtn.js",["604"],"import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { Add as AddIcon, Check as CheckIcon } from '@material-ui/icons';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { useTheme } from '@material-ui/core/styles';\n\nimport { addTreeToGroup, removeTreeFromGroup } from '../actions/groups';\n\nfunction EditTreeInGroupIconBtn({ group, treeId }) {\n\tconst theme = useTheme();\n\tconst [ treeInGroup, setTreeInGroup ] = useState(null);\n\n\tconst dispatch = useDispatch();\n\n\tuseEffect(\n\t\t() => {\n\t\t\tconst checkTreeInGroup = (group, treeId) => {\n\t\t\t\tsetTreeInGroup(group.trees.includes(treeId));\n\t\t\t};\n\t\t\tcheckTreeInGroup(group, treeId);\n\t\t},\n\t\t[ group, treeId ]\n\t);\n\n\tconst handleClick = async () => {\n\t\tif (treeInGroup) {\n\t\t\tdispatch(removeTreeFromGroup(group.id, treeId));\n\t\t}\n\t\telse {\n\t\t\tdispatch(addTreeToGroup(group.id, treeId));\n\t\t}\n\t\tsetTreeInGroup(!treeInGroup);\n\t};\n\n\treturn (\n\t\t<Tooltip title={treeInGroup ? 'Remove Tree' : 'Add Tree'}>\n\t\t\t<IconButton onClick={handleClick}>\n\t\t\t\t{treeInGroup ? (\n\t\t\t\t\t<CheckIcon htmlColor={theme.palette.primary.light} />\n\t\t\t\t) : (\n\t\t\t\t\t<AddIcon htmlColor={theme.palette.primary.light} />\n\t\t\t\t)}\n\t\t\t</IconButton>\n\t\t</Tooltip>\n\t);\n}\nexport default EditTreeInGroupIconBtn;\n","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/leafletMap/LeafletMap.js",[],"/home/justin/Documents/Springboard/SECT/tree-markable/client/src/group/EditGroup.js",["605","606","607","608","609","610"],"import React, { useState, useEffect } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\n\nimport Divider from '@material-ui/core/Divider';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\n\nimport TreeMarkableApi from '../TreeMarkableApi';\nimport GroupFormBasicFields from './GroupFormBasicFields';\nimport { groupsRef, uploadImagesToFirebase } from '../firebase/firebaseStorage';\nimport ImagesInput from '../imageHandling/ImagesInput';\nimport { updateGroupInApi } from '../actions/groups';\n\nconst useStyles = makeStyles({\n\tinnerContent : {\n\t\tpadding : 20\n\t},\n\tform         : {\n\t\tdisplay       : 'flex',\n\t\tflexDirection : 'column',\n\t\t'& div'       : {\n\t\t\tmarginBottom : 10\n\t\t}\n\t}\n});\n\nfunction EditGroup() {\n\tconst classes = useStyles();\n\tconst dispatch = useDispatch();\n\tconst { id } = useParams();\n\tconst history = useHistory();\n\tconst status = useSelector((st) => st.groups.status);\n\tconst error = useSelector((st) => st.groups.error);\n\tconst INITIAL_GROUP_FORM_DATA = {\n\t\tname        : '',\n\t\tdescription : '',\n\t\tis_public   : true\n\t};\n\tconst [ groupFormData, setGroupFormData ] = useState(INITIAL_GROUP_FORM_DATA);\n\tconst [ formErrors, setFormErrors ] = useState({ name: false });\n\n\tuseEffect(() => {\n\t\tconsole.log('edit group', status);\n\t\tif (status === 'success') {\n\t\t\thistory.push(`/groups/${id}`);\n\t\t}\n\t\tif (error) {\n\t\t}\n\t});\n\n\tconst handleGroupFormChange = (data) => {\n\t\tlet { name, value } = data;\n\t\tif (name === 'is_public') {\n\t\t\tvalue = data.checked;\n\t\t}\n\n\t\tsetGroupFormData((fData) => ({\n\t\t\t...fData,\n\t\t\t[name] : value\n\t\t}));\n\t};\n\n\t// On form submit, convert data to type expected by server\n\t// and make POST request to create new group\n\tconst handleSubmit = async (evt) => {\n\t\tevt.preventDefault();\n\n\t\tlet editGroup = { ...groupFormData };\n\n\t\tfor (let field in editGroup) {\n\t\t\tif (editGroup[field] === '') {\n\t\t\t\tdelete editGroup[field];\n\t\t\t}\n\t\t}\n\n\t\tconsole.log('edit group', editGroup);\n\t\tdispatch(updateGroupInApi(id, editGroup));\n\t};\n\n\tconst handleCancel = () => {\n\t\thistory.push(`/groups/${id}`);\n\t};\n\n\treturn (\n\t\t<div className={classes.innerContent}>\n\t\t\t<Typography variant=\"h4\" gutterBottom>\n\t\t\t\tEdit Group\n\t\t\t</Typography>\n\t\t\t<form onSubmit={handleSubmit} className={classes.form}>\n\t\t\t\t<GroupFormBasicFields\n\t\t\t\t\tformData={groupFormData}\n\t\t\t\t\terrors={formErrors}\n\t\t\t\t\tonFormChange={handleGroupFormChange}\n\t\t\t\t\tedit={true}\n\t\t\t\t/>\n\n\t\t\t\t<Grid container item justify=\"space-between\" style={{ paddingLeft: 40, paddingRight: 40 }}>\n\t\t\t\t\t<Button onClick={handleCancel} variant=\"contained\" color=\"secondary\">\n\t\t\t\t\t\tGo Back\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Button variant=\"contained\" color=\"primary\" type=\"submit\">\n\t\t\t\t\t\tSave Edits\n\t\t\t\t\t</Button>\n\t\t\t\t</Grid>\n\t\t\t</form>\n\t\t</div>\n\t);\n}\nexport default EditGroup;\n","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/imageHandling/UploadImagesToFirebase.js",["611","612","613","614","615","616","617","618"],"/home/justin/Documents/Springboard/SECT/tree-markable/client/src/group/GroupMembersPanel.js",["619","620","621","622","623","624","625","626","627","628","629","630","631","632","633","634","635","636","637"],"import React, { useState, useRef, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useParams } from 'react-router-dom';\n\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Paper from '@material-ui/core/Paper';\n\nimport LeafletMap from '../leafletMap/LeafletMap';\nimport TreeList from '../tree/TreeList';\nimport UserList from './UserList';\nimport GroupTreeEditTable from './GroupTreeEditTable';\nimport { getTreeFromApi } from '../actions/trees';\n\nconst useStyles = makeStyles((theme) => {\n\treturn {\n\t\ttabPanel : {\n\t\t\tflexGrow        : 1,\n\t\t\tbackgroundColor : 'white',\n\t\t\t// backgroundColor : theme.palette.background.paper,\n\t\t\twidth           : '100%'\n\t\t},\n\t\tbackdrop : {\n\t\t\tzIndex : theme.zIndex.drawer + 1,\n\t\t\tcolor  : '#fff'\n\t\t}\n\t};\n});\n\nfunction GroupMembersPanel({ isCreator, isModerator, group }) {\n\tconsole.log('GroupMembersPanel - Start');\n\tconst theme = useTheme();\n\tconst classes = useStyles(theme);\n\tconst dispatch = useDispatch();\n\tconst groupStatus = useSelector((st) => st.groups.status);\n\n\tconsole.log('GroupMembersPanel', group);\n\n\tconst admin = group.members.find((member) => member.user_id === group.creator);\n\n\tconst moderators = group.members.filter(\n\t\t(member) => member.is_moderator === true && member.user_id !== group.creator\n\t);\n\n\tconst members = group.members.filter((member) => member.is_moderator === false);\n\n\tconsole.log('GroupMembersPanel', admin, Boolean(moderators), members);\n\n\t//add remove moderator\n\treturn (\n\t\t<div>\n\t\t\t<Typography gutterBottom variant=\"h6\">\n\t\t\t\tCreator\n\t\t\t</Typography>\n\t\t\t<UserList groupId={group.id} users={[ admin ]} />\n\n\t\t\t<Typography gutterBottom variant=\"h6\">\n\t\t\t\tModerators\n\t\t\t</Typography>\n\t\t\t{moderators.length ? (\n\t\t\t\t<UserList\n\t\t\t\t\tisCreator={isCreator}\n\t\t\t\t\tisModerator={isModerator}\n\t\t\t\t\tgroupId={group.id}\n\t\t\t\t\tusers={moderators}\n\t\t\t\t\ttype={'mods'}\n\t\t\t\t/>\n\t\t\t) : (\n\t\t\t\t<Typography gutterBottom>No moderators in this group.</Typography>\n\t\t\t)}\n\n\t\t\t<Typography gutterBottom variant=\"h6\">\n\t\t\t\tMembers\n\t\t\t</Typography>\n\t\t\t{members.length ? (\n\t\t\t\t<UserList\n\t\t\t\t\tisCreator={isCreator}\n\t\t\t\t\tisModerator={isModerator}\n\t\t\t\t\tgroupId={group.id}\n\t\t\t\t\tusers={members}\n\t\t\t\t\ttype={'members'}\n\t\t\t\t/>\n\t\t\t) : (\n\t\t\t\t<Typography gutterBottom>No members in this group.</Typography>\n\t\t\t)}\n\t\t</div>\n\t);\n}\nexport default GroupMembersPanel;\n","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/group/UserList.js",["638","639","640","641","642"],"import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\n\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\n\nimport { addModToGroup, removeMemberFromGroup, removeModFromGroup } from '../actions/groups';\n\nconst useStyles = makeStyles((theme) => ({\n\tbutton   : {\n\t\tmarginTop    : 5,\n\t\tmarginBottom : 5\n\t},\n\tuserInfo : {\n\t\tdisplay    : 'flex',\n\t\talignItems : 'center'\n\t},\n\tlistItem : {\n\t\tdisplay                      : 'flex',\n\t\tflexDirection                : 'column',\n\t\talignItems                   : 'flex-start',\n\n\t\t[theme.breakpoints.up('md')]: {\n\t\t\tdisplay        : 'flex',\n\t\t\tflexDirection  : 'row',\n\t\t\tjustifyContent : 'space-between'\n\t\t}\n\t}\n\t// style={{ display: 'flex', flexDirection: 'column', alignItems: 'flex-start' }}\n}));\n\n/**\n * List of provided array of users. Showing user pic/icon, Name, and \n * optional additions such as add/remove user button.\n */\nfunction UserList({ isCreator, isModerator, groupId, users, type }) {\n\tconst theme = useTheme();\n\tconst dispatch = useDispatch();\n\tconst classes = useStyles(theme);\n\tconst isAuthorized = useSelector((st) => st.auth.authenticated);\n\n\tconst actionBtns = (type, userId) => {\n\t\tif (!isAuthorized) return null;\n\t\tif (isCreator && type === 'mods') {\n\t\t\treturn (\n\t\t\t\t<Button\n\t\t\t\t\tclassName={classes.button}\n\t\t\t\t\tsize=\"small\"\n\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\tonClick={() => dispatch(removeModFromGroup(groupId, userId))}\n\t\t\t\t>\n\t\t\t\t\tRemove As Mod\n\t\t\t\t</Button>\n\t\t\t);\n\t\t}\n\t\telse if (type === 'members')\n\t\t\treturn (\n\t\t\t\t<div>\n\t\t\t\t\t{isModerator && (\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tclassName={classes.button}\n\t\t\t\t\t\t\tstyle={{ marginRight: 5 }}\n\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\tonClick={() => dispatch(removeMemberFromGroup(groupId, userId))}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tRemove Member\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t)}\n\t\t\t\t\t{isCreator && (\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tclassName={classes.button}\n\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\tonClick={() => dispatch(addModToGroup(groupId, userId))}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tAdd As Mod\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t);\n\t\telse return null;\n\t};\n\n\treturn (\n\t\t<List dense={true}>\n\t\t\t{users.map((user) => (\n\t\t\t\t<ListItem key={user.username} className={classes.listItem} divider>\n\t\t\t\t\t<div className={classes.userInfo}>\n\t\t\t\t\t\t<ListItemAvatar>\n\t\t\t\t\t\t\t<Avatar>{user.username[0]}</Avatar>\n\t\t\t\t\t\t</ListItemAvatar>\n\t\t\t\t\t\t<ListItemText primary={user.username} />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div style={{ display: 'flex' }}>{actionBtns(type, user.user_id)}</div>\n\t\t\t\t</ListItem>\n\t\t\t))}\n\t\t</List>\n\t);\n}\nexport default UserList;\n","/home/justin/Documents/Springboard/SECT/tree-markable/client/src/About.js",["643","644"],{"ruleId":"645","replacedBy":"646"},{"ruleId":"647","replacedBy":"648"},{"ruleId":"649","severity":1,"message":"650","line":15,"column":8,"nodeType":"651","messageId":"652","endLine":15,"endColumn":15},{"ruleId":"649","severity":1,"message":"653","line":1,"column":17,"nodeType":"651","messageId":"652","endLine":1,"endColumn":26},{"ruleId":"649","severity":1,"message":"654","line":23,"column":8,"nodeType":"651","messageId":"652","endLine":23,"endColumn":15},{"ruleId":"649","severity":1,"message":"655","line":28,"column":8,"nodeType":"651","messageId":"652","endLine":28,"endColumn":21},{"ruleId":"649","severity":1,"message":"656","line":2,"column":10,"nodeType":"651","messageId":"652","endLine":2,"endColumn":14},{"ruleId":"649","severity":1,"message":"657","line":2,"column":16,"nodeType":"651","messageId":"652","endLine":2,"endColumn":26},{"ruleId":"649","severity":1,"message":"658","line":5,"column":8,"nodeType":"651","messageId":"652","endLine":5,"endColumn":14},{"ruleId":"649","severity":1,"message":"659","line":6,"column":8,"nodeType":"651","messageId":"652","endLine":6,"endColumn":13},{"ruleId":"649","severity":1,"message":"660","line":8,"column":8,"nodeType":"651","messageId":"652","endLine":8,"endColumn":15},{"ruleId":"649","severity":1,"message":"661","line":9,"column":8,"nodeType":"651","messageId":"652","endLine":9,"endColumn":14},{"ruleId":"649","severity":1,"message":"662","line":12,"column":8,"nodeType":"651","messageId":"652","endLine":12,"endColumn":18},{"ruleId":"649","severity":1,"message":"663","line":13,"column":8,"nodeType":"651","messageId":"652","endLine":13,"endColumn":12},{"ruleId":"649","severity":1,"message":"664","line":14,"column":8,"nodeType":"651","messageId":"652","endLine":14,"endColumn":16},{"ruleId":"649","severity":1,"message":"665","line":15,"column":8,"nodeType":"651","messageId":"652","endLine":15,"endColumn":20},{"ruleId":"649","severity":1,"message":"666","line":16,"column":8,"nodeType":"651","messageId":"652","endLine":16,"endColumn":20},{"ruleId":"649","severity":1,"message":"667","line":17,"column":8,"nodeType":"651","messageId":"652","endLine":17,"endColumn":16},{"ruleId":"649","severity":1,"message":"668","line":18,"column":8,"nodeType":"651","messageId":"652","endLine":18,"endColumn":12},{"ruleId":"649","severity":1,"message":"669","line":20,"column":10,"nodeType":"651","messageId":"652","endLine":20,"endColumn":18},{"ruleId":"649","severity":1,"message":"670","line":21,"column":19,"nodeType":"651","messageId":"652","endLine":21,"endColumn":36},{"ruleId":"649","severity":1,"message":"671","line":23,"column":8,"nodeType":"651","messageId":"652","endLine":23,"endColumn":15},{"ruleId":"649","severity":1,"message":"672","line":24,"column":8,"nodeType":"651","messageId":"652","endLine":24,"endColumn":18},{"ruleId":"649","severity":1,"message":"673","line":28,"column":10,"nodeType":"651","messageId":"652","endLine":28,"endColumn":21},{"ruleId":"649","severity":1,"message":"674","line":37,"column":8,"nodeType":"651","messageId":"652","endLine":37,"endColumn":18},{"ruleId":"649","severity":1,"message":"675","line":38,"column":8,"nodeType":"651","messageId":"652","endLine":38,"endColumn":16},{"ruleId":"649","severity":1,"message":"676","line":39,"column":20,"nodeType":"651","messageId":"652","endLine":39,"endColumn":31},{"ruleId":"649","severity":1,"message":"677","line":40,"column":8,"nodeType":"651","messageId":"652","endLine":40,"endColumn":12},{"ruleId":"649","severity":1,"message":"678","line":8,"column":50,"nodeType":"651","messageId":"652","endLine":8,"endColumn":61},{"ruleId":"649","severity":1,"message":"656","line":2,"column":10,"nodeType":"651","messageId":"652","endLine":2,"endColumn":14},{"ruleId":"649","severity":1,"message":"661","line":6,"column":8,"nodeType":"651","messageId":"652","endLine":6,"endColumn":14},{"ruleId":"649","severity":1,"message":"679","line":5,"column":8,"nodeType":"651","messageId":"652","endLine":5,"endColumn":11},{"ruleId":"649","severity":1,"message":"657","line":2,"column":16,"nodeType":"651","messageId":"652","endLine":2,"endColumn":26},{"ruleId":"649","severity":1,"message":"659","line":6,"column":8,"nodeType":"651","messageId":"652","endLine":6,"endColumn":13},{"ruleId":"649","severity":1,"message":"660","line":8,"column":8,"nodeType":"651","messageId":"652","endLine":8,"endColumn":15},{"ruleId":"649","severity":1,"message":"680","line":11,"column":8,"nodeType":"651","messageId":"652","endLine":11,"endColumn":12},{"ruleId":"649","severity":1,"message":"663","line":14,"column":8,"nodeType":"651","messageId":"652","endLine":14,"endColumn":12},{"ruleId":"649","severity":1,"message":"664","line":15,"column":8,"nodeType":"651","messageId":"652","endLine":15,"endColumn":16},{"ruleId":"649","severity":1,"message":"665","line":16,"column":8,"nodeType":"651","messageId":"652","endLine":16,"endColumn":20},{"ruleId":"649","severity":1,"message":"666","line":17,"column":8,"nodeType":"651","messageId":"652","endLine":17,"endColumn":20},{"ruleId":"649","severity":1,"message":"681","line":10,"column":2,"nodeType":"651","messageId":"652","endLine":10,"endColumn":22},{"ruleId":"649","severity":1,"message":"682","line":2,"column":10,"nodeType":"651","messageId":"652","endLine":2,"endColumn":16},{"ruleId":"649","severity":1,"message":"683","line":2,"column":18,"nodeType":"651","messageId":"652","endLine":2,"endColumn":24},{"ruleId":"649","severity":1,"message":"684","line":2,"column":26,"nodeType":"651","messageId":"652","endLine":2,"endColumn":33},{"ruleId":"649","severity":1,"message":"685","line":2,"column":35,"nodeType":"651","messageId":"652","endLine":2,"endColumn":48},{"ruleId":"649","severity":1,"message":"678","line":2,"column":50,"nodeType":"651","messageId":"652","endLine":2,"endColumn":61},{"ruleId":"649","severity":1,"message":"686","line":11,"column":8,"nodeType":"651","messageId":"652","endLine":11,"endColumn":15},{"ruleId":"649","severity":1,"message":"687","line":12,"column":8,"nodeType":"651","messageId":"652","endLine":12,"endColumn":22},{"ruleId":"649","severity":1,"message":"688","line":13,"column":8,"nodeType":"651","messageId":"652","endLine":13,"endColumn":14},{"ruleId":"649","severity":1,"message":"689","line":1,"column":27,"nodeType":"651","messageId":"652","endLine":1,"endColumn":33},{"ruleId":"649","severity":1,"message":"653","line":1,"column":35,"nodeType":"651","messageId":"652","endLine":1,"endColumn":44},{"ruleId":"649","severity":1,"message":"690","line":4,"column":22,"nodeType":"651","messageId":"652","endLine":4,"endColumn":30},{"ruleId":"649","severity":1,"message":"680","line":6,"column":8,"nodeType":"651","messageId":"652","endLine":6,"endColumn":12},{"ruleId":"649","severity":1,"message":"691","line":7,"column":8,"nodeType":"651","messageId":"652","endLine":7,"endColumn":17},{"ruleId":"649","severity":1,"message":"692","line":8,"column":8,"nodeType":"651","messageId":"652","endLine":8,"endColumn":14},{"ruleId":"649","severity":1,"message":"667","line":9,"column":8,"nodeType":"651","messageId":"652","endLine":9,"endColumn":16},{"ruleId":"649","severity":1,"message":"693","line":1,"column":17,"nodeType":"651","messageId":"652","endLine":1,"endColumn":25},{"ruleId":"649","severity":1,"message":"689","line":1,"column":27,"nodeType":"651","messageId":"652","endLine":1,"endColumn":33},{"ruleId":"649","severity":1,"message":"653","line":1,"column":35,"nodeType":"651","messageId":"652","endLine":1,"endColumn":44},{"ruleId":"649","severity":1,"message":"672","line":3,"column":8,"nodeType":"651","messageId":"652","endLine":3,"endColumn":18},{"ruleId":"649","severity":1,"message":"692","line":9,"column":8,"nodeType":"651","messageId":"652","endLine":9,"endColumn":14},{"ruleId":"649","severity":1,"message":"661","line":11,"column":8,"nodeType":"651","messageId":"652","endLine":11,"endColumn":14},{"ruleId":"649","severity":1,"message":"694","line":14,"column":8,"nodeType":"651","messageId":"652","endLine":14,"endColumn":23},{"ruleId":"649","severity":1,"message":"695","line":15,"column":8,"nodeType":"651","messageId":"652","endLine":15,"endColumn":25},{"ruleId":"649","severity":1,"message":"696","line":17,"column":2,"nodeType":"651","messageId":"652","endLine":17,"endColumn":10},{"ruleId":"649","severity":1,"message":"697","line":18,"column":2,"nodeType":"651","messageId":"652","endLine":18,"endColumn":24},{"ruleId":"649","severity":1,"message":"698","line":20,"column":8,"nodeType":"651","messageId":"652","endLine":20,"endColumn":19},{"ruleId":"649","severity":1,"message":"653","line":1,"column":27,"nodeType":"651","messageId":"652","endLine":1,"endColumn":36},{"ruleId":"649","severity":1,"message":"699","line":12,"column":10,"nodeType":"651","messageId":"652","endLine":12,"endColumn":19},{"ruleId":"649","severity":1,"message":"697","line":12,"column":21,"nodeType":"651","messageId":"652","endLine":12,"endColumn":43},{"ruleId":"649","severity":1,"message":"700","line":14,"column":10,"nodeType":"651","messageId":"652","endLine":14,"endColumn":29},{"ruleId":"649","severity":1,"message":"689","line":1,"column":27,"nodeType":"651","messageId":"652","endLine":1,"endColumn":33},{"ruleId":"649","severity":1,"message":"680","line":5,"column":8,"nodeType":"651","messageId":"652","endLine":5,"endColumn":12},{"ruleId":"649","severity":1,"message":"701","line":6,"column":8,"nodeType":"651","messageId":"652","endLine":6,"endColumn":19},{"ruleId":"649","severity":1,"message":"672","line":7,"column":8,"nodeType":"651","messageId":"652","endLine":7,"endColumn":18},{"ruleId":"649","severity":1,"message":"691","line":8,"column":8,"nodeType":"651","messageId":"652","endLine":8,"endColumn":17},{"ruleId":"649","severity":1,"message":"663","line":9,"column":8,"nodeType":"651","messageId":"652","endLine":9,"endColumn":12},{"ruleId":"649","severity":1,"message":"664","line":10,"column":8,"nodeType":"651","messageId":"652","endLine":10,"endColumn":16},{"ruleId":"649","severity":1,"message":"665","line":11,"column":8,"nodeType":"651","messageId":"652","endLine":11,"endColumn":20},{"ruleId":"649","severity":1,"message":"666","line":12,"column":8,"nodeType":"651","messageId":"652","endLine":12,"endColumn":20},{"ruleId":"649","severity":1,"message":"661","line":13,"column":8,"nodeType":"651","messageId":"652","endLine":13,"endColumn":14},{"ruleId":"649","severity":1,"message":"689","line":1,"column":27,"nodeType":"651","messageId":"652","endLine":1,"endColumn":33},{"ruleId":"649","severity":1,"message":"702","line":3,"column":8,"nodeType":"651","messageId":"652","endLine":3,"endColumn":22},{"ruleId":"649","severity":1,"message":"680","line":6,"column":8,"nodeType":"651","messageId":"652","endLine":6,"endColumn":12},{"ruleId":"649","severity":1,"message":"701","line":7,"column":8,"nodeType":"651","messageId":"652","endLine":7,"endColumn":19},{"ruleId":"649","severity":1,"message":"672","line":8,"column":8,"nodeType":"651","messageId":"652","endLine":8,"endColumn":18},{"ruleId":"649","severity":1,"message":"691","line":9,"column":8,"nodeType":"651","messageId":"652","endLine":9,"endColumn":17},{"ruleId":"649","severity":1,"message":"663","line":10,"column":8,"nodeType":"651","messageId":"652","endLine":10,"endColumn":12},{"ruleId":"649","severity":1,"message":"664","line":11,"column":8,"nodeType":"651","messageId":"652","endLine":11,"endColumn":16},{"ruleId":"649","severity":1,"message":"665","line":12,"column":8,"nodeType":"651","messageId":"652","endLine":12,"endColumn":20},{"ruleId":"649","severity":1,"message":"666","line":13,"column":8,"nodeType":"651","messageId":"652","endLine":13,"endColumn":20},{"ruleId":"649","severity":1,"message":"661","line":14,"column":8,"nodeType":"651","messageId":"652","endLine":14,"endColumn":14},{"ruleId":"649","severity":1,"message":"659","line":15,"column":8,"nodeType":"651","messageId":"652","endLine":15,"endColumn":13},{"ruleId":"649","severity":1,"message":"658","line":17,"column":8,"nodeType":"651","messageId":"652","endLine":17,"endColumn":14},{"ruleId":"649","severity":1,"message":"703","line":18,"column":8,"nodeType":"651","messageId":"652","endLine":18,"endColumn":12},{"ruleId":"649","severity":1,"message":"704","line":19,"column":8,"nodeType":"651","messageId":"652","endLine":19,"endColumn":11},{"ruleId":"649","severity":1,"message":"679","line":20,"column":8,"nodeType":"651","messageId":"652","endLine":20,"endColumn":11},{"ruleId":"649","severity":1,"message":"689","line":1,"column":27,"nodeType":"651","messageId":"652","endLine":1,"endColumn":33},{"ruleId":"649","severity":1,"message":"660","line":8,"column":8,"nodeType":"651","messageId":"652","endLine":8,"endColumn":15},{"ruleId":"649","severity":1,"message":"705","line":14,"column":8,"nodeType":"651","messageId":"652","endLine":14,"endColumn":17},{"ruleId":"649","severity":1,"message":"706","line":17,"column":26,"nodeType":"651","messageId":"652","endLine":17,"endColumn":41},{"ruleId":"649","severity":1,"message":"689","line":1,"column":27,"nodeType":"651","messageId":"652","endLine":1,"endColumn":33},{"ruleId":"649","severity":1,"message":"653","line":1,"column":35,"nodeType":"651","messageId":"652","endLine":1,"endColumn":44},{"ruleId":"649","severity":1,"message":"680","line":7,"column":8,"nodeType":"651","messageId":"652","endLine":7,"endColumn":12},{"ruleId":"649","severity":1,"message":"691","line":8,"column":8,"nodeType":"651","messageId":"652","endLine":8,"endColumn":17},{"ruleId":"649","severity":1,"message":"692","line":9,"column":8,"nodeType":"651","messageId":"652","endLine":9,"endColumn":14},{"ruleId":"649","severity":1,"message":"667","line":10,"column":8,"nodeType":"651","messageId":"652","endLine":10,"endColumn":16},{"ruleId":"649","severity":1,"message":"694","line":14,"column":8,"nodeType":"651","messageId":"652","endLine":14,"endColumn":23},{"ruleId":"649","severity":1,"message":"707","line":20,"column":10,"nodeType":"651","messageId":"652","endLine":20,"endColumn":33},{"ruleId":"649","severity":1,"message":"689","line":1,"column":27,"nodeType":"651","messageId":"652","endLine":1,"endColumn":33},{"ruleId":"649","severity":1,"message":"659","line":8,"column":8,"nodeType":"651","messageId":"652","endLine":8,"endColumn":13},{"ruleId":"649","severity":1,"message":"679","line":9,"column":8,"nodeType":"651","messageId":"652","endLine":9,"endColumn":11},{"ruleId":"649","severity":1,"message":"664","line":10,"column":8,"nodeType":"651","messageId":"652","endLine":10,"endColumn":16},{"ruleId":"649","severity":1,"message":"665","line":11,"column":8,"nodeType":"651","messageId":"652","endLine":11,"endColumn":20},{"ruleId":"649","severity":1,"message":"666","line":12,"column":8,"nodeType":"651","messageId":"652","endLine":12,"endColumn":20},{"ruleId":"649","severity":1,"message":"661","line":13,"column":8,"nodeType":"651","messageId":"652","endLine":13,"endColumn":14},{"ruleId":"649","severity":1,"message":"708","line":15,"column":27,"nodeType":"651","messageId":"652","endLine":15,"endColumn":43},{"ruleId":"649","severity":1,"message":"695","line":16,"column":8,"nodeType":"651","messageId":"652","endLine":16,"endColumn":25},{"ruleId":"649","severity":1,"message":"698","line":17,"column":8,"nodeType":"651","messageId":"652","endLine":17,"endColumn":19},{"ruleId":"649","severity":1,"message":"709","line":18,"column":8,"nodeType":"651","messageId":"652","endLine":18,"endColumn":16},{"ruleId":"649","severity":1,"message":"710","line":23,"column":8,"nodeType":"651","messageId":"652","endLine":23,"endColumn":18},{"ruleId":"649","severity":1,"message":"693","line":1,"column":17,"nodeType":"651","messageId":"652","endLine":1,"endColumn":25},{"ruleId":"649","severity":1,"message":"691","line":8,"column":8,"nodeType":"651","messageId":"652","endLine":8,"endColumn":17},{"ruleId":"649","severity":1,"message":"661","line":9,"column":8,"nodeType":"651","messageId":"652","endLine":9,"endColumn":14},{"ruleId":"649","severity":1,"message":"673","line":11,"column":22,"nodeType":"651","messageId":"652","endLine":11,"endColumn":33},{"ruleId":"649","severity":1,"message":"711","line":12,"column":10,"nodeType":"651","messageId":"652","endLine":12,"endColumn":22},{"ruleId":"649","severity":1,"message":"712","line":12,"column":8,"nodeType":"651","messageId":"652","endLine":12,"endColumn":20},{"ruleId":"649","severity":1,"message":"693","line":1,"column":17,"nodeType":"651","messageId":"652","endLine":1,"endColumn":25},{"ruleId":"649","severity":1,"message":"713","line":7,"column":10,"nodeType":"651","messageId":"652","endLine":7,"endColumn":20},{"ruleId":"649","severity":1,"message":"691","line":10,"column":8,"nodeType":"651","messageId":"652","endLine":10,"endColumn":17},{"ruleId":"649","severity":1,"message":"661","line":11,"column":8,"nodeType":"651","messageId":"652","endLine":11,"endColumn":14},{"ruleId":"649","severity":1,"message":"711","line":14,"column":10,"nodeType":"651","messageId":"652","endLine":14,"endColumn":22},{"ruleId":"649","severity":1,"message":"714","line":17,"column":8,"nodeType":"651","messageId":"652","endLine":17,"endColumn":25},{"ruleId":"649","severity":1,"message":"715","line":18,"column":10,"nodeType":"651","messageId":"652","endLine":18,"endColumn":24},{"ruleId":"716","severity":1,"message":"717","line":37,"column":3,"nodeType":"718","endLine":37,"endColumn":32,"suggestions":"719"},{"ruleId":"649","severity":1,"message":"720","line":2,"column":30,"nodeType":"651","messageId":"652","endLine":2,"endColumn":39},{"ruleId":"649","severity":1,"message":"665","line":10,"column":8,"nodeType":"651","messageId":"652","endLine":10,"endColumn":20},{"ruleId":"649","severity":1,"message":"659","line":12,"column":8,"nodeType":"651","messageId":"652","endLine":12,"endColumn":13},{"ruleId":"649","severity":1,"message":"721","line":15,"column":8,"nodeType":"651","messageId":"652","endLine":15,"endColumn":22},{"ruleId":"649","severity":1,"message":"722","line":16,"column":8,"nodeType":"651","messageId":"652","endLine":16,"endColumn":14},{"ruleId":"649","severity":1,"message":"660","line":18,"column":8,"nodeType":"651","messageId":"652","endLine":18,"endColumn":15},{"ruleId":"649","severity":1,"message":"723","line":60,"column":10,"nodeType":"651","messageId":"652","endLine":60,"endColumn":13},{"ruleId":"649","severity":1,"message":"724","line":60,"column":25,"nodeType":"651","messageId":"652","endLine":60,"endColumn":30},{"ruleId":"649","severity":1,"message":"725","line":60,"column":32,"nodeType":"651","messageId":"652","endLine":60,"endColumn":39},{"ruleId":"649","severity":1,"message":"726","line":60,"column":41,"nodeType":"651","messageId":"652","endLine":60,"endColumn":51},{"ruleId":"649","severity":1,"message":"727","line":60,"column":53,"nodeType":"651","messageId":"652","endLine":60,"endColumn":61},{"ruleId":"649","severity":1,"message":"713","line":3,"column":10,"nodeType":"651","messageId":"652","endLine":3,"endColumn":20},{"ruleId":"649","severity":1,"message":"660","line":8,"column":8,"nodeType":"651","messageId":"652","endLine":8,"endColumn":15},{"ruleId":"649","severity":1,"message":"679","line":9,"column":8,"nodeType":"651","messageId":"652","endLine":9,"endColumn":11},{"ruleId":"649","severity":1,"message":"692","line":11,"column":8,"nodeType":"651","messageId":"652","endLine":11,"endColumn":14},{"ruleId":"649","severity":1,"message":"659","line":15,"column":8,"nodeType":"651","messageId":"652","endLine":15,"endColumn":13},{"ruleId":"649","severity":1,"message":"662","line":8,"column":8,"nodeType":"651","messageId":"652","endLine":8,"endColumn":18},{"ruleId":"649","severity":1,"message":"728","line":11,"column":28,"nodeType":"651","messageId":"652","endLine":11,"endColumn":46},{"ruleId":"649","severity":1,"message":"729","line":16,"column":10,"nodeType":"651","messageId":"652","endLine":16,"endColumn":25},{"ruleId":"649","severity":1,"message":"730","line":16,"column":27,"nodeType":"651","messageId":"652","endLine":16,"endColumn":47},{"ruleId":"649","severity":1,"message":"675","line":45,"column":8,"nodeType":"651","messageId":"652","endLine":45,"endColumn":16},{"ruleId":"649","severity":1,"message":"713","line":3,"column":10,"nodeType":"651","messageId":"652","endLine":3,"endColumn":20},{"ruleId":"649","severity":1,"message":"731","line":7,"column":8,"nodeType":"651","messageId":"652","endLine":7,"endColumn":15},{"ruleId":"649","severity":1,"message":"660","line":8,"column":8,"nodeType":"651","messageId":"652","endLine":8,"endColumn":15},{"ruleId":"649","severity":1,"message":"679","line":9,"column":8,"nodeType":"651","messageId":"652","endLine":9,"endColumn":11},{"ruleId":"649","severity":1,"message":"692","line":11,"column":8,"nodeType":"651","messageId":"652","endLine":11,"endColumn":14},{"ruleId":"649","severity":1,"message":"667","line":12,"column":8,"nodeType":"651","messageId":"652","endLine":12,"endColumn":16},{"ruleId":"649","severity":1,"message":"732","line":14,"column":8,"nodeType":"651","messageId":"652","endLine":14,"endColumn":16},{"ruleId":"649","severity":1,"message":"659","line":15,"column":8,"nodeType":"651","messageId":"652","endLine":15,"endColumn":13},{"ruleId":"649","severity":1,"message":"733","line":16,"column":8,"nodeType":"651","messageId":"652","endLine":16,"endColumn":24},{"ruleId":"649","severity":1,"message":"693","line":1,"column":17,"nodeType":"651","messageId":"652","endLine":1,"endColumn":25},{"ruleId":"649","severity":1,"message":"689","line":1,"column":27,"nodeType":"651","messageId":"652","endLine":1,"endColumn":33},{"ruleId":"649","severity":1,"message":"653","line":1,"column":35,"nodeType":"651","messageId":"652","endLine":1,"endColumn":44},{"ruleId":"649","severity":1,"message":"680","line":6,"column":8,"nodeType":"651","messageId":"652","endLine":6,"endColumn":12},{"ruleId":"649","severity":1,"message":"672","line":7,"column":8,"nodeType":"651","messageId":"652","endLine":7,"endColumn":18},{"ruleId":"649","severity":1,"message":"691","line":8,"column":8,"nodeType":"651","messageId":"652","endLine":8,"endColumn":17},{"ruleId":"649","severity":1,"message":"663","line":9,"column":8,"nodeType":"651","messageId":"652","endLine":9,"endColumn":12},{"ruleId":"649","severity":1,"message":"664","line":10,"column":8,"nodeType":"651","messageId":"652","endLine":10,"endColumn":16},{"ruleId":"649","severity":1,"message":"665","line":11,"column":8,"nodeType":"651","messageId":"652","endLine":11,"endColumn":20},{"ruleId":"649","severity":1,"message":"666","line":12,"column":8,"nodeType":"651","messageId":"652","endLine":12,"endColumn":20},{"ruleId":"649","severity":1,"message":"662","line":14,"column":8,"nodeType":"651","messageId":"652","endLine":14,"endColumn":18},{"ruleId":"649","severity":1,"message":"728","line":18,"column":20,"nodeType":"651","messageId":"652","endLine":18,"endColumn":38},{"ruleId":"649","severity":1,"message":"734","line":19,"column":14,"nodeType":"651","messageId":"652","endLine":19,"endColumn":26},{"ruleId":"649","severity":1,"message":"706","line":22,"column":10,"nodeType":"651","messageId":"652","endLine":22,"endColumn":25},{"ruleId":"649","severity":1,"message":"695","line":23,"column":8,"nodeType":"651","messageId":"652","endLine":23,"endColumn":25},{"ruleId":"649","severity":1,"message":"696","line":25,"column":2,"nodeType":"651","messageId":"652","endLine":25,"endColumn":10},{"ruleId":"649","severity":1,"message":"697","line":26,"column":2,"nodeType":"651","messageId":"652","endLine":26,"endColumn":24},{"ruleId":"649","severity":1,"message":"698","line":28,"column":8,"nodeType":"651","messageId":"652","endLine":28,"endColumn":19},{"ruleId":"649","severity":1,"message":"735","line":51,"column":7,"nodeType":"651","messageId":"652","endLine":51,"endColumn":28},{"ruleId":"649","severity":1,"message":"736","line":58,"column":20,"nodeType":"651","messageId":"652","endLine":58,"endColumn":33},{"ruleId":"649","severity":1,"message":"737","line":71,"column":8,"nodeType":"651","messageId":"652","endLine":71,"endColumn":29},{"ruleId":"649","severity":1,"message":"738","line":75,"column":8,"nodeType":"651","messageId":"652","endLine":75,"endColumn":27},{"ruleId":"649","severity":1,"message":"650","line":35,"column":8,"nodeType":"651","messageId":"652","endLine":35,"endColumn":15},{"ruleId":"649","severity":1,"message":"723","line":39,"column":10,"nodeType":"651","messageId":"652","endLine":39,"endColumn":13},{"ruleId":"649","severity":1,"message":"725","line":39,"column":32,"nodeType":"651","messageId":"652","endLine":39,"endColumn":39},{"ruleId":"649","severity":1,"message":"727","line":39,"column":53,"nodeType":"651","messageId":"652","endLine":39,"endColumn":61},{"ruleId":"649","severity":1,"message":"739","line":39,"column":63,"nodeType":"651","messageId":"652","endLine":39,"endColumn":75},{"ruleId":"649","severity":1,"message":"740","line":39,"column":77,"nodeType":"651","messageId":"652","endLine":39,"endColumn":85},{"ruleId":"649","severity":1,"message":"741","line":43,"column":8,"nodeType":"651","messageId":"652","endLine":43,"endColumn":18},{"ruleId":"649","severity":1,"message":"653","line":1,"column":27,"nodeType":"651","messageId":"652","endLine":1,"endColumn":36},{"ruleId":"649","severity":1,"message":"742","line":2,"column":10,"nodeType":"651","messageId":"652","endLine":2,"endColumn":20},{"ruleId":"649","severity":1,"message":"743","line":3,"column":10,"nodeType":"651","messageId":"652","endLine":3,"endColumn":21},{"ruleId":"649","severity":1,"message":"744","line":5,"column":10,"nodeType":"651","messageId":"652","endLine":5,"endColumn":20},{"ruleId":"649","severity":1,"message":"713","line":8,"column":10,"nodeType":"651","messageId":"652","endLine":8,"endColumn":20},{"ruleId":"649","severity":1,"message":"680","line":9,"column":8,"nodeType":"651","messageId":"652","endLine":9,"endColumn":12},{"ruleId":"649","severity":1,"message":"672","line":10,"column":8,"nodeType":"651","messageId":"652","endLine":10,"endColumn":18},{"ruleId":"649","severity":1,"message":"714","line":15,"column":8,"nodeType":"651","messageId":"652","endLine":15,"endColumn":25},{"ruleId":"649","severity":1,"message":"715","line":16,"column":10,"nodeType":"651","messageId":"652","endLine":16,"endColumn":24},{"ruleId":"649","severity":1,"message":"742","line":2,"column":10,"nodeType":"651","messageId":"652","endLine":2,"endColumn":20},{"ruleId":"649","severity":1,"message":"743","line":3,"column":10,"nodeType":"651","messageId":"652","endLine":3,"endColumn":21},{"ruleId":"649","severity":1,"message":"713","line":5,"column":10,"nodeType":"651","messageId":"652","endLine":5,"endColumn":20},{"ruleId":"649","severity":1,"message":"680","line":6,"column":8,"nodeType":"651","messageId":"652","endLine":6,"endColumn":12},{"ruleId":"649","severity":1,"message":"672","line":7,"column":8,"nodeType":"651","messageId":"652","endLine":7,"endColumn":18},{"ruleId":"649","severity":1,"message":"745","line":11,"column":10,"nodeType":"651","messageId":"652","endLine":11,"endColumn":20},{"ruleId":"649","severity":1,"message":"673","line":11,"column":22,"nodeType":"651","messageId":"652","endLine":11,"endColumn":33},{"ruleId":"649","severity":1,"message":"689","line":1,"column":27,"nodeType":"651","messageId":"652","endLine":1,"endColumn":33},{"ruleId":"649","severity":1,"message":"720","line":3,"column":10,"nodeType":"651","messageId":"652","endLine":3,"endColumn":19},{"ruleId":"716","severity":1,"message":"746","line":28,"column":5,"nodeType":"718","endLine":28,"endColumn":7,"suggestions":"747"},{"ruleId":"649","severity":1,"message":"693","line":1,"column":17,"nodeType":"651","messageId":"652","endLine":1,"endColumn":25},{"ruleId":"649","severity":1,"message":"689","line":1,"column":27,"nodeType":"651","messageId":"652","endLine":1,"endColumn":33},{"ruleId":"649","severity":1,"message":"653","line":1,"column":35,"nodeType":"651","messageId":"652","endLine":1,"endColumn":44},{"ruleId":"649","severity":1,"message":"672","line":4,"column":8,"nodeType":"651","messageId":"652","endLine":4,"endColumn":18},{"ruleId":"649","severity":1,"message":"732","line":5,"column":8,"nodeType":"651","messageId":"652","endLine":5,"endColumn":16},{"ruleId":"649","severity":1,"message":"733","line":6,"column":8,"nodeType":"651","messageId":"652","endLine":6,"endColumn":24},{"ruleId":"649","severity":1,"message":"692","line":10,"column":8,"nodeType":"651","messageId":"652","endLine":10,"endColumn":14},{"ruleId":"649","severity":1,"message":"667","line":11,"column":8,"nodeType":"651","messageId":"652","endLine":11,"endColumn":16},{"ruleId":"649","severity":1,"message":"661","line":12,"column":8,"nodeType":"651","messageId":"652","endLine":12,"endColumn":14},{"ruleId":"649","severity":1,"message":"748","line":2,"column":10,"nodeType":"651","messageId":"652","endLine":2,"endColumn":21},{"ruleId":"649","severity":1,"message":"749","line":12,"column":10,"nodeType":"651","messageId":"652","endLine":12,"endColumn":20},{"ruleId":"750","severity":1,"message":"751","line":156,"column":8,"nodeType":"752","endLine":159,"endColumn":10},{"ruleId":"649","severity":1,"message":"753","line":3,"column":2,"nodeType":"651","messageId":"652","endLine":3,"endColumn":14},{"ruleId":"649","severity":1,"message":"754","line":4,"column":2,"nodeType":"651","messageId":"652","endLine":4,"endColumn":8},{"ruleId":"649","severity":1,"message":"755","line":5,"column":2,"nodeType":"651","messageId":"652","endLine":5,"endColumn":14},{"ruleId":"649","severity":1,"message":"756","line":6,"column":2,"nodeType":"651","messageId":"652","endLine":6,"endColumn":8},{"ruleId":"649","severity":1,"message":"757","line":7,"column":2,"nodeType":"651","messageId":"652","endLine":7,"endColumn":7},{"ruleId":"649","severity":1,"message":"758","line":8,"column":2,"nodeType":"651","messageId":"652","endLine":8,"endColumn":11},{"ruleId":"649","severity":1,"message":"759","line":11,"column":2,"nodeType":"651","messageId":"652","endLine":11,"endColumn":18},{"ruleId":"649","severity":1,"message":"760","line":12,"column":2,"nodeType":"651","messageId":"652","endLine":12,"endColumn":23},{"ruleId":"649","severity":1,"message":"692","line":20,"column":8,"nodeType":"651","messageId":"652","endLine":20,"endColumn":14},{"ruleId":"649","severity":1,"message":"667","line":21,"column":8,"nodeType":"651","messageId":"652","endLine":21,"endColumn":16},{"ruleId":"649","severity":1,"message":"713","line":24,"column":10,"nodeType":"651","messageId":"652","endLine":24,"endColumn":20},{"ruleId":"649","severity":1,"message":"761","line":25,"column":8,"nodeType":"651","messageId":"652","endLine":25,"endColumn":24},{"ruleId":"649","severity":1,"message":"762","line":8,"column":8,"nodeType":"651","messageId":"652","endLine":8,"endColumn":12},{"ruleId":"649","severity":1,"message":"689","line":1,"column":27,"nodeType":"651","messageId":"652","endLine":1,"endColumn":33},{"ruleId":"649","severity":1,"message":"743","line":2,"column":23,"nodeType":"651","messageId":"652","endLine":2,"endColumn":34},{"ruleId":"649","severity":1,"message":"720","line":3,"column":30,"nodeType":"651","messageId":"652","endLine":3,"endColumn":39},{"ruleId":"649","severity":1,"message":"665","line":11,"column":8,"nodeType":"651","messageId":"652","endLine":11,"endColumn":20},{"ruleId":"649","severity":1,"message":"666","line":12,"column":8,"nodeType":"651","messageId":"652","endLine":12,"endColumn":20},{"ruleId":"649","severity":1,"message":"661","line":13,"column":8,"nodeType":"651","messageId":"652","endLine":13,"endColumn":14},{"ruleId":"649","severity":1,"message":"659","line":14,"column":8,"nodeType":"651","messageId":"652","endLine":14,"endColumn":13},{"ruleId":"649","severity":1,"message":"763","line":15,"column":8,"nodeType":"651","messageId":"652","endLine":15,"endColumn":12},{"ruleId":"649","severity":1,"message":"660","line":16,"column":8,"nodeType":"651","messageId":"652","endLine":16,"endColumn":15},{"ruleId":"649","severity":1,"message":"764","line":17,"column":8,"nodeType":"651","messageId":"652","endLine":17,"endColumn":19},{"ruleId":"649","severity":1,"message":"765","line":22,"column":10,"nodeType":"651","messageId":"652","endLine":22,"endColumn":24},{"ruleId":"649","severity":1,"message":"706","line":22,"column":26,"nodeType":"651","messageId":"652","endLine":22,"endColumn":41},{"ruleId":"649","severity":1,"message":"710","line":23,"column":8,"nodeType":"651","messageId":"652","endLine":23,"endColumn":18},{"ruleId":"649","severity":1,"message":"698","line":24,"column":8,"nodeType":"651","messageId":"652","endLine":24,"endColumn":19},{"ruleId":"649","severity":1,"message":"709","line":25,"column":8,"nodeType":"651","messageId":"652","endLine":25,"endColumn":16},{"ruleId":"649","severity":1,"message":"689","line":1,"column":27,"nodeType":"651","messageId":"652","endLine":1,"endColumn":33},{"ruleId":"649","severity":1,"message":"653","line":1,"column":35,"nodeType":"651","messageId":"652","endLine":1,"endColumn":44},{"ruleId":"649","severity":1,"message":"748","line":2,"column":10,"nodeType":"651","messageId":"652","endLine":2,"endColumn":21},{"ruleId":"649","severity":1,"message":"743","line":2,"column":23,"nodeType":"651","messageId":"652","endLine":2,"endColumn":34},{"ruleId":"649","severity":1,"message":"720","line":3,"column":10,"nodeType":"651","messageId":"652","endLine":3,"endColumn":19},{"ruleId":"649","severity":1,"message":"663","line":9,"column":8,"nodeType":"651","messageId":"652","endLine":9,"endColumn":12},{"ruleId":"649","severity":1,"message":"664","line":10,"column":8,"nodeType":"651","messageId":"652","endLine":10,"endColumn":16},{"ruleId":"649","severity":1,"message":"665","line":11,"column":8,"nodeType":"651","messageId":"652","endLine":11,"endColumn":20},{"ruleId":"649","severity":1,"message":"666","line":12,"column":8,"nodeType":"651","messageId":"652","endLine":12,"endColumn":20},{"ruleId":"649","severity":1,"message":"661","line":13,"column":8,"nodeType":"651","messageId":"652","endLine":13,"endColumn":14},{"ruleId":"649","severity":1,"message":"763","line":14,"column":8,"nodeType":"651","messageId":"652","endLine":14,"endColumn":12},{"ruleId":"649","severity":1,"message":"764","line":15,"column":8,"nodeType":"651","messageId":"652","endLine":15,"endColumn":19},{"ruleId":"649","severity":1,"message":"659","line":17,"column":8,"nodeType":"651","messageId":"652","endLine":17,"endColumn":13},{"ruleId":"649","severity":1,"message":"766","line":24,"column":8,"nodeType":"651","messageId":"652","endLine":24,"endColumn":19},{"ruleId":"649","severity":1,"message":"693","line":1,"column":17,"nodeType":"651","messageId":"652","endLine":1,"endColumn":25},{"ruleId":"649","severity":1,"message":"653","line":1,"column":27,"nodeType":"651","messageId":"652","endLine":1,"endColumn":36},{"ruleId":"649","severity":1,"message":"748","line":3,"column":10,"nodeType":"651","messageId":"652","endLine":3,"endColumn":21},{"ruleId":"649","severity":1,"message":"743","line":3,"column":23,"nodeType":"651","messageId":"652","endLine":3,"endColumn":34},{"ruleId":"649","severity":1,"message":"767","line":6,"column":10,"nodeType":"651","messageId":"652","endLine":6,"endColumn":18},{"ruleId":"649","severity":1,"message":"768","line":7,"column":9,"nodeType":"651","messageId":"652","endLine":7,"endColumn":16},{"ruleId":"649","severity":1,"message":"769","line":8,"column":12,"nodeType":"651","messageId":"652","endLine":8,"endColumn":22},{"ruleId":"649","severity":1,"message":"770","line":9,"column":11,"nodeType":"651","messageId":"652","endLine":9,"endColumn":20},{"ruleId":"649","severity":1,"message":"771","line":10,"column":13,"nodeType":"651","messageId":"652","endLine":10,"endColumn":24},{"ruleId":"649","severity":1,"message":"772","line":11,"column":10,"nodeType":"651","messageId":"652","endLine":11,"endColumn":18},{"ruleId":"649","severity":1,"message":"773","line":12,"column":13,"nodeType":"651","messageId":"652","endLine":12,"endColumn":24},{"ruleId":"649","severity":1,"message":"774","line":13,"column":11,"nodeType":"651","messageId":"652","endLine":13,"endColumn":20},{"ruleId":"649","severity":1,"message":"728","line":14,"column":20,"nodeType":"651","messageId":"652","endLine":14,"endColumn":38},{"ruleId":"649","severity":1,"message":"650","line":24,"column":8,"nodeType":"651","messageId":"652","endLine":24,"endColumn":15},{"ruleId":"649","severity":1,"message":"713","line":6,"column":10,"nodeType":"651","messageId":"652","endLine":6,"endColumn":20},{"ruleId":"716","severity":1,"message":"775","line":56,"column":3,"nodeType":"718","endLine":56,"endColumn":26,"suggestions":"776"},{"ruleId":"649","severity":1,"message":"767","line":5,"column":10,"nodeType":"651","messageId":"652","endLine":5,"endColumn":18},{"ruleId":"649","severity":1,"message":"768","line":6,"column":9,"nodeType":"651","messageId":"652","endLine":6,"endColumn":16},{"ruleId":"649","severity":1,"message":"769","line":7,"column":12,"nodeType":"651","messageId":"652","endLine":7,"endColumn":22},{"ruleId":"649","severity":1,"message":"770","line":8,"column":11,"nodeType":"651","messageId":"652","endLine":8,"endColumn":20},{"ruleId":"649","severity":1,"message":"771","line":9,"column":13,"nodeType":"651","messageId":"652","endLine":9,"endColumn":24},{"ruleId":"649","severity":1,"message":"772","line":10,"column":10,"nodeType":"651","messageId":"652","endLine":10,"endColumn":18},{"ruleId":"649","severity":1,"message":"773","line":11,"column":13,"nodeType":"651","messageId":"652","endLine":11,"endColumn":24},{"ruleId":"649","severity":1,"message":"774","line":12,"column":11,"nodeType":"651","messageId":"652","endLine":12,"endColumn":20},{"ruleId":"649","severity":1,"message":"728","line":13,"column":20,"nodeType":"651","messageId":"652","endLine":13,"endColumn":38},{"ruleId":"649","severity":1,"message":"650","line":24,"column":8,"nodeType":"651","messageId":"652","endLine":24,"endColumn":15},{"ruleId":"649","severity":1,"message":"748","line":2,"column":10,"nodeType":"651","messageId":"652","endLine":2,"endColumn":21},{"ruleId":"649","severity":1,"message":"660","line":8,"column":8,"nodeType":"651","messageId":"652","endLine":8,"endColumn":15},{"ruleId":"649","severity":1,"message":"694","line":12,"column":8,"nodeType":"651","messageId":"652","endLine":12,"endColumn":23},{"ruleId":"649","severity":1,"message":"699","line":14,"column":10,"nodeType":"651","messageId":"652","endLine":14,"endColumn":19},{"ruleId":"649","severity":1,"message":"697","line":14,"column":21,"nodeType":"651","messageId":"652","endLine":14,"endColumn":43},{"ruleId":"649","severity":1,"message":"698","line":15,"column":8,"nodeType":"651","messageId":"652","endLine":15,"endColumn":19},{"ruleId":"649","severity":1,"message":"777","line":44,"column":22,"nodeType":"651","messageId":"652","endLine":44,"endColumn":35},{"ruleId":"649","severity":1,"message":"650","line":16,"column":8,"nodeType":"651","messageId":"652","endLine":16,"endColumn":15},{"ruleId":"649","severity":1,"message":"778","line":18,"column":10,"nodeType":"651","messageId":"652","endLine":18,"endColumn":18},{"ruleId":"649","severity":1,"message":"779","line":18,"column":20,"nodeType":"651","messageId":"652","endLine":18,"endColumn":31},{"ruleId":"649","severity":1,"message":"780","line":26,"column":10,"nodeType":"651","messageId":"652","endLine":26,"endColumn":18},{"ruleId":"649","severity":1,"message":"781","line":34,"column":9,"nodeType":"651","messageId":"652","endLine":34,"endColumn":16},{"ruleId":"649","severity":1,"message":"782","line":46,"column":8,"nodeType":"651","messageId":"652","endLine":46,"endColumn":20},{"ruleId":"783","severity":1,"message":"784","line":60,"column":5,"nodeType":"785","messageId":"786","endLine":76,"endColumn":6},{"ruleId":"750","severity":1,"message":"751","line":103,"column":5,"nodeType":"752","endLine":110,"endColumn":7},{"ruleId":"649","severity":1,"message":"693","line":1,"column":17,"nodeType":"651","messageId":"652","endLine":1,"endColumn":25},{"ruleId":"649","severity":1,"message":"689","line":1,"column":27,"nodeType":"651","messageId":"652","endLine":1,"endColumn":33},{"ruleId":"649","severity":1,"message":"653","line":1,"column":35,"nodeType":"651","messageId":"652","endLine":1,"endColumn":44},{"ruleId":"649","severity":1,"message":"720","line":3,"column":10,"nodeType":"651","messageId":"652","endLine":3,"endColumn":19},{"ruleId":"649","severity":1,"message":"658","line":6,"column":8,"nodeType":"651","messageId":"652","endLine":6,"endColumn":14},{"ruleId":"649","severity":1,"message":"703","line":7,"column":8,"nodeType":"651","messageId":"652","endLine":7,"endColumn":12},{"ruleId":"649","severity":1,"message":"704","line":8,"column":8,"nodeType":"651","messageId":"652","endLine":8,"endColumn":11},{"ruleId":"649","severity":1,"message":"679","line":10,"column":8,"nodeType":"651","messageId":"652","endLine":10,"endColumn":11},{"ruleId":"649","severity":1,"message":"661","line":11,"column":8,"nodeType":"651","messageId":"652","endLine":11,"endColumn":14},{"ruleId":"649","severity":1,"message":"680","line":12,"column":8,"nodeType":"651","messageId":"652","endLine":12,"endColumn":12},{"ruleId":"649","severity":1,"message":"787","line":13,"column":8,"nodeType":"651","messageId":"652","endLine":13,"endColumn":16},{"ruleId":"649","severity":1,"message":"659","line":14,"column":8,"nodeType":"651","messageId":"652","endLine":14,"endColumn":13},{"ruleId":"649","severity":1,"message":"710","line":16,"column":8,"nodeType":"651","messageId":"652","endLine":16,"endColumn":18},{"ruleId":"649","severity":1,"message":"788","line":17,"column":8,"nodeType":"651","messageId":"652","endLine":17,"endColumn":16},{"ruleId":"649","severity":1,"message":"789","line":19,"column":8,"nodeType":"651","messageId":"652","endLine":19,"endColumn":26},{"ruleId":"649","severity":1,"message":"765","line":20,"column":10,"nodeType":"651","messageId":"652","endLine":20,"endColumn":24},{"ruleId":"649","severity":1,"message":"650","line":40,"column":8,"nodeType":"651","messageId":"652","endLine":40,"endColumn":15},{"ruleId":"649","severity":1,"message":"675","line":41,"column":8,"nodeType":"651","messageId":"652","endLine":41,"endColumn":16},{"ruleId":"649","severity":1,"message":"790","line":42,"column":8,"nodeType":"651","messageId":"652","endLine":42,"endColumn":19},{"ruleId":"649","severity":1,"message":"742","line":3,"column":10,"nodeType":"651","messageId":"652","endLine":3,"endColumn":20},{"ruleId":"649","severity":1,"message":"680","line":5,"column":8,"nodeType":"651","messageId":"652","endLine":5,"endColumn":12},{"ruleId":"649","severity":1,"message":"672","line":7,"column":8,"nodeType":"651","messageId":"652","endLine":7,"endColumn":18},{"ruleId":"649","severity":1,"message":"665","line":11,"column":8,"nodeType":"651","messageId":"652","endLine":11,"endColumn":20},{"ruleId":"649","severity":1,"message":"791","line":12,"column":8,"nodeType":"651","messageId":"652","endLine":12,"endColumn":31},{"ruleId":"649","severity":1,"message":"792","line":2,"column":18,"nodeType":"651","messageId":"652","endLine":2,"endColumn":28},{"ruleId":"649","severity":1,"message":"793","line":3,"column":8,"nodeType":"651","messageId":"652","endLine":3,"endColumn":17},"no-native-reassign",["794"],"no-negated-in-lhs",["795"],"no-unused-vars","'classes' is assigned a value but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'history' is assigned a value but never used.","'errorStatuses' is assigned a value but never used.","'Link' is defined but never used.","'withRouter' is defined but never used.","'AppBar' is defined but never used.","'Paper' is defined but never used.","'Divider' is defined but never used.","'Button' is defined but never used.","'IconButton' is defined but never used.","'List' is defined but never used.","'ListItem' is defined but never used.","'ListItemIcon' is defined but never used.","'ListItemText' is defined but never used.","'MenuItem' is defined but never used.","'Menu' is defined but never used.","'MenuIcon' is defined but never used.","'AccountCircleIcon' is defined but never used.","'Toolbar' is defined but never used.","'Typography' is defined but never used.","'signOutUser' is defined but never used.","'isLoggedIn' is assigned a value but never used.","'dispatch' is assigned a value but never used.","'setAnchorEl' is assigned a value but never used.","'open' is assigned a value but never used.","'updateEmail' is defined but never used.","'Box' is defined but never used.","'Grid' is defined but never used.","'LOAD_MEMBER_TO_GROUP' is defined but never used.","'signUp' is defined but never used.","'signIn' is defined but never used.","'signOut' is defined but never used.","'anonymousAuth' is defined but never used.","'homeImg' is defined but never used.","'searchTreesImg' is defined but never used.","'zIndex' is defined but never used.","'useRef' is defined but never used.","'useTheme' is defined but never used.","'TextField' is defined but never used.","'Slider' is defined but never used.","'useState' is defined but never used.","'TreeMarkableApi' is defined but never used.","'SelectLocationMap' is defined but never used.","'treesRef' is defined but never used.","'uploadImagesToFirebase' is defined but never used.","'ImagesInput' is defined but never used.","'groupsRef' is defined but never used.","'addToFollowedGroups' is defined but never used.","'ButtonGroup' is defined but never used.","'SwipeableViews' is defined but never used.","'Tabs' is defined but never used.","'Tab' is defined but never used.","'TableHead' is defined but never used.","'getTreesFromApi' is defined but never used.","'TransitEnterexitRounded' is defined but never used.","'getGroupsFromApi' is defined but never used.","'Carousel' is defined but never used.","'LeafletMap' is defined but never used.","'errorDisplay' is defined but never used.","'CurrUserInfo' is defined but never used.","'makeStyles' is defined but never used.","'SelectCoordinates' is defined but never used.","'getUserFromApi' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["796"],"'useParams' is defined but never used.","'ExpandMoreIcon' is defined but never used.","'Hidden' is defined but never used.","'uid' is assigned a value but never used.","'email' is assigned a value but never used.","'img_url' is assigned a value but never used.","'created_at' is assigned a value but never used.","'is_admin' is assigned a value but never used.","'FavoriteBorderIcon' is defined but never used.","'addToSavedTrees' is defined but never used.","'removeFromSavedTrees' is defined but never used.","'Tooltip' is defined but never used.","'Checkbox' is defined but never used.","'FormControlLabel' is defined but never used.","'FavoriteIcon' is defined but never used.","'checkTreeIdInUserFavs' is assigned a value but never used.","'savedGroupIds' is assigned a value but never used.","'handleUnfavoriteClick' is assigned a value but never used.","'handleFavoriteClick' is assigned a value but never used.","'savedTreeIds' is assigned a value but never used.","'groupIds' is assigned a value but never used.","'handleEdit' is assigned a value but never used.","'useHistory' is defined but never used.","'useDispatch' is defined but never used.","'signUpUser' is defined but never used.","'signInUser' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'remainingSelectionTreeIds', and 'userFavTrees'. Either include them or remove the dependency array.",["797"],"'useSelector' is defined but never used.","'storageRef' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'MapContainer' is defined but never used.","'useMap' is defined but never used.","'useMapEvents' is defined but never used.","'Marker' is defined but never used.","'Popup' is defined but never used.","'TileLayer' is defined but never used.","'GeoSearchControl' is defined but never used.","'OpenStreetMapProvider' is defined but never used.","'CircularProgress' is defined but never used.","'Fade' is defined but never used.","'Card' is defined but never used.","'CardContent' is defined but never used.","'getTreeFromApi' is defined but never used.","'EditIconBtn' is defined but never used.","'InfoIcon' is defined but never used.","'AddIcon' is defined but never used.","'NatureIcon' is defined but never used.","'GroupIcon' is defined but never used.","'ExploreIcon' is defined but never used.","'HomeIcon' is defined but never used.","'MessageIcon' is defined but never used.","'CheckIcon' is defined but never used.","React Hook useEffect has a missing dependency: 'tree.id'. Either include it or remove the dependency array.",["798"],"'setFormErrors' is assigned a value but never used.","'formData' is assigned a value but never used.","'setFormData' is assigned a value but never used.","'imageRef' is assigned a value but never used.","'fileRef' is assigned a value but never used.","'handleSubmit' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'Backdrop' is defined but never used.","'TreeList' is defined but never used.","'GroupTreeEditTable' is defined but never used.","'groupStatus' is assigned a value but never used.","'ListItemSecondaryAction' is defined but never used.","'RouterLink' is defined but never used.","'lostWoods' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"799","fix":"800"},{"desc":"801","fix":"802"},{"desc":"803","fix":"804"},"Update the dependencies array to be: [history, isAuthenticated, username]",{"range":"805","text":"806"},"Update the dependencies array to be: [dispatch, remainingSelectionTreeIds, userFavTrees]",{"range":"807","text":"808"},"Update the dependencies array to be: [isLoading, dispatch, tree.id]",{"range":"809","text":"810"},[1267,1296],"[history, isAuthenticated, username]",[1060,1062],"[dispatch, remainingSelectionTreeIds, userFavTrees]",[1662,1685],"[isLoading, dispatch, tree.id]"]