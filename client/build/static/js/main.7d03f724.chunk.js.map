{"version":3,"sources":["actions/types.js","reducers/trees.js","reducers/auth.js","reducers/currUser.js","reducers/groups.js","reducers/root.js","store.js","firebase/firebaseIndex.js","firebase/firebaseAuth.js","TreeMarkableApi.js","actions/auth.js","images/landing-page-main.jpg","images/search-trees-snip.JPG","images/share-trees.jpg","LandingPageElement.js","LandingPage.js","helpers/formErrorDisplay.js","styles/formStyle.js","styles/markerCard.js","actions/currUser.js","iconBtns/FavoriteIconBtn.js","firebase/firebaseStorage.js","leafletMap/TreePopup.js","leafletMap/LeafletMap.js","leafletMap/SelectCoordinates.js","user/SignUpForm.js","user/SignUp.js","user/SignInForm.js","user/SignIn.js","user/EditUser.js","imageHandling/ImagesInput.js","tree/TreeFormBasicFields.js","actions/trees.js","tree/CreateNewTree.js","images/not-found-page.jpg","NotFound.js","tree/TreeSearchForm.js","actions/groups.js","iconBtns/EditTreeInGroupIconBtn.js","tree/TreeList.js","tree/ExploreTrees.js","group/GroupSearchForm.js","group/GroupList.js","group/ExploreGroups.js","imageHandling/Carousel.js","iconBtns/EditIconBtn.js","comment/Comment.js","comment/CommentsContainer.js","tree/TreePage.js","tree/EditTree.js","group/GroupFormBasicFields.js","group/CreateNewGroup.js","images/profile-page-header.jpg","user/CurrUserInfo.js","user/UserProfilePage.js","iconBtns/FollowGroupIconBtn.js","group/GroupTreeEditTable.js","group/UserList.js","group/GroupMembersPanel.js","group/GroupTabPanel.js","group/GroupPage.js","group/EditGroup.js","About.js","ProtectedRoute.js","PrivateEntityRoute.js","PrivateUserRoute.js","Routes.js","styles/navDrawer.js","NavDrawer.js","NavAppBar.js","Navigation.js","App.js","index.js"],"names":["LOAD_TREE","LOAD_TREES","REMOVE_TREE","TREE_ERROR","TREE_REQUEST_START","TREE_REQUEST_SUCCESS","TREE_REQUEST_FAILURE","LOAD_GROUP","REMOVE_GROUP","LOAD_GROUPS","LOAD_TREE_TO_GROUP","REMOVE_TREE_FROM_GROUP","REMOVE_MEMBER_FROM_GROUP","GROUP_ERROR","GROUP_REQUEST_START","GROUP_REQUEST_SUCCESS","GROUP_REQUEST_FAILURE","LOAD_CURR_USER","LOAD_CURR_USER_ERROR","LOAD_CURR_USER_REQUEST","LOAD_CURR_USER_SUCCESS","LOAD_CURR_USER_FAILURE","RESET_CURR_USER","LOAD_SAVED_TREE","REMOVE_SAVED_TREE","LOAD_FOLLOWED_GROUP","REMOVE_FOLLOWED_GROUP","AUTH_USER","AUTH_ERROR","SIGN_OUT_USER","RESET_ALL","INITIAL_STATE","entities","status","error","trees","state","action","type","console","log","payload","id","entitiesObj","reduce","obj","tree","token","authenticated","auth","errors","hasOwnProperty","code","message","Array","isArray","uid","username","email","img_url","created_at","home_geolocation","savedTreeIds","followedGroupIds","commentIds","currUser","firebase_id","is_admin","saved_tree_ids","followed_group_ids","filter","treeId","groupId","groups","groupsObj","group","members","member","user_id","userId","root","combineReducers","persistConfig","key","storage","stateReconciler","autoMergeLevel2","persistedReducer","persistReducer","store","createStore","composeWithDevTools","applyMiddleware","thunk","persistedStore","persistStore","firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","analytics","signUp","password","a","createUserWithEmailAndPassword","res","signIn","signInWithEmailAndPassword","signOut","updateProfile","profileData","user","currentUser","reauthenticate","credentials","EmailAuthProvider","credential","reauthenticateWithCredential","getToken","getIdToken","BASE_URL","REACT_APP_BASE_URL","TreeMarkableApi","endpoint","paramsOrData","verb","_token","debug","axios","method","url","data","response","this","request","newUser","searchParams","newGroup","editGroup","groupMembers","newTree","updatedTree","comments","commentId","comment","newComment","updatedComment","isModerator","signOutUser","dispatch","authError","authUser","loadCurrUser","useStyles","makeStyles","imgPaper","height","width","zIndex","position","boxShadow","LandingPageElement","titleText","bodyText","imgSrc","imgAlt","imgSide","buttonLink","buttonText","classes","theme","useTheme","imgContainer","Grid","container","justify","item","xs","md","Paper","className","elevation","to","alt","title","src","textContainer","alignItems","style","paddingTop","spacing","Typography","align","variant","color","gutterBottom","Button","component","Link","size","paddingBottom","Hidden","only","implementation","backgroundImage","homeImg","backgroundAttachment","backgroundRepeat","backgroundPosition","backgroundSize","backgroundColor","palette","secondary","dark","LandingPage","lightDivider","Divider","flexItem","paddingRight","paddingLeft","marginBottom","fontWeight","xlUp","searchTreesImg","shareTreesImg","lgDown","errorDisplay","field","length","Number","isInteger","Map","set","get","form","display","flexDirection","maxWidth","media","content","margin","actions","addToSavedTrees","userAddTree","treeSaved","currUserError","removeFromSavedTrees","userRemoveTree","treeRemoved","addToFollowedGroups","userAddGroup","groupFollowed","removeFromFollowedGroups","userRemoveGroup","groupUnfollowed","FavoriteIconBtn","useState","isFav","setIsFav","useSelector","st","useDispatch","useEffect","includes","checkFavStatus","handleClick","Tooltip","IconButton","onClick","Favorite","htmlColor","storageRef","ref","treesRef","child","groupsRef","IMAGES","PRIMARY","ALBUM","uploadImagesToFirebase","collectionRef","files","idx","imageRef","name","put","listImagePathsFromFirebase","primaryRef","albumRef","listAll","primaryRes","albumRes","items","albumImagePaths","map","fullPath","imagePaths","primary","album","downloadImageUrlsFromFirebase","getDownloadURL","primaryImageUrl","imageUrls","imagePath","imageUrl","push","deleteImagesFromFirebase","delete","TreePopup","isLoading","setIsLoading","setImageUrls","isAuthenticated","imgUrls","getImageUrls","Card","Box","justifyContent","CircularProgress","CardMedia","image","CardContent","common_name","scientific_name","geolocation","y","toFixed","x","CardActions","Nature","mapContainer","mapContainerSm","searchControl","GeoSearchControl","showMarker","provider","OpenStreetMapProvider","LeafletMap","useGetClickCoordinates","useSearchComponent","useCenterOnUser","setCenterOnUser","zoomLevel","mapCenter","setMapCenter","onMapCoordinatesChange","allowWheelZoom","small","clickCoords","setClickCoords","GetClickCoordinates","useMapEvents","click","evt","latlng","lat","lng","Marker","Popup","CenterOnUser","useMap","locate","setView","SearchComponent","addControl","UpdateCenterOnDrag","dragend","getCenter","coords","loadingPlaceholder","MapContainer","placeholder","center","zoom","scrollWheelZoom","TileLayer","attribution","treeMarkerPopup","React","memo","SelectCoordinates","formData","onCoordinatesChange","didMountRef","useRef","showSelectMap","setShowSelectMap","handleChange","target","mapToggleRef","current","scrollIntoView","behavior","TextField","label","inputProps","step","min","max","fullWidth","InputLabelProps","shrink","onChange","value","required","SignUpForm","submitFormData","authErrors","setFormData","fData","handleErrorDisplay","onSubmit","preventDefault","autoComplete","minLength","maxLength","Boolean","helperText","innerContent","padding","SignUp","history","useHistory","RouterLink","light","userData","firebaseRes","registerUser","apiRes","displayName","currUserData","refreshToken","signUpUser","SignIn","SignInForm","getUser","EditUser","current_email","current_password","new_email","new_password","direction","updateUser","editCurrUser","imgPreview","imgsContainer","accent","ImagesInput","allowMultiple","onImageFilesChange","fileList","setFileList","readUploadedFileAsDataUrl","inputFile","temporaryFileReader","FileReader","Promise","resolve","reject","onerror","abort","DOMException","onload","result","readAsDataURL","getImageUrlsFromFiles","urls","i","filesArr","from","handlePrimaryChange","targetUrl","currentTarget","children","findIndex","filteredUrls","unshift","slice","Input","accept","multiple","htmlFor","mr","TreeFormBasicFields","edit","onFormChange","multiline","description","dsh","select","leaf_type","MenuItem","FormControlLabel","control","Checkbox","checked","fruit_bearing","createTree","imageFiles","gotTree","treeError","getTree","getTrees","updateTree","deleteTree","deletedTree","CreateNewTree","treeFormData","setTreeFormData","coordinates","setCoordinates","setImageFiles","handleSubmit","latitude","parseFloat","longitude","marginTop","lostWoods","mixins","toolbar","minHeight","breakpoints","up","NotFound","TreeSearchForm","search","distance","height_min","height_max","dsh_min","dsh_max","map_center_x","map_center_y","labelPlacement","createGroup","gotGroup","groupError","getGroup","getGroups","updateGroup","deleteGroup","deletedGroup","addTreeToGroup","groupAddTree","removeTreeFromGroup","groupRemoveTree","EditTreeInGroupIconBtn","treeInGroup","setTreeInGroup","checkTreeInGroup","Check","Add","treeListContainer","background","paper","DetailsLinkBtn","props","checkTreeIdInCollection","collection","TreeList","treeRows","link","isFavTree","columns","renderHeader","params","headerClassName","headerAlign","renderCell","parseInt","sortComparator","value1","value2","param1","param2","headerName","valueFormatter","shift","flexGrow","rows","pageSize","autoHeight","TabPanel","index","other","role","hidden","aria-labelledby","a11yProps","indicator","main","ExploreTrees","setValue","centerOnUser","Object","values","AppBar","Tabs","event","newValue","indicatorColor","textColor","aria-label","Tab","Math","GroupSearchForm","GroupList","groupRows","savedGroupIds","Date","toLocaleDateString","year","month","day","ExploreGroups","borderRadius","Carousel","cardIdx","setCardIdx","total","leftIconHidden","rightIconHidden","NavigateBefore","fontSize","NavigateNext","EditIconBtn","Edit","avatarOther","avatarOwn","Comment","onDelete","isCreatorOrModerator","editing","setEditing","text","editText","setEditText","anchorEl","setAnchorEl","open","isCommentAuthor","author_name","handleDeleteClick","deleteComment","trim","updateComment","wrap","marginRight","Avatar","whiteSpace","aria-controls","aria-haspopup","MoreVert","Menu","keepMounted","onClose","userAvatar","CommentsContainer","commentDeleted","setCommentDeleted","setComments","getComments","handleDeleteComment","createComment","mt","mb","tableContainer","TreePage","useParams","isCreator","creator","getTreeFromApi","treeFieldLabels","scientifc_name","displayImages","TableContainer","Table","TableBody","TableRow","TableCell","EditTree","setAction","INITIAL_TREE_FORM_DATA","undefined","editTree","handleDelete","contrastText","GroupFormBasicFields","CreateNewGroup","is_public","groupFormData","setGroupFormData","heading","typography","pxToRem","fontWeightRegular","headerImgBackground","profileHeaderImg","CurrUserInfo","groupIds","accordianContainer","divider","UserProfilePage","favTrees","userCreatedTrees","followedGroups","userCreatedGroups","lg","List","dense","ListItem","button","ListItemText","smUp","lgUp","FollowGroupIconBtn","isFollowed","setIsFollowed","checkFollowStatus","Group","PeopleOutline","GroupTreeEditTable","groupTrees","currUserFavTreeIds","userFavTrees","remainingSelectionTreeIds","forEach","treesSet","Set","userInfo","listItem","UserList","users","isAuthorized","actionBtns","groupRemoveMod","removeModFromGroup","removeMemberFromGroup","groupAddMod","addModToGroup","ListItemAvatar","tabPanel","backdrop","drawer","GroupMembersPanel","admin","find","moderators","is_moderator","p","GroupTabPanel","setOpen","currUserUid","centered","Backdrop","stopPropagation","xl","GroupPage","getGroupFromApi","EditGroup","shadows","marginLeft","About","href","rel","ProtectedRoute","Component","rest","render","PrivateEntityRoute","location","pathname","split","PrivateUserRoute","blank","isUser","Routes","exact","path","drawerWidth","flexShrink","borderRightColor","appBar","menuButton","drawerPaper","lightest","nested","withRouter","square","noWrap","selected","ListItemIcon","Home","disabled","disablePadding","Explore","Info","NavAppBar","handleDrawerToggle","isLoggedIn","handleClose","Toolbar","edge","mdUp","smDown","AccountCircle","anchorOrigin","vertical","horizontal","transformOrigin","ButtonGroup","Navigation","window","mobileOpen","setMobileOpen","document","body","Drawer","anchor","ModalProps","App","unsubscribe","onAuthStateChanged","err","createMuiTheme","lightGreen","A400","brown","ReactDOM","loading","persistor","ThemeProvider","CssBaseline","getElementById"],"mappings":"8SAKaA,EAAY,YACZC,EAAa,aACbC,EAAc,cACdC,EAAa,aACbC,EAAqB,qBACrBC,EAAuB,uBACvBC,EAAuB,uBAGvBC,EAAa,aACbC,EAAe,eACfC,EAAc,cACdC,EAAqB,qBACrBC,EAAyB,yBAEzBC,EAA2B,2BAC3BC,EAAc,cACdC,EAAsB,sBACtBC,EAAwB,wBACxBC,EAAwB,wBAGxBC,EAAiB,iBACjBC,EAAuB,uBAEvBC,EAAyB,yBACzBC,EAAyB,yBACzBC,EAAyB,yBACzBC,EAAkB,kBAElBC,EAAkB,kBAClBC,EAAoB,oBAEpBC,EAAsB,sBACtBC,EAAwB,wBAGxBC,EAAY,YACZC,EAAa,aACbC,EAAgB,gBAEhBC,EAAY,YC/BnBC,EAAgB,CAAEC,SAAU,GAAIC,OAAQ,OAAQC,MAAO,MAqD9CC,OAnDf,WAA+C,IAAhCC,EAA+B,uDAAvBL,EAAeM,EAAQ,uCAC7C,OAAQA,EAAOC,MACd,KAAKR,EACJ,OAAO,eAAKC,GAEb,KAAK3B,EACJ,OAAO,2BAAKgC,GAAZ,IAAmBH,OAAQ,YAE5B,KAAK5B,EACJ,OAAO,2BAAK+B,GAAZ,IAAmBH,OAAQ,SAE5B,KAAK3B,EACJ,OAAO,2BAAK8B,GAAZ,IAAmBH,OAAQ,YAE5B,KAAKjC,EAEJ,OADAuC,QAAQC,IAAI,8BAA+BH,GACpC,2BACHD,GADJ,IAECJ,SAAQ,2BACJI,EAAMJ,UADF,kBAENK,EAAOI,QAAQC,GAFT,eAEmBL,EAAOI,WAElCR,OAAW,UACXC,MAAW,OAGb,KAAKjC,EACJsC,QAAQC,IAAI,+BAAgCH,GAC5C,IAAMM,EAAcN,EAAOI,QAAQG,QAAO,SAACC,EAAKC,GAE/C,OADAD,EAAIC,EAAKJ,IAAMI,EACRD,IACL,IAEH,MAAO,CAAEb,SAAUW,EAAaV,OAAQ,UAAWC,MAAO,MAE3D,KAAKhC,EACJqC,QAAQC,IAAI,gCAAiCH,GAD9C,MAE8CD,EAAMJ,SAFpD,EAEUK,EAAOI,QAAmBN,GAFpC,kCAIC,OAAO,2BAAKC,GAAZ,IAAmBJ,SAAUG,EAAOF,OAAQ,UAAWC,MAAO,OAE/D,KAAK/B,EAGJ,OAFAoC,QAAQC,IAAI,+BAAgCH,GAErC,2BAAKD,GAAZ,IAAmBF,MAAOG,EAAOI,UAElC,QACC,OAAOL,IC1DJL,GAAgB,CACrBgB,MAAgB,KAChBC,eAAgB,EAChBd,MAAgB,MA2CFe,OAxCf,WAA8C,IAAhCb,EAA+B,uDAAvBL,GAAeM,EAAQ,uCAC5C,OAAQA,EAAOC,MACd,KAAKX,EAGJ,OAFAY,QAAQC,IAAI,8BAA+BH,GAEpC,2BACHD,GADJ,IAECW,MAAgBV,EAAOI,QAAQM,MAC/BC,eAAgB,EAChBd,MAAgB,OAElB,KAAKL,EAEJ,OADAU,QAAQC,IAAI,kCAAmCH,GACxC,eAAKN,IACb,KAAKH,EAEJ,IAAIsB,EAeJ,OAhBAX,QAAQC,IAAI,+BAAgCH,GAG3Ca,EADGb,EAAOI,QAAQU,eAAe,QACxB,CACR,CACClB,OAAUI,EAAOI,QAAQW,KACzBC,QAAUhB,EAAOI,QAAQY,UAKlBC,MAAMC,QAAQlB,EAAOI,SAC3BJ,EAAOI,QACP,CAAEJ,EAAOI,SAGN,2BACHL,GADJ,IAECF,MAAQgB,IAEV,QACC,OAAOd,I,SC/BJL,GAAgB,CACrByB,IAAmB,KACnBC,SAAmB,KACnBC,MAAmB,KACnBC,QAAmB,KACnBC,WAAmB,KACnBC,iBAAmB,GACnBC,aAAmB,GACnBC,iBAAmB,GACnBC,WAAmB,GACnB/B,OAAmB,OACnBC,MAAmB,MA4FL+B,OAzFf,WAAkD,IAAhC7B,EAA+B,uDAAvBL,GAAeM,EAAQ,uCAChD,OAAQA,EAAOC,MACd,KAAKnB,EACJ,OAAO,2BAAKiB,GAAZ,IAAmBH,OAAQ,cAE5B,KAAKb,EACJ,OAAO,2BAAKgB,GAAZ,IAAmBH,OAAQ,SAE5B,KAAKZ,EACJ,OAAO,2BAAKe,GAAZ,IAAmBH,OAAQ,YAE5B,KAAKhB,EAEJ,OADAsB,QAAQC,IAAI,mCAAoCH,GACzC,2BACHD,GADJ,IAECoB,IAAmBnB,EAAOI,QAAQyB,YAClCC,SAAmB9B,EAAOI,QAAQ0B,SAClCV,SAAmBpB,EAAOI,QAAQgB,SAClCC,MAAmBrB,EAAOI,QAAQiB,MAClCC,QAAmBtB,EAAOI,QAAQkB,QAClCC,WAAmBvB,EAAOI,QAAQmB,WAClCC,iBAAmBxB,EAAOI,QAAQoB,iBAClCC,aAAmBzB,EAAOI,QAAQ2B,gBAAkB,GACpDL,iBAAmB1B,EAAOI,QAAQ4B,oBAAsB,GACxDL,WAAmB3B,EAAOI,QAAQuB,YAAc,GAChD/B,OAAmB,UACnBC,MAAmB,OAGrB,KAAKhB,EAEJ,IAAIgC,EAYJ,OAbAX,QAAQC,IAAI,yCAA0CH,GAGrDa,EADGb,EAAOI,QAAQU,eAAe,QACxB,CACR,CACClB,OAAUI,EAAOI,QAAQW,KACzBC,QAAUhB,EAAOI,QAAQY,UAKlBC,MAAMC,QAAQlB,EAAOI,SAAWJ,EAAOI,QAAU,CAAEJ,EAAOI,SAE7D,2BACHL,GADJ,IAECF,MAAQgB,IAGV,KAAK5B,EAEJ,OADAiB,QAAQC,IAAI,oCAAqCH,GAC1C,eAAKN,IAEb,KAAKR,EAEJ,OADAgB,QAAQC,IAAI,oCAAqCH,GAC1C,2BACHD,GADJ,IAECH,OAAe,UACf6B,aAAY,uBAAQ1B,EAAM0B,cAAd,CAA4BzB,EAAOI,YAGjD,KAAKjB,EAEJ,OADAe,QAAQC,IAAI,sCAAuCH,GAC5C,2BACHD,GADJ,IAECH,OAAe,UACf6B,aAAe1B,EAAM0B,aAAaQ,QAAO,SAACC,GAAD,OAAYA,IAAWlC,EAAOI,aAGzE,KAAKhB,EAEJ,OADAc,QAAQC,IAAI,wCAAyCH,GAC9C,2BACHD,GADJ,IAECH,OAAmB,UACnB8B,iBAAgB,uBAAQ3B,EAAM2B,kBAAd,CAAgC1B,EAAOI,YAGzD,KAAKf,EAEJ,OADAa,QAAQC,IAAI,0CAA2CH,GAChD,2BACHD,GADJ,IAECH,OAAmB,UACnB8B,iBAAmB3B,EAAM2B,iBAAiBO,QAAO,SAACE,GAAD,OAAaA,IAAYnC,EAAOI,aAGnF,QACC,OAAOL,ICjGJL,GAAgB,CAAEC,SAAU,GAAIC,OAAQ,OAAQC,MAAO,MAuI9CuC,OArIf,WAAgD,IAAhCrC,EAA+B,uDAAvBL,GAAeM,EAAQ,uCAC9C,OAAQA,EAAOC,MACd,KAAKR,EAGJ,OAFAS,QAAQC,IAAI,sBAEL,eAAKT,IAEb,KAAKjB,EAGJ,OAFAyB,QAAQC,IAAI,gCAEL,2BAAKJ,GAAZ,IAAmBH,OAAQ,YAE5B,KAAKlB,EAGJ,OAFAwB,QAAQC,IAAI,kCAEL,2BAAKJ,GAAZ,IAAmBH,OAAQ,SAE5B,KAAKjB,EAGJ,OAFAuB,QAAQC,IAAI,kCAEL,2BAAKJ,GAAZ,IAAmBH,OAAQ,YAE5B,KAAK1B,EAEJ,OADAgC,QAAQC,IAAI,+BAAgCH,GACrC,2BACHD,GADJ,IAECJ,SAAQ,2BACJI,EAAMJ,UADF,kBAENK,EAAOI,QAAQC,GAFT,eAEmBL,EAAOI,WAElCR,OAAW,UACXC,MAAW,OAGb,KAAKzB,EACJ8B,QAAQC,IAAI,gCAAiCH,GAC7C,IAAMqC,EAAYrC,EAAOI,QAAQG,QAAO,SAACC,EAAK8B,GAE7C,OADA9B,EAAI8B,EAAMjC,IAAMiC,EACT9B,IACL,IACH,MAAO,CAAEb,SAAU0C,EAAWzC,OAAQ,UAAWC,MAAO,MAEzD,KAAK1B,EACJ+B,QAAQC,IAAI,iCAAkCH,GAD/C,MAE+CD,EAAMJ,SAFrD,EAEUK,EAAOI,QAAmBgC,GAFpC,kCAMC,OAHAlC,QAAQC,IAAI,yCAA0CJ,EAAMJ,UAC5DO,QAAQC,IAAI,iCAAkCiC,GAEvC,2BAAKrC,GAAZ,IAAmBJ,SAAUyC,EAAQxC,OAAQ,UAAWC,MAAO,OAEhE,KAAKxB,EAEJ,OADA6B,QAAQC,IAAI,uCAAwCH,GAC7C,2BACHD,GADJ,IAECH,OAAW,UACXC,MAAW,KACXF,SAAQ,2BACJI,EAAMJ,UADF,kBAENK,EAAOI,QAAQ+B,QAFT,2BAGHpC,EAAMJ,SAASK,EAAOI,QAAQ+B,UAH3B,IAINrC,MAAK,uBAAQC,EAAMJ,SAASK,EAAOI,QAAQ+B,SAASrC,OAA/C,CAAsDE,EAAOI,QAAQ8B,eAK9E,KAAK5D,EAGJ,OAFA4B,QAAQC,IAAI,2CAA4CH,GAEjD,2BACHD,GADJ,IAECH,OAAW,UACXC,MAAW,KACXF,SAAQ,2BACJI,EAAMJ,UADF,kBAENK,EAAOI,QAAQ+B,QAFT,2BAGHpC,EAAMJ,SAASK,EAAOI,QAAQ+B,UAH3B,IAINrC,MAAK,aACDC,EAAMJ,SAASK,EAAOI,QAAQ+B,SAASrC,MAAMmC,QAC/C,SAACC,GAAD,OAAYA,IAAWlC,EAAOI,QAAQ8B,iBAyB5C,KAAK3D,EAGJ,OAFA2B,QAAQC,IAAI,6CAA8CH,GAEnD,2BACHD,GADJ,IAECH,OAAW,UACXC,MAAW,KACXF,SAAQ,2BACJI,EAAMJ,UADF,kBAENK,EAAOI,QAAQ+B,QAFT,2BAGHpC,EAAMJ,SAASK,EAAOI,QAAQ+B,UAH3B,IAINI,QAAO,aACHxC,EAAMJ,SAASK,EAAOI,QAAQ+B,SAASI,QAAQN,QACjD,SAACO,GAAD,OAAYA,EAAOC,UAAYzC,EAAOI,QAAQsC,iBAOpD,KAAKlE,EAGJ,OAFA0B,QAAQC,IAAI,gCAAiCH,GAEtC,2BAAKD,GAAZ,IAAmBF,MAAOG,EAAOI,UAElC,QACC,OAAOL,ICtIK4C,GANFC,0BAAgB,CAC5BhC,QACAgB,YACA9B,SACAsC,YCAKS,GAAgB,CACrBC,IAAkB,OAClBC,YACAC,gBAAkBC,KAGbC,GAAmBC,YAAeN,GAAeF,IAE1CS,GAAQC,sBACpBH,GACAI,8BAAoBC,0BAAgBC,OAGxBC,GAAiBC,YAAaN,I,mECT3CO,KAASC,cAZc,CACtBC,OAAoBC,0CACpBC,WAAoBD,gCACpBE,YAAoBF,uCACpBG,UAAoBH,gBACpBI,cAAoBJ,4BACpBK,kBAAoBL,eACpBM,MAAoBN,4CACpBO,cAAoBP,iBAKrBH,KAASW,YAET,IAAM1D,GAAO+C,KAAS/C,OAChBmC,GAAUY,KAASZ,UCpBnBwB,GAAM,yCAAG,WAAOlD,EAAOmD,GAAd,gBAAAC,EAAA,6DACdvE,QAAQC,IAAI,uBADE,SAEIS,GAAK8D,+BAA+BrD,EAAOmD,GAF/C,cAERG,EAFQ,OAGdzE,QAAQC,IAAI,8BAHE,kBAKPwE,GALO,2CAAH,wDAQNC,GAAM,yCAAG,WAAOvD,EAAOmD,GAAd,gBAAAC,EAAA,6DACdvE,QAAQC,IAAI,uBADE,SAEIS,GAAKiE,2BAA2BxD,EAAOmD,GAF3C,cAERG,EAFQ,yBAGPA,GAHO,2CAAH,wDAMNG,GAAO,yCAAG,uBAAAL,EAAA,6DACfvE,QAAQC,IAAI,wBADG,SAETS,GAAKkE,UAFI,2CAAH,qDAaPC,GAAa,yCAAG,WAAOC,GAAP,kBAAAP,EAAA,yDACrBvE,QAAQC,IAAI,6BAA8B6E,KACpCC,EAAOrE,GAAKsE,aAFG,gCAIFD,EAAKF,cAAcC,GAJjB,cAIdL,EAJc,yBAKbA,GALa,2CAAH,sDASbQ,GAAc,yCAAG,WAAOC,GAAP,kBAAAX,EAAA,yDACtBvE,QAAQC,IAAI,4CAA6CiF,GACnDH,EAAOrE,GAAKsE,YAClBhF,QAAQC,IAAI,qCAAsC8E,IAE9CA,EALkB,gCAMItB,KAAS/C,KAAKyE,kBAAkBC,WACxDF,EAAY/D,OAAS4D,EAAK5D,MAC1B+D,EAAYZ,UARQ,cAMfc,EANe,gBAUfL,EAAKM,6BAA6BD,GAVnB,2CAAH,sDAyBdE,GAAQ,yCAAG,6BAAAf,EAAA,yDACS,OAArB7D,GAAKsE,YADO,gCAEKtE,GAAKsE,YAAYO,YAAW,GAFjC,cAET/E,EAFS,yBAGRA,GAHQ,4EAAH,qD,wCC5DRgF,GAAW5B,whBAAY6B,oBAAsB,wBA+NpCC,G,kJAxNOC,G,iGAAUC,E,+BAAe,GAAIC,E,+BAAO,M,SAEvD7F,QAAQC,IAAI,eAAgB2F,G,SACAN,K,cAA5BM,EAAaE,O,OAEb9F,QAAQ+F,MAAM,YAAaJ,EAAUC,EAAcC,G,UACjCG,KAAM,aACvBC,OAAuCJ,EACvCK,IAAG,UAAuCV,GAAvC,YAAmDG,IAC5C,QAATE,EAAiB,SAAW,OAASD,I,eAHjCnB,E,OAMNzE,QAAQC,IAAI,iBAAkBwE,EAAI0B,M,kBAC3B1B,EAAI0B,M,sCAKP,KAAIC,S,uBACPpG,QAAQL,MAAM,aAAc,KAAIyG,UAC5BzG,EAAQ,KAAIyG,SAASD,KACnBpF,MAAMC,QAAQrB,GAASA,EAAQ,CAAEA,G,eAGvCK,QAAQL,MAAM,yBAAd,M,gNAWgBwG,G,+EAClBnG,QAAQC,IAAI,uC,SACIoG,KAAKC,QAAL,QAAsBH,EAAM,Q,cAAxC1B,E,yBACGA,EAAIjE,O,gLAOSU,G,+EACpBlB,QAAQC,IAAI,yC,SACIoG,KAAKC,QAAL,gBAAsBpF,I,cAAlCuD,E,yBACGA,EAAIM,M,qLAGcoB,G,+EACzBnG,QAAQC,IAAI,8C,SACIoG,KAAKC,QAAL,QAAsBH,EAAM,Q,cAAxC1B,E,yBACGA,EAAI8B,S,mLAEYrF,EAAUiF,G,+EACjCnG,QAAQC,IAAI,4C,SACIoG,KAAKC,QAAL,gBAAsBpF,GAAYiF,EAAM,S,cAApD1B,E,yBACGA,EAAIM,M,qLAEY7D,G,+EACvBlB,QAAQC,IAAI,4C,SACIoG,KAAKC,QAAL,gBAAsBpF,GAAY,GAAI,U,cAAlDuD,E,yBACGA,EAAI3D,S,kLAMW0F,G,+EACtBxG,QAAQC,IAAI,2C,SACIoG,KAAKC,QAAL,SAAuBE,G,cAAnC/B,E,yBACGA,EAAIvC,Q,iLAEUD,G,+EACrBjC,QAAQC,IAAI,0C,SACIoG,KAAKC,QAAL,iBAAuBrE,I,cAAnCwC,E,yBACGA,EAAIrC,O,oLAEa+D,G,+EACxBnG,QAAQC,IAAI,6C,SACIoG,KAAKC,QAAL,SAAuBH,EAAM,Q,cAAzC1B,E,yBACGA,EAAIgC,U,oLAEaxE,EAASkE,G,+EACjCnG,QAAQC,IAAI,6C,SACIoG,KAAKC,QAAL,iBAAuBrE,GAAWkE,EAAM,S,cAApD1B,E,yBACGA,EAAIiC,W,sLAEazE,G,+EACxBjC,QAAQC,IAAI,6C,SACIoG,KAAKC,QAAL,iBAAuBrE,GAAW,GAAI,U,cAAlDwC,E,yBACGA,EAAI3D,S,wLAEiBmB,G,+EAC5BjC,QAAQC,IAAI,iD,SACIoG,KAAKC,QAAL,iBAAuBrE,EAAvB,a,cAAZwC,E,yBACGA,EAAIkC,c,iLAOUH,G,+EACrBxG,QAAQC,IAAI,0C,SACIoG,KAAKC,QAAL,QAAsBE,G,cAAlC/B,E,yBACGA,EAAI7E,O,gLAESoC,G,+EACpBhC,QAAQC,IAAI,yC,SACIoG,KAAKC,QAAL,gBAAsBtE,I,cAAlCyC,E,yBACGA,EAAIlE,M,mLAEY4F,G,+EACvBnG,QAAQC,IAAI,4C,SACIoG,KAAKC,QAAL,QAAsBH,EAAM,Q,cAAxC1B,E,yBACGA,EAAImC,S,mLAEY5E,EAAQmE,G,+EAC/BnG,QAAQC,IAAI,4C,SACIoG,KAAKC,QAAL,gBAAsBtE,GAAUmE,EAAM,S,cAAlD1B,E,yBACGA,EAAIoC,a,qLAEY7E,G,+EACvBhC,QAAQC,IAAI,4C,SACIoG,KAAKC,QAAL,gBAAsBtE,GAAU,GAAI,U,cAAhDyC,E,yBACGA,EAAI3D,S,oLAMaf,EAAMI,G,+EAC9BH,QAAQC,IAAI,6C,SACIoG,KAAKC,QAAL,mBAAyBvG,EAAzB,YAAiCI,I,cAA7CsE,E,yBACGA,EAAIqC,U,qLAEYC,G,+EACvB/G,QAAQC,IAAI,4C,SACIoG,KAAKC,QAAL,mBAAyBS,I,cAArCtC,E,yBACGA,EAAIuC,S,sLAEeb,G,+EAC1BnG,QAAQC,IAAI,8CAA+CkG,G,SAC3CE,KAAKC,QAAL,WAAyBH,EAAM,Q,cAA3C1B,E,yBACGA,EAAIwC,Y,sLAEeF,EAAWZ,G,+EACrCnG,QAAQC,IAAI,+C,SACIoG,KAAKC,QAAL,mBAAyBS,GAAaZ,EAAM,S,cAAxD1B,E,yBACGA,EAAIyC,gB,wLAEeH,G,+EAC1B/G,QAAQC,IAAI,+C,SACIoG,KAAKC,QAAL,mBAAyBS,GAAa,GAAI,U,cAAtDtC,E,yBACGA,EAAI3D,S,oLAMa0B,EAAQR,G,+EAChChC,QAAQC,IAAI,6C,SACIoG,KAAKC,QAAL,gBAAsB9D,EAAtB,kBAAsCR,GAAU,GAAI,Q,cAAhEyC,E,yBACGA,EAAI3D,S,yLAEgB0B,EAAQR,G,+EACnChC,QAAQC,IAAI,gD,SACIoG,KAAKC,QAAL,gBAAsB9D,EAAtB,kBAAsCR,GAAU,GAAI,U,cAAhEyC,E,yBACGA,EAAI3D,S,uLAKc0B,EAAQP,EAASkF,G,+EAC1CnH,QAAQC,IAAI,8C,SACIoG,KAAKC,QAAL,gBAAsB9D,EAAtB,mBAAuCP,GAAW,CAAEkF,eAAe,Q,cAA/E1C,E,yBACGA,EAAI3D,S,4LAEiB0B,EAAQP,G,+EACpCjC,QAAQC,IAAI,iD,SACIoG,KAAKC,QAAL,gBAAsB9D,EAAtB,mBAAuCP,GAAW,GAAI,U,cAAlEwC,E,yBACGA,EAAI3D,S,uLAMcmB,EAASD,G,+EAClChC,QAAQC,IAAI,8C,SACIoG,KAAKC,QAAL,iBAAuBrE,EAAvB,kBAAwCD,GAAU,GAAI,Q,cAAlEyC,E,yBACGA,EAAI3D,S,0LAEiBmB,EAASD,G,+EACrChC,QAAQC,IAAI,iD,SACIoG,KAAKC,QAAL,iBAAuBrE,EAAvB,kBAAwCD,GAAU,GAAI,U,cAAlEyC,E,yBACGA,EAAI3D,S,sLAMamB,EAASO,G,+EACjCxC,QAAQC,IAAI,6C,SACIoG,KAAKC,QAAL,iBAAuBrE,EAAvB,kBAAwCO,EAAxC,WAAyD,GAAI,S,cAAzEiC,E,yBACGA,EAAI3D,S,yLAEgBmB,EAASO,G,+EACpCxC,QAAQC,IAAI,gD,SACIoG,KAAKC,QAAL,iBAAuBrE,EAAvB,kBAAwCO,EAAxC,cAA4D,GAAI,S,cAA5EiC,E,yBACGA,EAAI3D,S,gHC5Ib,SAASsG,KAER,OADApH,QAAQC,IAAI,sBACZ,yCAAO,WAAeoH,GAAf,UAAA9C,EAAA,+EAECK,KAFD,OAGLyC,EAAS,CAAEtH,KAAMT,IACjB+H,EAAS,CAAEtH,KAAMhB,IAJZ,gDAMLiB,QAAQC,IAAI,oBAAZ,MACAoH,EAASC,GAAU,EAAD,KAPb,yDAAP,sDAqDD,SAASC,GAASxC,GACjB,MAAO,CAAEhF,KAAMX,EAAWc,QAAS6E,GAEpC,SAASuC,GAAU3H,GAClB,MAAO,CAAEI,KAAMV,EAAYa,QAASP,GAErC,SAAS6H,GAAazC,GACrB,MAAO,CAAEhF,KAAMrB,EAAgBwB,QAAS6E,G,uEChJ1B,OAA0B,8CCA1B,OAA0B,8CCA1B,OAA0B,wC,mBCcnC0C,GAAYC,aAAW,CAC5BC,SAAW,CACVC,OAAY,IACZC,MAAY,IACZC,OAAY,EACZC,SAAY,WACZC,UAAS,8HAkHIC,OA5Gf,YAQI,IAPHC,EAOE,EAPFA,UACAC,EAME,EANFA,SACAC,EAKE,EALFA,OACAC,EAIE,EAJFA,OAIE,IAHFC,eAGE,MAHQ,OAGR,EAFFC,EAEE,EAFFA,WACAC,EACE,EADFA,WAEMC,EAAUhB,KACViB,EAAQC,eAERC,EACL,cAACC,GAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,SAASC,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAlD,SACC,cAACC,GAAA,EAAD,CAAOC,UAAWX,EAAQd,SAAU0B,UAAW,GAA/C,SACC,cAAC,KAAD,CAAMC,GAAE,WAAMf,GAAd,SACC,qBACCX,OAAO,OACPC,MAAM,OACN0B,IAAKlB,EACLmB,MAAOnB,EACPoB,IAAKrB,UAOJsB,EACL,eAACb,GAAA,EAAD,CACCC,WAAS,EACTC,QAAQ,SACRY,WAAW,SACXX,MAAI,EACJC,GAAI,GACJC,GAAI,EACJU,MAAO,CACNC,WAAanB,EAAMoB,QAAQ,IAR7B,UAWC,cAACjB,GAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,SAASC,MAAI,EAACC,GAAI,GAA1C,SACC,cAACc,GAAA,EAAD,CACCC,MAAM,SACNC,QAAQ,KACRL,MAAO,CAAEM,MAAO,SAChBC,cAAY,EAJb,SAMEhC,MAGH,cAACU,GAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,SAASC,MAAI,EAACC,GAAI,GAA1C,SACC,cAACmB,GAAA,EAAD,CACCC,UAAWC,KACXhB,GAAE,WAAMf,GACR0B,QAAQ,YACRC,MAAM,UACNK,KAAK,QALN,SAOE/B,SAML,OACC,eAACK,GAAA,EAAD,CACCC,WAAS,EACTE,MAAI,EACJD,QAAQ,SACRa,MAAO,CACNC,WAAgBnB,EAAMoB,QAAQ,GAC9BU,cAAgB9B,EAAMoB,QAAQ,IANhC,UASC,cAACC,GAAA,EAAD,CACCC,MAAM,SACNC,QAAQ,KACRL,MAAO,CAAEM,MAAO,SAChBC,cAAY,EAJb,SAMEjC,IAEF,cAACuC,GAAA,EAAD,CAAQC,KAAM,CAAE,KAAM,KAAM,MAAQC,eAAe,KAAnD,SACc,UAAZrC,EACA,eAACO,GAAA,EAAD,CAAMC,WAAS,EAACE,MAAI,EAACC,GAAI,GAAzB,UACES,EACAd,KAGF,eAACC,GAAA,EAAD,CAAMC,WAAS,EAACE,MAAI,EAACC,GAAI,GAAzB,UACEL,EACAc,OAIJ,cAACe,GAAA,EAAD,CAAQC,KAAM,CAAE,KAAM,MAAQC,eAAe,KAA7C,SACC,eAAC9B,GAAA,EAAD,CAAMC,WAAS,EAACE,MAAI,EAACC,GAAI,GAAzB,UACC,cAACJ,GAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,SAASC,MAAI,EAACC,GAAI,GAA1C,SACEL,IAEF,cAACC,GAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,SAASC,MAAI,EAACC,GAAI,GAA1C,SACES,aChHDjC,GAAYC,cAAW,SAACgB,GAC7B,MAAO,CACNkC,gBAAkB,CACjBhD,OAAuB,OACvBgD,gBAAe,cAAeC,GAAf,KACfC,qBAAuB,QACvBC,iBAAuB,YACvBC,mBAAuB,SACvBC,eAAuB,QACvBC,gBAAuBxC,EAAMyC,QAAQC,UAAUC,UA+HnCC,OA1Hf,WACC,IAAM5C,EAAQC,eACRF,EAAUhB,GAAUiB,GAEpB6C,EACL,cAAC1C,GAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,SACC,cAACuC,GAAA,EAAD,CACCC,UAAQ,EACR7B,MAAO,CACNhC,OAAkB,EAClBsD,gBAAkB,yBAEnBjB,QAAQ,aAKX,OACC,cAACpB,GAAA,EAAD,CACCC,WAAS,EACTM,UAAWX,EAAQmC,gBACnBjB,WAAW,UAHZ,SAKC,eAACd,GAAA,EAAD,CACCC,WAAS,EACTE,MAAI,EACJY,MAAO,CACNsB,gBAAkB,iBAClBrB,WAAkBnB,EAAMoB,QAAQ,IAChC4B,aAAkBhD,EAAMoB,QAAQ,GAChC6B,YAAkBjD,EAAMoB,QAAQ,IAPlC,UAUC,cAACjB,GAAA,EAAD,CACCC,WAAS,EACTE,MAAI,EACJY,MAAO,CACNgC,aAAelD,EAAMoB,QAAQ,KAE9Bf,QAAQ,SANT,SAQC,cAACgB,GAAA,EAAD,CACCC,MAAM,SACNC,QAAQ,KACRL,MAAO,CAAEM,MAAO,QAAS2B,WAAY,QAHtC,wCAQAN,EACD,eAACd,GAAA,EAAD,CAAQqB,MAAI,EAAZ,UACC,cAAC,GAAD,CACC5D,UAAU,UACVC,SAAS,sDAETC,OAAQ2D,GACR1D,OAAO,mBACPE,WAAW,QACXC,WAAW,iBAEX+C,EACD,cAAC,GAAD,CACCrD,UAAU,QACVC,SAAS,+CACTC,OAAQ4D,GACR3D,OAAO,kCACPC,QAAQ,QACRC,WAAW,YACXC,WAAW,kBAEX+C,EACD,cAAC,GAAD,CACCrD,UAAU,cACVC,SAAS,+DAETC,OAAQ2D,GACR1D,OAAO,GACPE,WAAW,SACXC,WAAW,qBAGb,cAACiC,GAAA,EAAD,CAAQwB,QAAM,EAAd,SACC,eAACpD,GAAA,EAAD,CAAMC,WAAS,EAAf,UACC,cAACD,GAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,SACC,cAAC,GAAD,CACCf,UAAU,UACVC,SAAS,sDAETC,OAAQ2D,GACR1D,OAAO,mBACPE,WAAW,QACXC,WAAW,mBAGb,cAACK,GAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,SACC,cAAC,GAAD,CACCf,UAAU,QACVC,SAAS,+CACTC,OAAQ4D,GACR3D,OAAO,kCACPC,QAAQ,QACRC,WAAW,YACXC,WAAW,oBAGb,cAACK,GAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,SACC,cAAC,GAAD,CACCf,UAAU,cACVC,SAAS,+DAETC,OAAQ2D,GACR1D,OAAO,GACPE,WAAW,SACXC,WAAW,+B,UCzIb0D,GAAe,SAACC,EAAOxM,GAC5B,GAAc,OAAVA,GAAmC,IAAjBA,EAAMyM,OAA5B,CACA,IAAM1M,EAAS2M,OAAOC,UAAU3M,EAAM,GAAGD,QAAUC,EAAM,GAAGmB,QAAUnB,EAAM,GAAGD,OAC3EiB,EAAS,IAAI4L,IAuBjB,MAtBc,aAAVJ,GACHxL,EAAO6L,IAAI,4BAA6B,6BAE3B,eAAVL,GACHxL,EAAO6L,IAAI,8BAA+B,+BAE7B,UAAVL,IACHxL,EAAO6L,IAAI,4BAA6B,2DACxC7L,EAAO6L,IAAI,qBAAsB,yCACjC7L,EAAO6L,IAAI,sBAAuB,sDAClC7L,EAAO6L,IAAI,yBAA0B,2BAExB,aAAVL,IACHxL,EAAO6L,IAAI,qBAAsB,4DACjC7L,EAAO6L,IAAI,sBAAuB,oBAErB,iBAAVL,GACHxL,EAAO6L,IAAI,qBAAsB,4DAK3B7L,EAAO8L,IAAI/M,K,kBChBJ+H,GAbGC,cAAW,SAACgB,GAC7B,MAAO,CACNgE,KAAO,CACNC,QAAgB,OAChBC,cAAgB,SAChB,QAAgB,CACfhB,aAAe,S,8JCeJnE,GArBGC,aAAW,CAC5BjF,KAAU,CACToK,SAAW,KAEZC,MAAU,CACTlF,OAAS,KAEVmF,QAAU,CACTvC,cAAgB,EAChBmB,YAAgB,GAChBD,aAAgB,GAChB,MAAgB,CACfsB,OAAS,IAGXC,QAAU,CACTzC,cAAgB,EAChBX,WAAgB,K,UC0ClB,SAASqD,GAAgB1K,EAAQR,GAEhC,OADAhC,QAAQC,IAAI,gCAAiCuC,EAAQR,GACrD,yCAAO,WAAeqF,GAAf,UAAA9C,EAAA,6DACN8C,EAAS,CAAEtH,KAAMnB,IADX,kBAGC8G,GAAgByH,YAAY3K,EAAQR,GAHrC,OAILqF,EAAS+F,GAAUpL,IACnBqF,EAAS,CAAEtH,KAAMlB,IALZ,gDAOLmB,QAAQC,IAAI,wBAAZ,MACAoH,EAASgG,GAAc,EAAD,KACtBhG,EAAS,CAAEtH,KAAMjB,IATZ,yDAAP,sDAaD,SAASwO,GAAqB9K,EAAQR,GAErC,OADAhC,QAAQC,IAAI,qCAAsCuC,EAAQR,GAC1D,yCAAO,WAAeqF,GAAf,UAAA9C,EAAA,6DACN8C,EAAS,CAAEtH,KAAMnB,IADX,kBAGC8G,GAAgB6H,eAAe/K,EAAQR,GAHxC,OAILqF,EAASmG,GAAYxL,IACrBqF,EAAS,CAAEtH,KAAMlB,IALZ,gDAOLmB,QAAQC,IAAI,6BAAZ,MACAoH,EAASgG,GAAc,EAAD,KACtBhG,EAAS,CAAEtH,KAAMjB,IATZ,yDAAP,sDAiBD,SAAS2O,GAAoBjL,EAAQP,EAASkF,GAE7C,OADAnH,QAAQC,IAAI,oCAAqCuC,EAAQP,EAASkF,GAClE,yCAAO,WAAeE,GAAf,UAAA9C,EAAA,6DACN8C,EAAS,CAAEtH,KAAMnB,IADX,kBAGC8G,GAAgBgI,aAAalL,EAAQP,EAASkF,GAH/C,OAILE,EAASsG,GAAc1L,IACvBoF,EAAS,CAAEtH,KAAMlB,IALZ,gDAOLmB,QAAQC,IAAI,4BAAZ,MACAoH,EAASgG,GAAc,EAAD,KACtBhG,EAAS,CAAEtH,KAAMjB,IATZ,yDAAP,sDAaD,SAAS8O,GAAyBpL,EAAQP,GAEzC,OADAjC,QAAQC,IAAI,yCAA0CuC,EAAQP,GAC9D,yCAAO,WAAeoF,GAAf,UAAA9C,EAAA,6DACN8C,EAAS,CAAEtH,KAAMnB,IADX,kBAGC8G,GAAgBmI,gBAAgBrL,EAAQP,GAHzC,OAILoF,EAASyG,GAAgB7L,IACzBoF,EAAS,CAAEtH,KAAMlB,IALZ,gDAOLmB,QAAQC,IAAI,iCAAZ,MACAoH,EAASgG,GAAc,EAAD,KACtBhG,EAAS,CAAEtH,KAAMjB,IATZ,yDAAP,sDAcD,SAAS0I,GAAazC,GACrB,MAAO,CAAEhF,KAAMrB,EAAgBwB,QAAS6E,GAEzC,SAASsI,GAAc1N,GACtB,MAAO,CAAEI,KAAMpB,EAAsBuB,QAASP,GAE/C,SAASyN,GAAUpL,GAClB,MAAO,CAAEjC,KAAMf,EAAiBkB,QAAS8B,GAE1C,SAASwL,GAAYxL,GACpB,MAAO,CAAEjC,KAAMd,EAAmBiB,QAAS8B,GAE5C,SAAS2L,GAAc1L,GACtB,MAAO,CAAElC,KAAMb,EAAqBgB,QAAS+B,GAE9C,SAAS6L,GAAgB7L,GACxB,MAAO,CAAElC,KAAMZ,EAAuBe,QAAS+B,GCjFjC8L,OAvCf,YAAsC,IAAX/L,EAAU,EAAVA,OAAU,GACpByF,KACYuG,mBAAS,OAFD,oBAE5BC,EAF4B,KAErBC,EAFqB,KAG9BjN,EAAMkN,aAAY,SAACC,GAAD,OAAQA,EAAG1M,SAAST,OACtCM,EAAe4M,aAAY,SAACC,GAAD,OAAQA,EAAG1M,SAASH,gBAC/C8F,EAAWgH,cAEjBC,qBACC,YACwB,SAACtM,EAAQT,GAC/B2M,EAAS3M,EAAagN,SAASvM,IAEhCwM,CAAexM,EAAQT,KAExB,CAAEA,EAAcS,IAGjB,IAAMyM,EAAW,yCAAG,uBAAAlK,EAAA,sDAElB8C,EADG4G,EACMX,GAAqBrM,EAAKe,GAG1BkL,GAAgBjM,EAAKe,IAE/BkM,GAAUD,GAPS,2CAAH,qDAUjB,OAAKhN,EAKJ,cAACyN,GAAA,EAAD,CAASlF,MAAOyE,EAAQ,aAAe,WAAvC,SACC,cAACU,GAAA,EAAD,CAAYC,QAASH,EAArB,SACC,cAACI,GAAA,EAAD,CAAcC,UAAWb,EAAQ,MAAQ,aANpC,M,oBC/CHc,GAAalM,GAAQmM,MACrBC,GAAWF,GAAWG,MAAM,SAE5BC,IADWJ,GAAWG,MAAM,SAChBH,GAAWG,MAAM,WAG7BE,GAAS,SACTC,GAAU,UACVC,GAAQ,QAcRC,GAAsB,yCAAG,WAAOC,EAAerP,EAAIsP,GAA1B,oBAAAlL,EAAA,sDAC9BvE,QAAQC,IAAI,kCAAmCuP,EAAerP,EAAIsP,GACzDC,EAAM,EAFe,YAEZA,EAAMD,EAAMrD,QAFA,wBAGzBuD,OAHyB,EAK5BA,EADW,IAARD,EACQF,EAAcN,MAAd,UAAuB/O,EAAvB,YAA6BiP,GAA7B,YAAuCC,GAAvC,YAAkDI,EAAMC,GAAKE,OAG7DJ,EAAcN,MAAd,UAAuB/O,EAAvB,YAA6BiP,GAA7B,YAAuCE,GAAvC,YAAgDG,EAAMC,GAAKE,OAR1C,kBAWVD,EAASE,IAAIJ,EAAMC,IAXT,OAWtBjL,EAXsB,OAY5BzE,QAAQC,IAAI,+BAAgCwE,GAZhB,kDAc5BzE,QAAQC,IAAI,+BAAZ,MAd4B,QAEQyP,IAFR,yEAAH,0DA8BtBI,GAA0B,yCAAG,WAAON,EAAerP,GAAtB,0BAAAoE,EAAA,6DAClCvE,QAAQC,IAAI,qCAAsCuP,EAAerP,GAD/B,SAI3B4P,EAAaP,EAAcN,MAAd,UAAuB/O,EAAvB,YAA6BiP,GAA7B,YAAuCC,KACpDW,EAAWR,EAAcN,MAAd,UAAuB/O,EAAvB,YAA6BiP,GAA7B,YAAuCE,KALvB,SAMRS,EAAWE,UANH,cAM3BC,EAN2B,gBAOVF,EAASC,UAPC,UAO3BE,EAP2B,OASD,IAA5BD,EAAWE,MAAMhE,OATY,0DAW3BiE,EAA8C,IAA1BF,EAASC,MAAMhE,OAAgB+D,EAASC,MAAME,KAAI,SAACtH,GAAD,OAAUA,EAAKuH,YAAY,GAEjGC,EAAa,CAClBC,QAAUP,EAAWE,MAAM,GAAGG,SAC9BG,MAAUL,GAGXrQ,QAAQC,IAAI,0CAA2CuQ,GAlBtB,kBAmB1BA,GAnB0B,kCAqBjCxQ,QAAQL,MAAM,mCAAd,MArBiC,0DAAH,wDAoC1BgR,GAA6B,yCAAG,WAAOnB,EAAerP,GAAtB,oCAAAoE,EAAA,6DACrCvE,QAAQC,IAAI,wCAAyCuP,EAAerP,GAD/B,kBAIX2P,GAA2BN,EAAerP,GAJ/B,UAI9BqQ,EAJ8B,OAMpCxQ,QAAQC,IAAI,6CAA8CuQ,GACrDA,EAP+B,kEASNzB,GAAWG,MAAX,UAAoBsB,EAAWC,UAAWG,iBATpC,QAS9BC,EAT8B,OAWhCC,EAAY,CAAEL,QAASI,EAAiBH,MAAO,IAXf,mCAaRF,EAAWE,OAbH,mIAarBK,EAbqB,YAcZhC,GAAWG,MAAX,UAAoB6B,IAAaH,iBAdrB,QAc7BI,EAd6B,OAgBnCF,EAAS,MAAQG,KAAKD,GAhBa,0TAmBpChR,QAAQC,IAAI,4CAA6C6Q,GAnBrB,kBAoB7BA,GApB6B,kCAsBpC9Q,QAAQL,MAAM,uCAAd,MAtBoC,oFAAH,wDA0B7BuR,GAAwB,yCAAG,WAAO1B,EAAerP,GAAtB,sBAAAoE,EAAA,6DAChCvE,QAAQC,IAAI,mCAAoCuP,EAAerP,GAD/B,kBAGN2P,GAA2BN,EAAerP,GAHpC,UAGzBqQ,EAHyB,OAI/BxQ,QAAQC,IAAI,wCAAyCuQ,GAChDA,EAL0B,iDAS/B,GAFAzB,GAAWG,MAAX,UAAoBsB,EAAWC,UAAWU,SAEtCX,EAAWE,MAAMtE,OAAS,EAAG,CAAC,EAAD,aACRoE,EAAWE,OADH,IAChC,2BAAWK,EAA+B,QACzC/Q,QAAQC,IAAI,uCAAwC8Q,GAEpDhC,GAAWG,MAAX,UAAoB6B,IAAaI,SAJF,+BATF,kDAiB/BnR,QAAQC,IAAI,gCAAZ,MAjB+B,0DAAH,wDCafmR,OAxGf,YAA8B,IAAT7Q,EAAQ,EAARA,KACdkI,EAAUhB,KADY,EAGQuG,oBAAS,GAHjB,oBAGpBqD,EAHoB,KAGTC,EAHS,OAIQtD,mBAAS,CAC5CyC,QAAU,GACVC,MAAU,KANiB,oBAIpBI,EAJoB,KAITS,EAJS,KAQtBC,EAAkBrD,aAAY,SAACC,GAAD,OAAQA,EAAG1N,KAAKD,iBAC9C4G,EAAWgH,cA8CjB,OA3CAC,qBACC,WAYK+C,GAXc,yCAAG,WAAO7B,EAAerP,GAAtB,gBAAAoE,EAAA,sEACEoM,GACrBnB,EACArP,GAHmB,QACdsR,EADc,SAMnBF,EAAaE,GAEdH,GAAa,GARO,2CAAH,uDAYjBI,CAAazC,GAAU1O,EAAKJ,MAG9B,CAAEkR,EAAWhK,IA2Bb,eAACsK,GAAA,EAAD,CAAMvI,UAAWX,EAAQhG,KAAM4G,UAAW,EAA1C,UApBIgI,EAEF,cAACO,GAAA,EAAD,CAAKjF,QAAQ,OAAOkF,eAAe,SAAnC,SACC,cAACC,GAAA,EAAD,MAI4B,KAAtBhB,EAAUL,QAAuB,GAGxC,cAACsB,GAAA,EAAD,CACC3I,UAAWX,EAAQqE,MACnBkF,MAAOlB,EAAUL,QACjBjH,MAAK,UAAKjJ,EAAKqP,QASjB,eAACqC,GAAA,EAAD,CAAa7I,UAAWX,EAAQsE,QAAhC,UACC,cAAChD,GAAA,EAAD,CAAYI,cAAY,EAACF,QAAQ,KAAKI,UAAU,KAAhD,SACE9J,EAAKqP,OAEP,cAAC7F,GAAA,EAAD,CAAYE,QAAQ,QAAQC,MAAM,gBAAlC,SACE3J,EAAK2R,cAEP,cAACnI,GAAA,EAAD,CACCE,QAAQ,QACRC,MAAM,gBACNG,UAAU,IAHX,SAKE9J,EAAK4R,kBAEP,cAACpI,GAAA,EAAD,CACCE,QAAQ,UACRC,MAAM,gBACNG,UAAU,IAHX,oBAKM9J,EAAK6R,YAAYC,EAAEC,QACvB,GANF,aAOO/R,EAAK6R,YAAYG,EAAED,QAAQ,GAPlC,UAUD,cAACE,GAAA,EAAD,CAAapJ,UAAWX,EAAQwE,QAAhC,SACC,eAACpE,GAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,SAAxB,UACC,cAACF,GAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,SAASC,MAAI,EAACC,GAAI,EAA1C,SACC,cAACyF,GAAA,EAAD,CAASlF,MAAM,UAAf,SACC,cAACmF,GAAA,EAAD,CACCtE,UAAWC,KACXhB,GAAE,iBAAY/I,EAAKJ,IAFpB,SAIC,cAACsS,GAAA,EAAD,CAAYvI,MAAM,kBAIpBsH,GACA,cAAC3I,GAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,SAASC,MAAI,EAACC,GAAI,EAA1C,SACC,cAAC,GAAD,CAAiBjH,OAAQzB,EAAKJ,gBC/G/BsH,GAAYC,aAAW,CAC5BgL,aAAiB,CAChB7K,MAAY,OACZD,OAAY,IAEZ,UAAY,CACXiF,SAAW,MAGb8F,eAAiB,CAChB9K,MAAY,OACZD,OAAY,IAEZ,UAAY,CACXiF,SAAW,QAMR+F,GAAgB,IAAIC,KAAiB,CAC1C9K,SAAa,WACb+K,YAAa,EACbC,SAAa,IAAIC,OAOlB,SAASC,GAAT,GAYI,IAAD,IAXFC,8BAWE,aAVFC,0BAUE,aATFC,uBASE,SARFC,EAQE,EARFA,gBAQE,IAPFC,iBAOE,MAPU,GAOV,MANFC,iBAME,MANU,CAAE,mBAAoB,oBAMhC,EALFC,EAKE,EALFA,aACAC,EAIE,EAJFA,uBAIE,IAHF7T,aAGE,aAFF8T,sBAEE,aADFC,aACE,SACIlL,EAAUhB,KADd,EAEsCuG,mBAAS,MAF/C,oBAEM4F,EAFN,KAEmBC,EAFnB,KAGFvF,qBACC,WACK8E,GACHC,GAAgB,KAGlB,CAAED,EAAiBC,IAKpB,IAAMS,EAAsB,WAY3B,OAXAC,aAAa,CACZC,MADY,SACNC,GACLJ,EAAeI,EAAIC,QAEnBT,EAAuB,CACtBU,IAAMF,EAAIC,OAAOC,IACjBC,IAAMH,EAAIC,OAAOE,MAElBpU,QAAQC,IAAI,cAAe2T,MAGN,OAAhBA,EAAuB,KAC7B,cAACS,GAAA,EAAD,CAAQtM,SAAU6L,EAAlB,SACC,eAACU,GAAA,EAAD,0CAA6BV,SAM1BW,EAAe,WAGpB,OAFYC,eACRC,OAAO,CAAEC,SAAS,IACf,MAIFC,EAAkB,WAGvB,OAFYH,eACRI,WAAWhC,IACR,MAIFiC,EAAqB,WAC1B,IAAMvE,EAAMyD,aAAa,CACxBe,QADwB,WAEvB9U,QAAQC,IAAIqQ,EAAIyE,aAChB,IAAMC,EAAS1E,EAAIyE,YACnBvB,EAAa,CAAEwB,EAAOb,IAAKa,EAAOZ,SAGpC,OAAO,MAGFa,EAAqB,cAACnD,GAAA,EAAD,IAE3B,OACC,eAACoD,GAAA,EAAD,CACC9L,UAAWuK,EAAQlL,EAAQkK,eAAiBlK,EAAQiK,aACpDyC,YAAaF,EACbG,OAAQ7B,EACR8B,KAAM/B,EACNgC,gBAAiB5B,EALlB,UAOC,cAAC6B,GAAA,EAAD,CACCrP,IAAI,qDACJsP,YAAY,2EAGZtC,GAA0B,cAACY,EAAD,IAC1BX,GAAsB,cAACwB,EAAD,IACtBvB,GAAmB,cAACmB,EAAD,IACnBf,GAAgB,cAACqB,EAAD,IAChBjV,GACAA,EAAM0Q,KAAI,SAAC/P,GAAD,OACT,cAAC8T,GAAA,EAAD,CAAkCtM,SAAU,CAAExH,EAAK6R,YAAYC,EAAG9R,EAAK6R,YAAYG,GAAnF,SACC,cAAC+B,GAAA,EAAD,CAAOlL,UAAWX,EAAQgN,gBAA1B,SACC,cAAC,GAAD,CAAWlV,KAAMA,OAFnB,iBAAuBA,EAAKJ,WASlBuV,WAAMC,KAAK1C,IC7H1B,SAAS2C,GAAT,GAAuF,IAA1DC,EAAyD,EAAzDA,SAAUC,EAA+C,EAA/CA,oBAAqBrC,EAA0B,EAA1BA,uBACrDhL,EAAUhB,KACVsO,EAAcC,kBAAO,GAF0D,EAGzChI,oBAAS,GAHgC,oBAG7EiI,EAH6E,KAG9DC,EAH8D,KAM/EC,EAAe,SAAClC,GACrB6B,EAAoB7B,EAAImC,SAMnBC,EAAeL,iBAAO,MAC5B1H,qBACC,WACK2H,GAAiBI,EAAaC,SAAWP,EAAYO,QACxDD,EAAaC,QAAQC,eAAe,CACnCC,SAAW,WAIZT,EAAYO,SAAU,IAGxB,CAAEL,IAaH,OACC,gCACC,eAACpN,GAAA,EAAD,CAAMG,MAAI,EAACF,WAAS,EAACkG,IAAKqH,EAA1B,UACC,cAACxN,GAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,SACC,cAACuN,GAAA,EAAD,CACCtW,GAAG,MACHyP,KAAK,MACL8G,MAAM,WACN3W,KAAK,SACL4W,WAAY,CAAEC,KAAM,MAAOC,KAAM,GAAIC,IAAK,IAC1CC,WAAS,EACTC,gBAAiB,CAAEC,QAAQ,GAC3B9B,YAAY,2BACZ+B,SAAUf,EACVgB,MAAOtB,EAAS1B,IAChBiD,UAAQ,MAGV,cAACvO,GAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,SACC,cAACuN,GAAA,EAAD,CACCtW,GAAG,MACHyP,KAAK,MACL8G,MAAM,YACN3W,KAAK,SACL4W,WAAY,CAAEC,KAAM,MAAOC,KAAM,IAAKC,IAAK,KAC3CC,WAAS,EACTC,gBAAiB,CAAEC,QAAQ,GAC3B9B,YAAY,+BACZ+B,SAAUf,EACVgB,MAAOtB,EAASzB,IAChBgD,UAAQ,SAIX,cAAChN,GAAA,EAAD,CAAQH,QAAQ,WAAWC,MAAM,YAAY6M,WAAS,EAACnI,QA5CjC,WACvBsH,GAAkBD,IA2CjB,SAxCMA,EAAgB,cAAClM,GAAA,EAAD,uBAAoC,cAACA,GAAA,EAAD,+BA2C1D,qBAAKX,UAAWX,EAAQiK,aAAc9I,MAxChCqM,EAAgB,GAAK,CAAEtJ,QAAS,QAwCtC,SACC,cAAC,GAAD,CAAY8G,uBAAwBA,EAAwBP,wBAAwB,SAKzEwC,WAAMC,KAAKC,ICKXyB,OArFf,YAAyC,IAAnBC,EAAkB,EAAlBA,eACf7O,EAAUhB,KAEV8P,EAAapJ,aAAY,SAACC,GAAD,OAAQA,EAAG1N,KAAKf,SAHR,EAWLqO,mBANR,CACzB9M,SAAW,GACXC,MAAW,GACXmD,SAAW,GACXlD,QAAW,KAT2B,oBAW/ByU,EAX+B,KAWrB2B,EAXqB,KAajCrB,EAAe,SAAClC,GAAS,IAAD,EACLA,EAAImC,OAApBxG,EADqB,EACrBA,KAAMuH,EADe,EACfA,MAEdK,GAAY,SAACC,GAAD,mBAAC,eACTA,GADQ,kBAEV7H,EAAQuH,QAQLO,EAAqB,SAACvL,GAC3B,OAAOD,GAAaC,EAAOoL,IAG5B,OACC,uBAAMI,SAVc,SAAC1D,GACrBA,EAAI2D,iBACJN,EAAezB,IAQezM,UAAWX,EAAQiE,KAAjD,UACC,cAAC+J,GAAA,EAAD,CACCtW,GAAG,WACHyP,KAAK,WACL8G,MAAM,WACNQ,SAAUf,EACVgB,MAAOtB,EAAS3U,SAChB2W,aAAa,WACbT,UAAQ,EACRT,WAAY,CAAEmB,UAAW,EAAGC,UAAW,IACvCpY,MAAOqY,QAAQN,EAAmB,aAClCO,WAAYP,EAAmB,cAEhC,cAACjB,GAAA,EAAD,CACCtW,GAAG,QACHyP,KAAK,QACL8G,MAAM,QACN3W,KAAK,QACLmX,SAAUf,EACVgB,MAAOtB,EAAS1U,MAChB0W,aAAa,QACbT,UAAQ,EACRT,WAAY,CAAEmB,UAAW,EAAGC,UAAW,IACvCpY,MAAOqY,QAAQN,EAAmB,UAClCO,WAAYP,EAAmB,WAEhC,cAACjB,GAAA,EAAD,CACCtW,GAAG,WACHyP,KAAK,WACL8G,MAAM,WACN3W,KAAK,WACLmX,SAAUf,EACVgB,MAAOtB,EAASvR,SAChBuT,aAAa,WACbT,UAAQ,EACRT,WAAY,CAAEmB,UAAW,GACzBnY,MAAOqY,QAAQN,EAAmB,aAClCO,WAAYP,EAAmB,cAWhC,cAACtN,GAAA,EAAD,CAAQH,QAAQ,YAAYC,MAAM,YAAYnK,KAAK,SAAnD,yBChFG0H,GAAYC,aAAW,CAC5BwQ,aAAe,CACdC,QAAU,IAEXzL,KAAe,CACdC,QAAgB,OAChBC,cAAgB,SAChB,QAAgB,CACfhB,aAAe,OA0DHwM,OArDf,WACC,IAAM3P,EAAUhB,KACViB,EAAQC,eACR0P,EAAUC,eACVjR,EAAWgH,cACXmD,EAAkBrD,aAAY,SAACC,GAAD,OAAQA,EAAG1N,KAAKD,iBAC9CS,EAAWiN,aAAY,SAACC,GAAD,OAAQA,EAAG1M,SAASR,YA2BjD,OAvBAoN,qBACC,WAEKkD,GACH6G,EAAQpH,KAAR,iBAAuB/P,MAGzB,CAAEsQ,EAAiBtQ,IAiBnB,cAAC2H,GAAA,EAAD,CAAMC,WAAS,EAACM,UAAWX,EAAQyP,aAAnC,SACC,eAACrP,GAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,UACC,cAACc,GAAA,EAAD,CAAYE,QAAQ,KAAKE,cAAY,EAArC,qBAGA,eAACJ,GAAA,EAAD,CAAYI,cAAY,EAAxB,6CACkC,IACjC,cAACG,GAAA,EAAD,CAAMD,UAAWkO,KAAYjP,GAAG,UAAUM,MAAO,CAAEM,MAAOxB,EAAMyC,QAAQsF,QAAQ+H,OAAhF,kBAFD,OAMA,cAAC3P,GAAA,EAAD,CAAMG,MAAI,EAAV,SACC,cAAC,GAAD,CAAYsO,eA1BO,SAACzB,GAEvB,IAAM3Q,EAAc,CACnB/D,MAAW0U,EAAS1U,MACpBmD,SAAWuR,EAASvR,UAGfmU,EAAQ,eAAQ5C,UACf4C,EAASnU,SAEhB+C,EhBvCF,SAAoBnC,EAAauT,GAEhC,OADAzY,QAAQC,IAAI,uBAAwBiF,EAAauT,GACjD,yCAAO,WAAepR,GAAf,oBAAA9C,EAAA,6DACN8C,EAAS,CAAEtH,KAAMnB,IADX,kBAIqByF,GAAOa,EAAY/D,MAAO+D,EAAYZ,UAJ3D,cAICoU,EAJD,gBAMgBhT,GAAgBiT,aAAhB,2BACjBF,GADiB,IAEpB9W,YAAc+W,EAAY3T,KAAK9D,OAR3B,cAMC2X,EAND,iBAWC/T,GAAc,CAAEgU,YAAaD,EAAO1X,WAXrC,QAYC4X,EAZD,2BAaDF,GAbC,IAcJpY,MAAQkY,EAAY3T,KAAKgU,eAE1B1R,EACCE,GAAS,CACR/G,MAAQkY,EAAY3T,KAAKgU,gBAG3B1R,EAASG,GAAasR,IACtBzR,EAAS,CAAEtH,KAAMlB,IAtBZ,kDAwBLmB,QAAQC,IAAI,mBAAZ,MACAoH,EAASC,GAAU,EAAD,KAClBD,EAAS,CAAEtH,KAAMjB,IA1BZ,0DAAP,sDgBqCUka,CAAW9T,EAAauT,eCcpBQ,OA5Df,YAAqC,IAAnB3B,EAAkB,EAAlBA,eACX7O,EAAUhB,KAEV8P,EAAapJ,aAAY,SAACC,GAAD,OAAQA,EAAG1N,KAAKf,SAHZ,EASDqO,mBAJR,CACzB7M,MAAW,GACXmD,SAAW,KAPuB,oBAS3BuR,EAT2B,KASjB2B,EATiB,KAW7BrB,EAAe,SAAClC,GAAS,IAAD,EACLA,EAAImC,OAApBxG,EADqB,EACrBA,KAAMuH,EADe,EACfA,MAEdK,GAAY,SAACC,GAAD,mBAAC,eACTA,GADQ,kBAEV7H,EAAQuH,QAOLO,EAAqB,SAACvL,GAC3B,OAAOD,GAAaC,EAAOoL,IAG5B,OACC,uBAAMI,SATc,SAAC1D,GACrBA,EAAI2D,iBACJN,EAAezB,IAOezM,UAAWX,EAAQiE,KAAjD,UACC,cAAC+J,GAAA,EAAD,CACCtW,GAAG,QACHyP,KAAK,QACL8G,MAAM,QACN3W,KAAK,QACLmX,SAAUf,EACVgB,MAAOtB,EAAS1U,MAChB0W,aAAa,QACbT,UAAQ,EACRT,WAAY,CAAEmB,UAAW,EAAGC,UAAW,IACvCpY,MAAOqY,QAAQN,EAAmB,UAClCO,WAAYP,EAAmB,WAEhC,cAACjB,GAAA,EAAD,CACCtW,GAAG,WACHyP,KAAK,WACL8G,MAAM,WACN3W,KAAK,WACLmX,SAAUf,EACVgB,MAAOtB,EAASvR,SAChBuT,aAAa,WACbT,UAAQ,EACRzX,MAAOqY,QAAQN,EAAmB,aAClCO,WAAYP,EAAmB,cAEhC,cAACtN,GAAA,EAAD,CAAQF,MAAM,YAAYD,QAAQ,YAAYlK,KAAK,SAAnD,yBCrDG0H,GAAYC,aAAW,CAC5BwQ,aAAe,CACdC,QAAU,IAEXzL,KAAe,CACdC,QAAgB,OAChBC,cAAgB,SAChB,QAAgB,CACfhB,aAAe,OAkDHqN,OA7Cf,WACCjZ,QAAQC,IAAI,4BACZ,IAAMwI,EAAUhB,KACViB,EAAQC,eACRtB,EAAWgH,cACXgK,EAAUC,eACV9G,EAAkBrD,aAAY,SAACC,GAAD,OAAQA,EAAG1N,KAAKD,iBAC9CS,EAAWiN,aAAY,SAACC,GAAD,OAAQA,EAAG1M,SAASR,YAC3CxB,EAASyO,aAAY,SAACC,GAAD,OAAQA,EAAG1M,SAAShC,UAkB/C,OAdA4O,qBACC,YAEMkD,GAA8B,SAAX9R,GAAiC,eAAXA,IAC7C2Y,EAAQpH,KAAR,iBAAuB/P,MAGzB,CAAEsQ,EAAiBtQ,EAAUmX,EAAS3Y,IAQtC,cAACmJ,GAAA,EAAD,CAAMC,WAAS,EAACM,UAAWX,EAAQyP,aAAnC,SACC,eAACrP,GAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,UACC,cAACc,GAAA,EAAD,CAAYE,QAAQ,KAAKE,cAAY,EAArC,qBAGA,eAACJ,GAAA,EAAD,CAAYI,cAAY,EAAxB,2CACgC,IAC/B,cAACG,GAAA,EAAD,CAAMD,UAAWkO,KAAYjP,GAAG,UAAUM,MAAO,CAAEM,MAAOxB,EAAMyC,QAAQsF,QAAQ+H,OAAhF,kBAEQ,IAJT,4DAQA,cAACU,GAAD,CAAY5B,eAlBQ,SAACzB,GlBGzB,IAAoB3Q,EkBFlBmC,GlBEkBnC,EkBFE2Q,ElBGrB7V,QAAQC,IAAI,oBAAqBiF,GAEjC,yCAAO,WAAemC,GAAf,oBAAA9C,EAAA,6DACN8C,EAAS,CAAEtH,KAAMnB,IADX,kBAIqB8F,GAAOQ,EAAY/D,MAAO+D,EAAYZ,UAJ3D,cAICoU,EAJD,gBAMgBhT,GAAgByT,QAAQT,EAAY3T,KAAK8T,aANzD,OAMCD,EAND,OAOCE,EAPD,2BAQDF,GARC,IASJpY,MAAQkY,EAAY3T,KAAKgU,eAE1B1R,EACCE,GAAS,CACR/G,MAAQkY,EAAY3T,KAAKgU,gBAG3B1R,EAASG,GAAasR,IACtBzR,EAAS,CAAEtH,KAAMlB,IAjBZ,kDAmBLmB,QAAQC,IAAI,mBAAZ,MACAoH,EAASC,GAAU,EAAD,KAClBD,EAAS,CAAEtH,KAAMjB,IArBZ,0DAAP,iEmBzCK2I,GAAYC,aAAW,CAC5BwQ,aAAe,CACdC,QAAU,IAEXzL,KAAe,CACdC,QAAgB,OAChBC,cAAgB,SAChB,QAAgB,CACfhB,aAAe,OA4KHwN,OAvKf,WACC,IAAM3Q,EAAUhB,KACV4Q,EAAUC,eACVjR,EAAWgH,cAHE,EAISF,aAAY,SAACC,GAAD,OAAQA,EAAG1M,YAA3CR,EAJW,EAIXA,SAAUvB,EAJC,EAIDA,MACZD,EAASyO,aAAY,SAACC,GAAD,OAAQA,EAAG1M,SAAShC,UAL5B,EAeesO,mBARR,CACzBqL,cAAmB,GACnBC,iBAAmB,GACnBpY,SAAmB,GACnBqY,UAAmB,GACnBC,aAAmB,GACnBpY,QAAmB,KAbD,oBAeXyU,EAfW,KAeD2B,EAfC,KAoBJ,YAAX9X,GACH2Y,EAAQpH,KAAR,iBAAuB/P,IAGxB,IAAMiV,EAAe,SAAClC,GAAS,IAAD,EACLA,EAAImC,OAApBxG,EADqB,EACrBA,KAAMuH,EADe,EACfA,MAEdK,GAAY,SAACC,GAAD,mBAAC,eACTA,GADQ,kBAEV7H,EAAQuH,QAkCLO,EAAqB,SAACvL,GAC3B,OAAOD,GAAaC,EAAOxM,IAG5B,OACC,eAACkJ,GAAA,EAAD,CAAMC,WAAS,EAACM,UAAWX,EAAQyP,aAAcuB,UAAU,SAA3D,UACC,cAAC5Q,GAAA,EAAD,CAAMG,MAAI,EAAV,SACC,cAACe,GAAA,EAAD,CAAYE,QAAQ,KAAKE,cAAY,EAArC,yBAID,cAACqB,GAAA,EAAD,CAASvB,QAAQ,SAASL,MAAO,CAAEgC,aAAc,MACjD,cAAC/C,GAAA,EAAD,CAAMC,WAAS,EAACE,MAAI,EAACC,GAAI,GAAzB,SACC,cAACJ,GAAA,EAAD,CAAMC,WAAS,EAAC2Q,UAAU,SAASzQ,MAAI,EAACC,GAAI,GAA5C,SACC,uBAAM0O,SAxCW,SAAC1D,GACrBA,EAAI2D,iBAGJ,IAAM1S,EAAc,CACnB/D,MAAW0U,EAASwD,cACpB/U,SAAWuR,EAASyD,kBAIfb,EAAW,CAChBvX,SAAW2U,EAAS3U,SACpBE,QAAWyU,EAASzU,QACpBD,MAAW0U,EAAS0D,UACpBjV,SAAWuR,EAAS2D,cAGrB,IAAK,IAAIrN,KAASsM,EACO,KAApBA,EAAStM,WACLsM,EAAStM,GAGlBnM,QAAQC,IAAI,sCAAuCwY,GACnDpR,EVtEF,SAAsBnC,EAAahE,EAAUiF,GAE5C,OADAnG,QAAQC,IAAI,kCAAmCiF,EAAahE,EAAUiF,GACtE,yCAAO,WAAekB,GAAf,gBAAA9C,EAAA,6DACN8C,EAAS,CAAEtH,KAAMnB,IADX,kBAGCqG,GAAeC,GAHhB,uBAMcQ,GAAgBgU,WAAWxY,EAAUiF,GANnD,UAMCpB,EAND,QAODoB,EAAKhF,MAPJ,kCAQE8D,GAAe,CACpB9D,MAAWgF,EAAKhF,MAChBmD,SAAWY,EAAYZ,WAVpB,QAaL+C,EAASG,GAAazC,IACtB/E,QAAQC,IAAI,oCAAqC8E,GACjDsC,EAAS,CAAEtH,KAAMlB,IAfZ,kDAiBLmB,QAAQC,IAAI,gCAAZ,MACAoH,EAASgG,GAAc,EAAD,KACtBhG,EAAS,CAAEtH,KAAMjB,IAnBZ,0DAAP,sDUoEU6a,CAAazU,EAAahE,EAAUuX,KAiBZrP,UAAWX,EAAQiE,KAAjD,UACC,cAAC7D,GAAA,EAAD,CAAMG,MAAI,EAAV,SACC,cAACe,GAAA,EAAD,uDAED,cAAClB,GAAA,EAAD,CAAMG,MAAI,EAAV,SACC,cAACyN,GAAA,EAAD,CACCM,WAAS,EACT5W,GAAG,WACHyP,KAAK,WACL8G,MAAM,eACNQ,SAAUf,EACVgB,MAAOtB,EAAS3U,SAChByV,WAAY,CAAEoB,UAAW,IACzBpY,MAAOqY,QAAQN,EAAmB,aAClCO,WAAYP,EAAmB,gBAGjC,cAAC7O,GAAA,EAAD,CAAMG,MAAI,EAAV,SACC,cAACyN,GAAA,EAAD,CACCM,WAAS,EACT5W,GAAG,YACHyP,KAAK,YACL8G,MAAM,YACN3W,KAAK,QACLmX,SAAUf,EACVgB,MAAOtB,EAAS0D,UAChB1B,aAAa,QACblY,MAAOqY,QAAQN,EAAmB,UAClCO,WAAYP,EAAmB,aAGjC,cAAC7O,GAAA,EAAD,CAAMG,MAAI,EAAV,SACC,cAACyN,GAAA,EAAD,CACCM,WAAS,EACT5W,GAAG,eACHyP,KAAK,eACL8G,MAAM,eACN3W,KAAK,WACLmX,SAAUf,EACVgB,MAAOtB,EAAS2D,aAChB7C,WAAY,CAAEmB,UAAW,GACzBnY,MAAOqY,QAAQN,EAAmB,iBAClCO,WAAYP,EAAmB,oBAejC,eAAC7O,GAAA,EAAD,CAAMG,MAAI,EAAV,UACC,cAACe,GAAA,EAAD,CAAYE,QAAQ,YAApB,4BAEA,cAACwM,GAAA,EAAD,CACCM,WAAS,EACT5W,GAAG,mBACHyP,KAAK,mBACL8G,MAAM,mBACN3W,KAAK,WACLmX,SAAUf,EACVgB,MAAOtB,EAASyD,iBAChB3C,WAAY,CAAEmB,UAAW,GACzBnY,MAAOqY,QAAQN,EAAmB,aAClCO,WAAYP,EAAmB,iBAGjC,eAAC7O,GAAA,EAAD,CAAMC,WAAS,EAACE,MAAI,EAACD,QAAQ,gBAAgBa,MAAO,CAAE+B,YAAa,GAAID,aAAc,IAArF,UACC,cAACtB,GAAA,EAAD,CAAQwE,QAtHO,WACpByJ,EAAQpH,KAAR,iBAAuB/P,KAqHa+I,QAAQ,YAAYC,MAAM,YAAzD,qBAGA,cAACE,GAAA,EAAD,CAAQH,QAAQ,YAAYC,MAAM,UAAUnK,KAAK,SAAjD,sC,uCCzKD0H,GAAYC,cAAW,SAACgB,GAC7B,MAAO,CACNkR,WAAgB,CAAEhS,OAAQ,IAAKC,MAAO,QACtCgS,cAAgB,CACf,cAAgB,CACf3O,gBAAkBxC,EAAMyC,QAAQsF,QAAQqJ,SAG1CnS,SAAgB,CACfkK,eAAiB,SACjBlI,WAAiB,SACjBwO,QAAiB,EACjB3N,cAAiB,OAKpB,SAASuP,GAAT,GAAoE,IAAD,IAA5CC,qBAA4C,SAAtBC,EAAsB,EAAtBA,mBACtCvR,EAAQC,eACRF,EAAUhB,GAAUiB,GAFwC,EAG9BsF,mBAAS,IAHqB,oBAG1D8C,EAH0D,KAG/CS,EAH+C,OAIhCvD,mBAAS,IAJuB,oBAI1DkM,EAJ0D,KAIhDC,EAJgD,KAOlE7L,qBACC,WACCtO,QAAQC,IAAI,qBAAsBia,GAClCD,EAAmBC,KAEpB,CAAEA,EAAUD,IAGb,IAAMG,EAA4B,SAACC,GAClC,IAAMC,EAAsB,IAAIC,WAEhC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC5BJ,EAAoBK,QAAU,WAC7BL,EAAoBM,QACpBF,EAAO,IAAIG,aAAa,iCAGzBP,EAAoBQ,OAAS,WAC5BL,EAAQH,EAAoBS,SAE7BT,EAAoBU,cAAcX,OAI9BY,EAAqB,yCAAG,WAAOxL,GAAP,oBAAAlL,EAAA,sDAC7BvE,QAAQC,IAAI,wBAAyBwP,GACjCyL,EAAO,GAEFC,EAAI,EAJgB,YAIbA,EAAI1L,EAAMrD,QAJG,iCAKVgO,EAA0B3K,EAAM0L,IALtB,OAKtBjV,EALsB,OAM5BgV,EAAKjK,KAAK/K,GANkB,OAIKiV,IAJL,uBAS7B5J,EAAa2J,GATgB,4CAAH,sDAYrB/E,EAAY,yCAAG,WAAOlC,GAAP,kBAAA1P,EAAA,sDACdkL,EAAQwE,EAAImC,OAAO3G,MACnB2L,EAAWra,MAAMsa,KAAK5L,GAC5BzP,QAAQC,IAAI,WAAYmb,GAExBH,EAAsBxL,GACtB0K,GAAY,SAACD,GACZ,OAAOkB,KAPY,2CAAH,sDAWZE,EAAsB,SAACrH,GAC5B,IAAMsH,EAAYtH,EAAIuH,cAAcC,SAAS,GAAGhS,IAC1CiG,EAAMoB,EAAU4K,WAAU,SAACxV,GAAD,OAASA,IAAQqV,KACjDvb,QAAQC,IAAI,0BAA2ByP,GAEvC6B,GAAa,SAACT,GACb,IAAM6K,EAAe7K,EAAU/O,QAAO,SAACmE,GAAD,OAASA,IAAQqV,KAEvD,OADAI,EAAaC,QAAQL,GACdI,KAGR3b,QAAQC,IAAI,+BAAgCia,GAC5CC,GAAY,SAACD,GACZ,MAAM,CAAGA,EAASxK,IAAlB,oBAA2BwK,EAAS2B,MAAM,EAAGnM,IAA7C,aAAsDwK,EAAS2B,MAAMnM,EAAM,QAE5E1P,QAAQC,IAAI,oCAAqCia,IAGlD,OACC,eAACrR,GAAA,EAAD,CAAMC,WAAS,EAACM,UAAU,cAA1B,UACC,eAACP,GAAA,EAAD,CAAMG,MAAI,EAAV,UACC,cAAC8S,GAAA,EAAD,CACCC,OAAO,UACPnS,MAAO,CAAE+C,QAAS,QAClBxM,GAAG,cACHJ,KAAK,OACL4W,WAAY,CAAEqF,SAAUhC,GACxB9C,SAAUf,IAEX,cAAC/L,GAAA,EAAD,CAAQH,QAAQ,WAAWC,MAAM,UAAU+R,QAAQ,cAAc5R,UAAU,QAA3E,SACE2P,EAAgB,gBAAkB,iBAEnCA,GACA,cAACjQ,GAAA,EAAD,+FAKF,cAAClB,GAAA,EAAD,CAAMC,WAAS,EAACE,MAAI,EAACC,GAAI,GAAIF,QAAQ,SAASK,UAAWX,EAAQoR,cAAjE,SACE/I,EAAUR,KAAI,SAACpK,EAAKwJ,GAAN,OACd,cAACkC,GAAA,EAAD,CAAesK,GAAI,EAAnB,SACC,cAAC/S,GAAA,EAAD,CACCE,UAAW,EACXuF,QAAS0M,EACTlS,UAAW0H,EAAU,KAAO5K,EAAjB,UAA0BuC,EAAQd,SAAlC,aAAwDc,EAAQd,SAH5E,SAKC,qBAAKyB,UAAWX,EAAQmR,WAAYnQ,IAAKvD,OANjCA,WAcAwP,WAAMC,KAAKoE,IC3BXoC,OA7Ff,YAAwE,IAAD,IAAxCC,YAAwC,SAA1BvG,EAA0B,EAA1BA,SAAUwG,EAAgB,EAAhBA,aAChD5T,EAAUhB,KAEV0O,EAAe,SAAClC,GACrBoI,EAAapI,EAAImC,SAGlB,OACC,eAACvN,GAAA,EAAD,CAAMC,WAAS,EAACM,UAAWX,EAAQiE,KAAnC,UACC,cAAC+J,GAAA,EAAD,CACCtW,GAAG,OACHyP,KAAK,OACL8G,MAAM,YACNvB,YAAY,WACZ+B,SAAUf,EACVgB,MAAOtB,EAASjG,KAChBwH,UAAWgF,IAEZ,cAAC3F,GAAA,EAAD,CACCtW,GAAG,cACHyP,KAAK,cACL8G,MAAM,cACN4F,WAAS,EACTnH,YAAY,qCACZ+B,SAAUf,EACVgB,MAAOtB,EAAS0G,cAGjB,cAAC9F,GAAA,EAAD,CACCtW,GAAG,cACHyP,KAAK,cACL8G,MAAM,sBACNvB,YAAY,gBACZ+B,SAAUf,EACVgB,MAAOtB,EAAS3D,cAGjB,cAACuE,GAAA,EAAD,CACCtW,GAAG,kBACHyP,KAAK,kBACL8G,MAAM,yBACNvB,YAAY,oBACZ+B,SAAUf,EACVgB,MAAOtB,EAAS1D,kBAGjB,cAACsE,GAAA,EAAD,CACCtW,GAAG,SACHyP,KAAK,SACL8G,MAAM,eACN3W,KAAK,SACLoV,YAAY,mCACZwB,WAAY,CAAEE,IAAK,EAAGC,IAAK,IAAKF,KAAM,KACtCM,SAAUf,EACVgB,MAAOtB,EAASjO,SAEjB,cAAC6O,GAAA,EAAD,CACCtW,GAAG,MACHyP,KAAK,MACL8G,MAAM,iCACN3W,KAAK,SACL4W,WAAY,CAAEE,IAAK,EAAGC,IAAK,IAAKF,KAAM,KACtCzB,YAAY,8CACZ+B,SAAUf,EACVgB,MAAOtB,EAAS2G,MAEjB,eAAC/F,GAAA,EAAD,CACCtW,GAAG,YACHyP,KAAK,YACL8G,MAAM,YACN+F,QAAM,EACNvF,SAAUf,EACVgB,MAAOtB,EAAS6G,UANjB,UAQC,cAACC,GAAA,EAAD,CAAUxF,MAAM,GAAhB,qBACA,cAACwF,GAAA,EAAD,CAAUxF,MAAM,YAAhB,uBACA,cAACwF,GAAA,EAAD,CAAUxF,MAAM,YAAhB,0BAED,cAACyF,GAAA,EAAD,CACCC,QACC,cAACC,GAAA,EAAD,CACC3c,GAAG,gBACHyP,KAAK,gBACLsH,SAAUf,EACV4G,QAASlH,EAASmH,cAClB9S,MAAM,YAGRwM,MAAM,8ECxFV,SAASuG,GAAW1c,EAAM2c,GAEzB,OADAld,QAAQC,IAAI,4BAA6BM,EAAM2c,GAC/C,yCAAO,WAAe7V,GAAf,gBAAA9C,EAAA,6DACN8C,EAAS,CAAEtH,KAAMlC,IADX,kBAGa6H,GAAgBuX,WAAW1c,GAHxC,cAGCkE,EAHD,OAILzE,QAAQC,IAAI,2BAA4BwE,GAJnC,SAKC8K,GAAuBN,GAAUxK,EAAItE,GAAI+c,GAL1C,cAML7V,EAAS8V,GAAQ1Y,IACjB4C,EAAS,CAAEtH,KAAMjC,IAPZ,kBAQE2G,EAAItE,IARN,yCAULH,QAAQC,IAAI,2BAAZ,MACAoH,EAAS+V,GAAU,EAAD,KAClB/V,EAAS,CAAEtH,KAAMhC,IAZZ,mBAaE,GAbF,0DAAP,sDAkBD,SAASsf,GAAQld,GAChB,gDAAO,WAAekH,GAAf,gBAAA9C,EAAA,6DACN8C,EAAS,CAAEtH,KAAMlC,IADX,kBAGa6H,GAAgB2X,QAAQld,GAHrC,OAGCsE,EAHD,OAILzE,QAAQC,IAAI,wBAAyBwE,GACrC4C,EAAS8V,GAAQ1Y,IACjB4C,EAAS,CAAEtH,KAAMjC,IANZ,kDAQLkC,QAAQC,IAAI,wBAAZ,MACAoH,EAAS+V,GAAU,EAAD,KAClB/V,EAAS,CAAEtH,KAAMhC,IAVZ,0DAAP,sDAcD,SAASuf,GAAS9W,GACjB,gDAAO,WAAea,GAAf,gBAAA9C,EAAA,6DACN8C,EAAS,CAAEtH,KAAMlC,IADX,kBAGa6H,GAAgB4X,SAAS9W,GAHtC,OAGC/B,EAHD,OAILzE,QAAQC,IAAI,yBAA0BwE,GACtC4C,EAsDK,CAAEtH,KAAMrC,EAAYwC,QAtDPuE,IAClB4C,EAAS,CAAEtH,KAAMjC,IANZ,kDAQLkC,QAAQC,IAAI,yBAAZ,MACAoH,EAAS+V,GAAU,EAAD,KAClB/V,EAAS,CAAEtH,KAAMhC,IAVZ,0DAAP,sDAcD,SAASwf,GAAWvb,EAAQmE,EAAM+W,GACjC,gDAAO,WAAe7V,GAAf,gBAAA9C,EAAA,6DACN8C,EAAS,CAAEtH,KAAMlC,IADX,kBAGa6H,GAAgB6X,WAAWvb,EAAQmE,GAHhD,UAGC1B,EAHD,OAILzE,QAAQC,IAAI,2BAA4BwE,KACpCyY,EAAW9Q,OAAS,GALnB,wBAMJpM,QAAQC,IAAI,qCAAsCid,GAN9C,UAOEhM,GAAyBjC,GAAUjN,GAPrC,yBAQEuN,GAAuBN,GAAUjN,EAAQkb,GAR3C,QAUL7V,EAAS8V,GAAQ1Y,IACjB4C,EAAS,CAAEtH,KAAMjC,IAXZ,kDAaLkC,QAAQC,IAAI,2BAAZ,MACAoH,EAAS+V,GAAU,EAAD,KAClB/V,EAAS,CAAEtH,KAAMhC,IAfZ,0DAAP,sDAoBD,SAASyf,GAAWxb,GAEnB,OADAhC,QAAQC,IAAI,+BAAgC+B,GAC5C,yCAAO,WAAeqF,GAAf,gBAAA9C,EAAA,6DACN8C,EAAS,CAAEtH,KAAMlC,IADX,kBAGa6H,GAAgB8X,WAAWxb,GAHxC,cAGCyC,EAHD,OAILzE,QAAQC,IAAI,2BAA4BwE,GAJnC,SAKCyM,GAAyBjC,GAAUjN,GALpC,wBAMCqF,EAASoW,GAAYzb,IANtB,yBAOCqF,EAAS,CAAEtH,KAAMjC,IAPlB,kCAQE,GARF,yCAULkC,QAAQC,IAAI,2BAAZ,MACAoH,EAAS+V,GAAU,EAAD,KAClB/V,EAAS,CAAEtH,KAAMhC,IAZZ,mBAaE,GAbF,0DAAP,sDAkBD,SAASof,GAAQ5c,GAChB,MAAO,CAAER,KAAMtC,EAAWyC,QAASK,GAKpC,SAASkd,GAAYzb,GACpB,MAAO,CAAEjC,KAAMpC,EAAauC,QAAS8B,GAEtC,SAASob,GAAUzd,GAClB,MAAO,CAAEI,KAAMnC,EAAYsC,QAASP,GClGrC,IAAM8H,GAAYC,aAAW,CAC5BwQ,aAAe,CACdC,QAAkB,GAClBjN,gBAAkB,SAEnBwB,KAAe,CACdC,QAAgB,OAChBC,cAAgB,SAChB,QAAgB,CACfhB,aAAe,OAyHH8R,OApHf,WACC,IAAMrF,EAAUC,eACVjR,EAAWgH,cACX7L,EAAS2L,aAAY,SAACC,GAAD,OAAQA,EAAG1M,SAAST,OAWzCwH,EAAUhB,KAdQ,EAekBuG,mBAXX,CAC9B4B,KAAkB,GAClB2M,YAAkB,GAClBrK,YAAkB,GAClBC,gBAAkB,GAClBvK,OAAkB,GAClB4U,IAAkB,GAClBE,UAAkB,GAClBM,eAAkB,IAZK,oBAehBW,EAfgB,KAeFC,EAfE,OAgBgB5P,mBAAS,CAAEmG,IAAK,GAAIC,IAAK,KAhBzC,oBAgBhByJ,EAhBgB,KAgBHC,EAhBG,OAiBc9P,mBAAS,IAjBvB,oBAiBhBkP,EAjBgB,KAiBJa,EAjBI,KAmBxB/d,QAAQC,IAAI,mCAAoC4d,GAChD7d,QAAQC,IAAI,kCAAmCid,GAE/C,IAkCMc,EAAY,yCAAG,WAAO/J,GAAP,oBAAA1P,EAAA,sDAWpB,IAAS4H,KAVT8H,EAAI2D,iBAEAhR,EAHgB,2BAIhB+W,GAJgB,IAKnBvL,YAAc,CACb6L,SAAYC,WAAWL,EAAY1J,KACnCgK,UAAYD,WAAWL,EAAYzJ,QAKb,KAAnBxN,EAAQuF,UACJvF,EAAQuF,GAEG,WAAVA,GAAgC,QAAVA,IAC9BvF,EAAQuF,GAAS+R,WAAWtX,EAAQuF,KAhBlB,OAmBpBnM,QAAQC,IAAI,gBAAiB2G,GAnBT,SAoBCS,EAAS4V,GAAWrW,EAASsW,IApB9B,OAoBdlb,EApBc,OAqBpBqF,EAAS6F,GAAgB1K,EAAQR,IAE7BA,IACHhC,QAAQC,IAAI,yBAA0B+B,GACtCqW,EAAQpH,KAAR,iBAAuBjP,KAzBJ,2CAAH,sDA6BlB,OACC,sBAAKoH,UAAWX,EAAQyP,aAAxB,UACC,cAACnO,GAAA,EAAD,CAAYE,QAAQ,KAAKE,cAAY,EAArC,6BAGA,uBAAMwN,SAAUqG,EAAc5U,UAAWX,EAAQiE,KAAjD,UACC,cAAC,GAAD,CAAqBmJ,SAAU8H,EAActB,aArEnB,SAAClW,GAAU,IACjCyJ,EAAgBzJ,EAAhByJ,KAAMuH,EAAUhR,EAAVgR,MACC,kBAATvH,IACHuH,EAAQhR,EAAK4W,SAGda,GAAgB,SAACnG,GAAD,mBAAC,eACbA,GADY,kBAEd7H,EAAQuH,UA8DR,cAACpN,GAAA,EAAD,CAAYE,QAAQ,KAAKE,cAAY,EAArC,2BAGA,cAAC,GAAD,CACC0L,SAAUgI,EACV/H,oBA/D4B,SAAC3P,GAChCnG,QAAQC,IAAI,0CAA2CkG,GADd,IAEjCyJ,EAAgBzJ,EAAhByJ,KAAMuH,EAAUhR,EAAVgR,MAEd2G,GAAe,SAACrG,GAAD,mBAAC,eACZA,GADW,kBAEb7H,EAAQuH,QA0DP1D,uBAtD+B,SAACuB,GACnChV,QAAQC,IAAI,6CAA8C+U,GAE1D8I,EAAe9I,MAqDb,cAACxJ,GAAA,EAAD,CAASvB,QAAQ,SAASL,MAAO,CAAEwU,UAAW,GAAIxS,aAAc,MAChE,gCACC,cAAC7B,GAAA,EAAD,CAAYE,QAAQ,KAAKE,cAAY,EAArC,wBAGA,cAAC,GAAD,CAAa8P,mBAvDc,SAACxK,GAC/BsO,EAActO,MAuDX,cAACjE,GAAA,EAAD,CAASvB,QAAQ,SAASL,MAAO,CAAEgC,aAAc,SAGlD,cAACxB,GAAA,EAAD,CAAQF,MAAM,YAAYD,QAAQ,YAAYlK,KAAK,SAAnD,gCChJW,OAA0B,2CCSnC0H,GAAYC,cAAW,SAACgB,GAC7B,MAAO,CACNkC,gBAAe,aACdA,gBAAe,cAAuByT,GAAvB,KACftT,iBAA+B,YAC/BC,mBAA+B,SAC/BC,eAA+B,QAC/BC,gBAA+B,QAC/BtD,OAAM,uBAAyCc,EAAM4V,OAAOC,QAAQC,UAA9D,QACL9V,EAAM+V,YAAYC,GAAG,MAAQ,CAC7B9W,OAAS,2BAgCE+W,OA1Bf,WACC,IAAMjW,EAAQC,eACRF,EAAUhB,GAAUiB,GAE1B,OACC,cAACG,GAAA,EAAD,CAAMC,WAAS,EAACM,UAAWX,EAAQmC,gBAAiBjB,WAAW,SAA/D,SACC,eAACd,GAAA,EAAD,CACCC,WAAS,EACTE,MAAI,EACJD,QAAQ,SACR0Q,UAAU,SACV7P,MAAO,CAAEsB,gBAAiB,iBAAkBV,cAAe,IAL5D,UAOC,cAACT,GAAA,EAAD,CAAYC,MAAM,SAASC,QAAQ,KAAKL,MAAO,CAAEM,MAAO,QAAS2B,WAAY,QAAU1B,cAAY,EAAnG,4BAGA,eAACJ,GAAA,EAAD,CAAYC,MAAM,SAASC,QAAQ,KAAKL,MAAO,CAAEM,MAAO,SAAxD,qDAC0C,IACzC,cAACI,GAAA,EAAD,CAAMD,UAAWkO,KAAYjP,GAAG,IAAIM,MAAO,CAAEM,MAAOxB,EAAMyC,QAAQsF,QAAQqJ,QAA1E,kBAFD,a,8BCsKW8E,OA1Lf,YAAyD,IAA/BrL,EAA8B,EAA9BA,UAAWF,EAAmB,EAAnBA,gBAC9B5K,EAAUhB,KACVJ,EAAWgH,cAEjBrO,QAAQC,IAAI,6BAA8BsT,GAJa,MAMrBvF,mBAAS,CAC1C6Q,OAAgB,GAChBC,SAAgB,GAChBpC,UAAgB,GAChBM,eAAgB,EAChB+B,WAAgB,GAChBC,WAAgB,GAChBC,QAAgB,GAChBC,QAAgB,KAdsC,oBAM/CrJ,EAN+C,KAMrC2B,EANqC,KAiBjDrB,EAAe,SAAClC,GACrB,IAAMrE,EAAOqE,EAAImC,OAAOxG,KAClBuH,EAAiB,kBAATvH,EAA2BqE,EAAImC,OAAO2G,QAAU9I,EAAImC,OAAOe,MAEzEK,GAAY,SAACC,GAAD,mBAAC,eACTA,GADQ,kBAEV7H,EAAQuH,QAoCX,OACC,sBAAMQ,SAjCc,SAAC1D,GACrBA,EAAI2D,iBACJJ,EAAY3B,GAEZ,IAAMrP,EAAe,CACpBqY,OAAgBhJ,EAASgJ,OACzBC,SAAgBZ,WAAWrI,EAASiJ,WAAa,GACjDK,aAAgB5L,EAAU,GAC1B6L,aAAgB7L,EAAU,GAC1BmJ,UAAgB7G,EAAS6G,UACzBM,cAAgBnH,EAASmH,eAAiB,GAC1C+B,WAAgBb,WAAWrI,EAASkJ,aAAe,GACnDC,WAAgBd,WAAWrI,EAASmJ,aAAe,GACnDC,QAAgBf,WAAWrI,EAASoJ,UAAY,GAChDC,QAAgBhB,WAAWrI,EAASqJ,UAAY,IAGjD,IAAK,IAAI/S,KAAS3F,EACW,KAAxBA,EAAa2F,WACT3F,EAAa2F,GAItBnM,QAAQC,IAAI,eAAgBuG,GAC5Ba,EAASiW,GAAS9W,KASY4C,UAAWX,EAAQiE,KAAjD,SACC,eAAC7D,GAAA,EAAD,CAAMC,WAAS,EAAf,UACC,cAACD,GAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIG,UAAWX,EAAQiE,KAAtC,SACC,cAAC+J,GAAA,EAAD,CACCtW,GAAG,SACHyP,KAAK,SACL8G,MAAM,cACNvB,YAAY,oDACZ+B,SAAUf,EACVgB,MAAOtB,EAASgJ,WAIlB,eAAChW,GAAA,EAAD,CAAMC,WAAS,EAACE,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAjC,UACC,eAACL,GAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,UACC,cAACc,GAAA,EAAD,CAAYE,QAAQ,YAApB,0BACA,cAACwM,GAAA,EAAD,CACCtW,GAAG,aACHyP,KAAK,aACL8G,MAAM,MACN3W,KAAK,SACL4W,WAAY,CAAEE,IAAK,EAAGC,IAAK,IAAKF,KAAM,KACtCM,SAAUf,EACVgB,MAAOtB,EAASkJ,aAEjB,cAACtI,GAAA,EAAD,CACCtW,GAAG,aACHyP,KAAK,aACL8G,MAAM,MACN3W,KAAK,SACL4W,WAAY,CAAEE,IAAK,EAAGC,IAAK,IAAKF,KAAM,KACtCM,SAAUf,EACVgB,MAAOtB,EAASmJ,gBAGlB,eAACnW,GAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,UACC,cAACc,GAAA,EAAD,CAAYE,QAAQ,YAApB,uBACA,cAACwM,GAAA,EAAD,CACCtW,GAAG,UACHyP,KAAK,UACL8G,MAAM,MACN3W,KAAK,SACL4W,WAAY,CACXE,IAAO,EACPC,IAAO,IACPF,KAAO,KAERM,SAAUf,EACVgB,MAAOtB,EAASoJ,UAEjB,cAACxI,GAAA,EAAD,CACCtW,GAAG,UACHyP,KAAK,UACL8G,MAAM,MACN3W,KAAK,SACL4W,WAAY,CACXE,IAAO,EACPC,IAAO,IACPF,KAAO,KAERM,SAAUf,EACVgB,MAAOtB,EAASqJ,gBAInB,eAACrW,GAAA,EAAD,CAAMC,WAAS,EAACE,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAjC,UACC,cAACL,GAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAGC,GAAI,GAAtB,SACC,eAACuN,GAAA,EAAD,CACCtW,GAAG,YACHyP,KAAK,YACL8G,MAAM,YACN+F,QAAM,EACNvF,SAAUf,EACVgB,MAAOtB,EAAS6G,UAChB3F,WAAS,EAPV,UASC,cAAC4F,GAAA,EAAD,CAAUxF,MAAM,GAAhB,iBACA,cAACwF,GAAA,EAAD,CAAUxF,MAAM,YAAhB,uBACA,cAACwF,GAAA,EAAD,CAAUxF,MAAM,YAAhB,4BAGF,cAACtO,GAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAGC,GAAI,GAAtB,SACC,cAAC0T,GAAA,EAAD,CACCC,QACC,cAACC,GAAA,EAAD,CACC3c,GAAG,gBACHyP,KAAK,gBACLsH,SAAUf,EACV4G,QAASlH,EAASmH,cAClB9S,MAAM,YAGRwM,MAAM,gBACN2I,eAAe,aAIlB,eAACxW,GAAA,EAAD,CAAMC,WAAS,EAACa,WAAW,SAASX,MAAI,EAACC,GAAI,GAA7C,UACC,cAACJ,GAAA,EAAD,CAAMG,MAAI,EAACE,GAAI,EAAf,SACC,cAACuN,GAAA,EAAD,CACCtW,GAAG,WACHyP,KAAK,WACL8G,MAAM,sCACN3W,KAAK,SACLgX,WAAS,EACTJ,WAAY,CAAEE,IAAK,EAAGD,KAAM,GAC5BM,SAAUf,EACVgB,MAAOtB,EAASiJ,aAGlB,cAACjW,GAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,SAASC,MAAI,EAACE,GAAI,EAA1C,SACC,cAACwF,GAAA,EAAD,CAASlF,MAAM,oCAAf,SACC,cAACY,GAAA,EAAD,CAAQG,KAAK,QAAQL,MAAM,UAAUD,QAAQ,YAAY2E,QAtHjC,WAC7B5O,QAAQC,IAAI,iCACZoT,GAAgB,IAoHX,iCAMH,cAACjJ,GAAA,EAAD,CAAQ2M,WAAS,EAAC9M,QAAQ,WAAWC,MAAM,YAAYnK,KAAK,SAA5D,0B,8BCnLJ,SAASuf,GAAYld,EAAO8a,GAG3B,OAFAld,QAAQC,IAAI,8BAA+BmC,GAE3C,yCAAO,WAAeiF,GAAf,gBAAA9C,EAAA,6DACN8C,EAAS,CAAEtH,KAAMxB,IADX,kBAGamH,GAAgB4Z,YAAYld,GAHzC,cAGCqC,EAHD,gBAIC8K,GAAuBJ,GAAW1K,EAAItE,GAAI+c,GAJ3C,cAKL7V,EAASkY,GAAS9a,IAClB4C,EAAS,CAAEtH,KAAMvB,IANZ,kBAOEiG,EAAItE,IAPN,yCASLH,QAAQC,IAAI,4BAAZ,MACAoH,EAASmY,GAAW,EAAD,KACnBnY,EAAS,CAAEtH,KAAMtB,IAXZ,mBAYE,GAZF,0DAAP,sDAiBD,SAASghB,GAAStf,GAEjB,OADAH,QAAQC,IAAI,2BAA4BE,GACxC,yCAAO,WAAekH,GAAf,gBAAA9C,EAAA,6DACN8C,EAAS,CAAEtH,KAAMxB,IADX,kBAGamH,GAAgB+Z,SAAStf,GAHtC,OAGCsE,EAHD,OAIL4C,EAASkY,GAAS9a,IAClB4C,EAAS,CAAEtH,KAAMvB,IALZ,gDAOLwB,QAAQC,IAAI,yBAAZ,MACAoH,EAASmY,GAAW,EAAD,KACnBnY,EAAS,CAAEtH,KAAMtB,IATZ,yDAAP,sDAaD,SAASihB,GAAUlZ,GAClB,gDAAO,WAAea,GAAf,gBAAA9C,EAAA,6DACN8C,EAAS,CAAEtH,KAAMxB,IADX,kBAGamH,GAAgBga,UAAUlZ,GAHvC,OAGC/B,EAHD,OAILzE,QAAQC,IAAI,0BAA2BwE,GAEvC4C,EAgJK,CAAEtH,KAAM7B,EAAagC,QAhJPuE,IACnB4C,EAAS,CAAEtH,KAAMvB,IAPZ,kDASLwB,QAAQC,IAAI,0BAAZ,MACAoH,EAASmY,GAAW,EAAD,KACnBnY,EAAS,CAAEtH,KAAMtB,IAXZ,0DAAP,sDAgBD,SAASkhB,GAAY1d,EAASkE,GAC7B,gDAAO,WAAekB,GAAf,gBAAA9C,EAAA,6DACN8C,EAAS,CAAEtH,KAAMxB,IADX,kBAGamH,GAAgBia,YAAY1d,EAASkE,GAHlD,cAGC1B,EAHD,OAILzE,QAAQC,IAAI,4BAA6BwE,GACzC4C,EAASkY,GAAS9a,IAClB4C,EAAS,CAAEtH,KAAMvB,IANZ,mBAOE,GAPF,yCASLwB,QAAQC,IAAI,4BAAZ,MACAoH,EAASmY,GAAW,EAAD,KACnBnY,EAAS,CAAEtH,KAAMtB,IAXZ,mBAYE,GAZF,0DAAP,sDAiBD,SAASmhB,GAAY3d,GAEpB,OADAjC,QAAQC,IAAI,gCAAiCgC,GAC7C,yCAAO,WAAeoF,GAAf,gBAAA9C,EAAA,6DACN8C,EAAS,CAAEtH,KAAMxB,IADX,kBAGamH,GAAgBka,YAAY3d,GAHzC,cAGCwC,EAHD,gBAICyM,GAAyB/B,GAAWlN,GAJrC,cAKLjC,QAAQC,IAAI,4BAA6BwE,GACzC4C,EAASwY,GAAa5d,IACtBoF,EAAS,CAAEtH,KAAMvB,IAPZ,mBAQE,GARF,yCAULwB,QAAQC,IAAI,4BAAZ,MACAoH,EAASmY,GAAW,EAAD,KACnBnY,EAAS,CAAEtH,KAAMtB,IAZZ,mBAaE,GAbF,0DAAP,sDAsBD,SAASqhB,GAAe7d,EAASD,GAEhC,OADAhC,QAAQC,IAAI,8BAA+BgC,EAASD,GACpD,yCAAO,WAAeqF,GAAf,UAAA9C,EAAA,6DACN8C,EAAS,CAAEtH,KAAMxB,IADX,kBAICmH,GAAgBqa,aAAa9d,EAASD,GAJvC,OAKLqF,EAwFK,CAAEtH,KAAM5B,EAAoB+B,QAxFP,CAAE+B,UAASD,YACrCqF,EAAS,CAAEtH,KAAMvB,IANZ,gDAQLwB,QAAQC,IAAI,iCAAZ,MACAoH,EAASmY,GAAW,EAAD,KACnBnY,EAAS,CAAEtH,KAAMtB,IAVZ,yDAAP,sDAcD,SAASuhB,GAAoB/d,EAASD,GAErC,OADAhC,QAAQC,IAAI,oCAAqCgC,EAASD,GAC1D,yCAAO,WAAeqF,GAAf,UAAA9C,EAAA,6DACN8C,EAAS,CAAEtH,KAAMxB,IADX,kBAICmH,GAAgBua,gBAAgBhe,EAASD,GAJ1C,OAKLqF,EA2EK,CAAEtH,KAAM3B,EAAwB8B,QA3EP,CAAE+B,UAASD,YACzCqF,EAAS,CAAEtH,KAAMvB,IANZ,gDAQLwB,QAAQC,IAAI,sCAAZ,MACAoH,EAASmY,GAAW,EAAD,KACnBnY,EAAS,CAAEtH,KAAMtB,IAVZ,yDAAP,sDAmED,SAAS8gB,GAASnd,GACjB,MAAO,CAAErC,KAAM/B,EAAYkC,QAASkC,GAErC,SAASyd,GAAa5d,GACrB,MAAO,CAAElC,KAAM9B,EAAciC,QAAS+B,GAcvC,SAASud,GAAW7f,GACnB,MAAO,CAAEI,KAAMzB,EAAa4B,QAASP,GC1KvBugB,OAtCf,YAAoD,IAAlB9d,EAAiB,EAAjBA,MAAOJ,EAAU,EAAVA,OAClC0G,EAAQC,eADoC,EAEVqF,mBAAS,MAFC,oBAE1CmS,EAF0C,KAE7BC,EAF6B,KAI5C/Y,EAAWgH,cAEjBC,qBACC,YAC0B,SAAClM,EAAOJ,GAChCoe,EAAehe,EAAMxC,MAAM2O,SAASvM,IAErCqe,CAAiBje,EAAOJ,KAEzB,CAAEI,EAAOJ,IAGV,IAAMyM,EAAW,yCAAG,uBAAAlK,EAAA,sDAElB8C,EADG8Y,EACMH,GAAoB5d,EAAMjC,GAAI6B,GAG9B8d,GAAe1d,EAAMjC,GAAI6B,IAEnCoe,GAAgBD,GAPG,2CAAH,qDAUjB,OACC,cAACzR,GAAA,EAAD,CAASlF,MAAO2W,EAAc,cAAgB,WAA9C,SACC,cAACxR,GAAA,EAAD,CAAYC,QAASH,EAArB,SACE0R,EACA,cAACG,GAAA,EAAD,CAAWxR,UAAWpG,EAAMyC,QAAQsF,QAAQ+H,QAE5C,cAAC+H,GAAA,EAAD,CAASzR,UAAWpG,EAAMyC,QAAQsF,QAAQ+H,aCzBzC/Q,GAAYC,cAAW,SAACgB,GAAD,MAAY,CACxC8X,kBAAoB,CACnBtV,gBAA4BxC,EAAMyC,QAAQsV,WAAWC,MACrD,0BAA4B,CAC3B,uCAAyC,CACxC/W,WAAa,WAGfgD,QAA4B,OAC5B/E,OAA4B,YAI9B,SAAS+Y,GAAeC,GACvB,OACC,cAACxW,GAAA,EAAD,yBAAQF,MAAM,UAAUG,UAAWC,MAAUsW,GAA7C,uBAMF,IAAMC,GAA0B,SAACC,EAAY9e,GAC5C,OAAO8e,EAAWvS,SAASvM,IA8Fb+e,OA3Ff,YAA4C,IAIvCC,EAJephB,EAAuB,EAAvBA,MAAuB,IAAhBwC,aAAgB,MAAR,KAAQ,EACpCqG,EAAUhB,KAD0B,GAEzB4G,cACkBF,aAAY,SAACC,GAAD,OAAQA,EAAG1M,aAAlDR,EAHkC,EAGlCA,SAAUK,EAHwB,EAGxBA,aAElBvB,QAAQC,IAAI,mBAAoBL,GAC3BwC,EAUIA,IACR4e,EAAWphB,EAAM0Q,KAAI,SAAC/P,GAAD,mBAAC,aACrB4f,YAAc,CACbhgB,GAAcI,EAAKJ,GACnBggB,YAAcU,GAAwBze,EAAMxC,MAAOW,EAAKJ,MAEtDI,GALiB,IAMpB0gB,KAAI,gBAAmB1gB,EAAKJ,UAhB7B6gB,EAAWphB,EAAM0Q,KAAI,SAAC/P,GAAD,mBAAC,aACrB2gB,UAAY,CACX/gB,GAAQI,EAAKJ,GACb8N,MAAQ4S,GAAwBtf,EAAchB,EAAKJ,MAEjDI,GALiB,IAMpB0gB,KAAI,gBAAiB1gB,EAAKJ,SAc5B,IAAMghB,EAAU,EAEd/e,GAAS,CACT+J,MAAkB,YAClBiV,aAAkB,SAACC,GAAD,OAAY,cAACxS,GAAA,EAAD,KAC9ByS,gBAAkB,uBAClBC,YAAkB,SAClBC,WAAkB,SAACH,GAClB,OAAO,cAAC,GAAD,CAAiBrf,OAAQyf,SAASJ,EAAOlK,MAAMhX,OAEvDuhB,eAAkB,SAACC,EAAQC,EAAQC,EAAQC,GAE1C,OAAOH,EAAO1T,QAAU2T,EAAO3T,MAAQ,EAAI0T,EAAO1T,OAAS,EAAI,IAKvD,OAAV7L,GAAkB,CACjB+J,MAAkB,cAClB4V,WAAkB,WAClBT,gBAAkB,iCAClBC,YAAkB,SAClB1Z,MAAkB,IAClB2Z,WAAkB,SAACH,GAClB,OAAO,cAAC,GAAD,CAAwBjf,MAAOA,EAAOJ,OAAQyf,SAASJ,EAAOlK,MAAMhX,OAE5EuhB,eAAkB,SAACC,EAAQC,EAAQC,EAAQC,GAE1C,OAAOH,EAAOxB,cAAgByB,EAAOzB,YAAc,EAAIwB,EAAOxB,aAAe,EAAI,IAGnF,CAAEhU,MAAO,OAAQ4V,WAAY,OAAQla,MAAO,KAC5C,CAAEsE,MAAO,cAAe4V,WAAY,eACpC,CACC5V,MAAa,kBACb4V,WAAa,mBAEd,CAAE5V,MAAO,SAAU4V,WAAY,YAAahiB,KAAM,UAClD,CAAEoM,MAAO,MAAO4V,WAAY,YAAahiB,KAAM,UAC/C,CACCoM,MAAiB,gBACjB4V,WAAiB,gBACjBC,eAAiB,SAACX,GACjB,OAAwB,IAAjBA,EAAOlK,MAAiB,MAAQ,MAGzC,CAAEhL,MAAO,YAAa4V,WAAY,aAClC,CACC5V,MAAa,OACb4V,WAAa,UACbP,WAAa,SAACH,GAAD,OAAY,cAACV,GAAD,CAAgBrX,GAAI+X,EAAOlK,WAMtD,OAFKjW,GAAUigB,EAAQc,QAGtB,qBAAK7Y,UAAWX,EAAQ+X,kBAAxB,SACC,qBAAK5W,MAAO,CAAEsY,SAAU,GAAxB,SACC,cAAC,KAAD,CAAUC,KAAMnB,EAAUG,QAASA,EAASiB,SAAU,GAAIC,YAAU,SCvGxE,SAASC,GAAS1B,GAAQ,IACjBnF,EAAqCmF,EAArCnF,SAAUtE,EAA2ByJ,EAA3BzJ,MAAOoL,EAAoB3B,EAApB2B,MAAUC,EADX,YACqB5B,EADrB,8BAGxB,OACC,6CACC6B,KAAK,WACLC,OAAQvL,IAAUoL,EAClBpiB,GAAE,4BAAuBoiB,GACzBI,kBAAA,uBAAiCJ,IAC7BC,GALL,aAOErL,IAAUoL,GAAS,cAAC3Q,GAAA,EAAD,UAAM6J,OAK7B,SAASmH,GAAUL,GAClB,MAAO,CACNpiB,GAAE,uBAAgCoiB,GAClC,4CAAuCA,IAIzC,IAAM9a,GAAYC,cAAW,SAACgB,GAAD,MAAY,CACxCma,UAAe,CACd3X,gBAAkBxC,EAAMyC,QAAQC,UAAU0X,MAE3C5K,aAAe,CACdhN,gBAAkBxC,EAAMyC,QAAQsV,WAAWC,MAC3CvI,QAAkB,QAoFL4K,OAhFf,WACC,IAAMra,EAAQC,eACRF,EAAUhB,GAAUiB,GACpBrB,EAAWgH,cAHM,EAKaL,oBAAS,GALtB,oBAKfqD,EALe,KAKJC,EALI,OAMKtD,mBAAS,GANd,oBAMfmJ,EANe,KAMR6L,EANQ,OAOmBhV,oBAAS,GAP5B,oBAOfiV,EAPe,KAOD5P,EAPC,OAQarF,mBAAS,CAAE,mBAAoB,qBAR5C,oBAQfuF,EARe,KAQJC,EARI,KAgBvBlF,qBACC,WACK+C,IACHhK,EAASiW,MACThM,GAAa,MAGf,CAAED,EAAWhK,IAGd,IAAIzH,EAAQuO,aAAY,SAACC,GAAD,OAAQ8U,OAAOC,OAAO/U,EAAGxO,MAAMH,UAAU6Q,KAAI,SAAC/P,GAAD,OAAUA,QAE/E,OAAI8Q,EACI,0CAIP,sBAAKjI,UAAWX,EAAQyP,aAAxB,UACC,cAACnO,GAAA,EAAD,CAAYE,QAAQ,KAAKE,cAAY,EAArC,2BAGA,cAACJ,GAAA,EAAD,CAAYI,cAAY,EAAxB,iIAKA,cAAC,GAAD,CAAgBoJ,UAAWA,EAAWF,gBAAiBA,IACvD,cAAC+P,GAAA,EAAD,CAAQrb,SAAS,SAASmC,MAAM,UAAhC,SACC,eAACmZ,GAAA,EAAD,CACClM,MAAOA,EACPD,SAnCiB,SAACoM,EAAOC,GAC5BP,EAASO,IAmCNC,eAAe,YACfC,UAAU,YACVxZ,QAAQ,YACRyZ,aAAW,yBANZ,UAQC,cAACC,GAAA,EAAD,aAAKjN,MAAM,OAAUkM,GAAU,KAC/B,cAACe,GAAA,EAAD,aAAKjN,MAAM,QAAWkM,GAAU,UAGlC,eAACzZ,GAAA,EAAD,CAAOE,UAAW,EAAlB,UACC,cAACiZ,GAAD,CAAUnL,MAAOA,EAAOoL,MAAO,EAA/B,SACC,cAAC,GAAD,CACChP,UAAWA,EACXC,aAAcA,EACdJ,gBAAiB6P,EACjB5P,gBAAiBA,EACjBzT,MAAOA,MAGT,cAAC0iB,GAAD,CAAUnL,MAAOA,EAAOoL,MAAO,EAA/B,SACC,cAAC3Q,GAAA,EAAD,CACChI,MAAO,CACNhC,OAAM,UAAM,IAAmC,GAA7Bgc,KAAK/M,IAAIjX,EAAMwM,OAAQ,IAAnC,MACNvE,MAAS,QAHX,SAMC,cAAC,GAAD,CAAUjI,MAAOA,e,OC9CRikB,OAhEf,WACC,IAAMpb,EAAUhB,KACVJ,EAAWgH,cAFS,EAIQL,mBAAS,CAC1C6Q,OAAS,KALgB,oBAIlBhJ,EAJkB,KAIR2B,EAJQ,KAmC1B,OACC,sBAAMG,SAnBc,SAAC1D,GACrBA,EAAI2D,iBACJJ,EAAY3B,GAEZ,IAAMrP,EAAe,CACpBqY,OAAShJ,EAASgJ,QAGnB,IAAK,IAAI1S,KAAS3F,EACW,KAAxBA,EAAa2F,WACT3F,EAAa2F,GAItBnM,QAAQC,IAAI,eAAgBuG,GAC5Ba,EAASqY,GAAUlZ,KAIW4C,UAAWX,EAAQiE,KAAjD,SACC,eAAC7D,GAAA,EAAD,CAAMC,WAAS,EAAf,UACC,cAACiB,GAAA,EAAD,CAAYE,QAAQ,KAAKE,cAAY,EAArC,4BAGA,eAACtB,GAAA,EAAD,CAAMC,WAAS,EAACE,MAAI,EAACC,GAAI,GAAzB,UACC,cAACJ,GAAA,EAAD,CAAMG,MAAI,EAACC,IAAE,EAAb,SACC,cAACwN,GAAA,EAAD,CACCtW,GAAG,SACHyP,KAAK,SACL8G,MAAM,cACNvB,YAAY,uBACZ4B,WAAS,EACTG,SAzCe,SAACjD,GAAS,IAAD,EACLA,EAAImC,OAApBxG,EADqB,EACrBA,KAAMuH,EADe,EACfA,MAEdK,GAAY,SAACC,GAAD,mBAAC,eACTA,GADQ,kBAEV7H,EAAQuH,QAqCLA,MAAOtB,EAASgJ,WAGlB,cAAChW,GAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,SACC,cAACmB,GAAA,EAAD,CAAQH,QAAQ,WAAWC,MAAM,YAAYnK,KAAK,SAAlD,+BCnDA0H,GAAYC,cAAW,SAACgB,GAAD,MAAY,CACxCjG,KAAO,CACNoF,MAA4B,OAC5BqD,gBAA4BxC,EAAMyC,QAAQsV,WAAWC,MACrD,0BAA4B,CAC3B,uCAAyC,CACxC/W,WAAa,gBAMjB,SAASgX,GAAeC,GACvB,OACC,cAACxW,GAAA,EAAD,yBAAQF,MAAM,UAAUG,UAAWC,MAAUsW,GAA7C,uBAkDakD,OAxCf,YAAgC,IAAX5hB,EAAU,EAAVA,OACduG,EAAUhB,KADc,GAEb4G,cACwBF,aAAY,SAACC,GAAD,OAAQA,EAAG1M,aAC1DqiB,GAJwB,EAGtB9iB,IAHsB,EAGjBC,SAHiB,EAGP8iB,cACL9hB,EAAOoO,KAAI,SAAClO,GAAD,mBAAC,eAC1BA,GADyB,IAE5Bf,WAAa,IAAI4iB,KAAK7hB,EAAMf,YAAY6iB,mBAAmB,QAAS,CACnEC,KAAQ,UACRC,MAAQ,OACRC,IAAQ,YAETpD,KAAI,iBAAmB7e,EAAMjC,UAYxBghB,EAAU,CACf,CAAEhV,MAAO,OAAQ4V,WAAY,OAAQla,MAAO,KAC5C,CAAEsE,MAAO,cAAe4V,WAAY,cAAela,MAAO,KAC1D,CACCsE,MAAa,OACb4V,WAAa,UACbP,WAAa,SAACH,GAAD,OAAY,cAAC,GAAD,CAAgB/X,GAAI+X,EAAOlK,UAErD,CAAEhL,MAAO,aAAc4V,WAAY,UAAWla,MAAO,MAGtD,OACC,qBAAK+B,MAAO,CAAE/B,MAAO,QAAUuB,UAAWX,EAAQhG,KAAlD,SACC,cAAC,KAAD,CAAU0f,KAAM4B,EAAW5C,QAASA,EAASiB,SAAU,GAAIC,YAAU,OC3DlE5a,GAAYC,cAAW,SAACgB,GAAD,MAAY,CACxCwP,aAAe,CACdhN,gBAAkBxC,EAAMyC,QAAQsV,WAAWC,MAC3CvI,QAAkB,QAqCLmM,OAjCf,WACC,IAAM5b,EAAQC,eACRF,EAAUhB,GAAUiB,GACpBrB,EAAWgH,cAHO,EAKYL,oBAAS,GALrB,oBAKhBqD,EALgB,KAKLC,EALK,KAOxBhD,qBACC,WACK+C,IACHhK,EAASqY,MACTpO,GAAa,MAGf,CAAED,EAAWhK,IAGd,IAAInF,EAASiM,aAAY,SAACC,GAAD,OAAQ8U,OAAOC,OAAO/U,EAAGlM,OAAOzC,UAAU6Q,KAAI,SAAClO,GAAD,OAAWA,QAIlF,OAFApC,QAAQC,IAAI,yBAA0BiC,GAElCmP,EACI,0CAIP,sBAAKjI,UAAWX,EAAQyP,aAAxB,UACC,cAAC,GAAD,IAEA,cAAC,GAAD,CAAWhW,OAAQA,Q,sECjDhBuF,GAAYC,aAAW,CAC5BjF,KAAQ,CACPoF,MAAe,OACf0c,aAAe,OAGhBzX,MAAQ,CACPlF,OAAiB,IACjB+E,QAAiB,OACjBkF,eAAiB,gBACjBlI,WAAiB,YA8CJ6a,OA1Cf,YAAkC,IAAd1T,EAAa,EAAbA,UACbrI,EAAUhB,KADgB,EAEAuG,mBAAS,GAFT,oBAExByW,EAFwB,KAEfC,EAFe,KAG1BC,EAAQ7T,EAAU1E,OAClBwY,EAA6B,IAAZH,EACjBI,EAAkBJ,IAAYE,EAAQ,EAI5C,OACC,qBAAKvb,UAAU,WAAf,SACC,cAACuI,GAAA,EAAD,CAAMvI,UAAWX,EAAQhG,KAAzB,SACC,eAACsP,GAAA,EAAD,CACC3I,UAAWX,EAAQqE,MACnBkF,MAAOlB,EAAU2T,GAFlB,UAIGG,EAQD,wBAPA,cAACjW,GAAA,EAAD,CAAYC,QAVF,kBAAM8V,EAAWD,EAAU,IAUrC,SACC,cAACK,GAAA,EAAD,CACCC,SAAS,QACTjW,UAAU,6BAMX+V,EAQD,wBAPA,cAAClW,GAAA,EAAD,CAAYC,QArBC,kBAAM8V,EAAWD,EAAU,IAqBxC,SACC,cAACO,GAAA,EAAD,CACCD,SAAS,QACTjW,UAAU,qC,uEClBHmW,OAhBf,YAAoC,IAAbllB,EAAY,EAAZA,KAAMI,EAAM,EAANA,GAEtBkY,GADU5Q,KACA6Q,gBAMhB,OACC,cAAC5J,GAAA,EAAD,CAASlF,MAAO,OAAhB,SACC,cAACmF,GAAA,EAAD,CAAYC,QANM,WACnByJ,EAAQpH,KAAR,WAAiBlR,EAAjB,YAAyBI,EAAzB,WAKC,SACC,cAAC+kB,GAAA,EAAD,SCREzd,GAAYC,cAAW,SAACgB,GAAD,MAAY,CACxCyc,YAAc,CACbja,gBAAkBxC,EAAMyC,QAAQC,UAAUoN,OAE3C4M,UAAc,CACbla,gBAAkBxC,EAAMyC,QAAQsF,QAAQ+H,WA+G3B6M,OA3Gf,YAAyE,IAAtDC,EAAqD,EAArDA,SAAUpkB,EAA2C,EAA3CA,SAAU8F,EAAiC,EAAjCA,QAASue,EAAwB,EAAxBA,qBACzC9c,EAAUhB,KADuD,EAEvCuG,oBAAS,GAF8B,oBAE/DwX,EAF+D,KAEtDC,EAFsD,OAGrCzX,mBAAShH,EAAQ0e,MAHoB,oBAG/DC,EAH+D,KAGrDC,EAHqD,OAIrC5X,mBAAS,MAJ4B,oBAI/D6X,EAJ+D,KAIrDC,EAJqD,KAKjEC,EAAO/N,QAAQ6N,GACfG,EAAkB9kB,IAAa8F,EAAQif,YAUvCC,EAAiB,yCAAG,uBAAA3hB,EAAA,6DACzBuhB,EAAY,MADa,SAEnBpgB,GAAgBygB,cAAcnf,EAAQ7G,IAFnB,OAGzBmlB,IAHyB,2CAAH,qDAcjBtH,EAAY,yCAAG,WAAO/J,GAAP,gBAAA1P,EAAA,yDACpB0P,EAAI2D,iBACJgO,EAAYD,EAASS,QACjBT,IAAa3e,EAAQ0e,KAHL,gCAIDhgB,GAAgB2gB,cAAcrf,EAAQ7G,GAAI,CAC3DulB,KAAOC,IALW,OAIblhB,EAJa,OAOnBuC,EAAQ0e,KAAOjhB,EAAIihB,KAPA,OASpBD,GAAW,GATS,2CAAH,sDAYlB,OACC,eAAC5c,GAAA,EAAD,CAAMC,WAAS,EAACE,MAAI,EAACsd,KAAK,SAAS1c,MAAO,CAAEgC,aAAc,IAA1D,UACC,cAAC/C,GAAA,EAAD,CAAMG,MAAI,EAACY,MAAO,CAAE2c,YAAa,IAAjC,SACC,cAACC,GAAA,EAAD,CAAQpd,UAAW4c,EAAkBvd,EAAQ2c,UAAY3c,EAAQ0c,YAAjE,SACEne,EAAQif,YAAY,OAGvB,eAACpd,GAAA,EAAD,CAAMC,WAAS,EAACE,MAAI,EAACW,WAAW,SAAhC,UACE6b,EACA,eAAC3c,GAAA,EAAD,CAAMC,WAAS,EAACwd,KAAK,SAAStd,MAAI,EAACD,QAAQ,gBAA3C,UACC,cAACF,GAAA,EAAD,CAAMG,MAAI,EAACY,MAAO,CAAE/B,MAAO,QAA3B,SACC,sBAAM8P,SAAUqG,EAAc7d,GAAG,eAAjC,SACC,cAACsW,GAAA,EAAD,CACCtW,GAAG,OACH+W,SA9Ba,SAACjD,GACrB2R,EAAY3R,EAAImC,OAAOe,QA8BhBpX,KAAK,OACLgX,WAAS,EACTuF,WAAS,EACTnF,MAAOwO,QAIV,cAAC9c,GAAA,EAAD,CAAMG,MAAI,EAAV,SACC,cAAC2F,GAAA,EAAD,CAAYjC,KAAK,eAAe3M,KAAK,SAArC,SACC,cAAC,KAAD,WAKH,eAAC8I,GAAA,EAAD,CAAMC,WAAS,EAACwd,KAAK,SAAStd,MAAI,EAACD,QAAQ,gBAA3C,UACC,cAACF,GAAA,EAAD,CAAMG,MAAI,EAAV,SACC,cAACe,GAAA,EAAD,CAAYH,MAAO,CAAE6c,WAAY,YAAjC,SAAgDzf,EAAQ0e,UAEvDM,GAAmBT,IACpB,eAAC1c,GAAA,EAAD,CAAMG,MAAI,EAAV,UACC,cAAC2F,GAAA,EAAD,CACC+U,aAAW,OACXgD,gBAAc,YACdC,gBAAc,OACd/X,QAzEY,SAACqF,GACpB6R,EAAY7R,EAAIuH,gBAoEV,SAMC,cAACoL,GAAA,EAAD,CAAc7B,SAAS,YAExB,eAAC8B,GAAA,EAAD,CAAM1mB,GAAG,YAAY0lB,SAAUA,EAAUiB,aAAW,EAACf,KAAMA,EAAMgB,QA/DpD,WACnBjB,EAAY,OA8DN,UACEE,GAAmB,cAACrJ,GAAA,EAAD,CAAU/N,QA1Ed,WACvBkX,EAAY,MACZL,GAAW,IAwEgB,kBACpB,cAAC9I,GAAA,EAAD,CAAU/N,QAASsX,EAAnB,6BAML,eAACrd,GAAA,EAAD,CAAMC,WAAS,EAACE,MAAI,EAACD,QAAQ,gBAA7B,UACC,eAACgB,GAAA,EAAD,CAAYE,QAAQ,UAApB,wBAA0CjD,EAAQif,eAClD,cAAClc,GAAA,EAAD,CAAYE,QAAQ,UAApB,SACE,IAAIga,KAAKjd,EAAQ3F,YAAY6iB,mBAAmB,QAAS,CACzDC,KAAQ,UACRC,MAAQ,OACRC,IAAQ,wBCxGT5c,GAAYC,cAAW,SAACgB,GAAD,MAAY,CACxCse,WAAa,CACZ9b,gBAAkBxC,EAAMyC,QAAQsF,QAAQ+H,WAsH3ByO,OA5Gf,YAAgE,IAAnClnB,EAAkC,EAAlCA,KAAMI,EAA4B,EAA5BA,GAAIolB,EAAwB,EAAxBA,qBACtCvlB,QAAQC,IAAI,4BAA6BF,EAAMI,GAE/C,IAAMsI,EAAUhB,KACVjI,EAAgB,CACrBkmB,KAAO,GACP3lB,OACAI,MAP6D,EAS5B6N,mBAASxO,GATmB,oBAStDqW,EATsD,KAS5C2B,EAT4C,OAU1BxJ,oBAAS,GAViB,oBAUtDqD,EAVsD,KAU3CC,EAV2C,OAWhBtD,oBAAS,GAXO,oBAWtDkZ,EAXsD,KAWtCC,EAXsC,OAY5BnZ,mBAAS,IAZmB,oBAYtDlH,EAZsD,KAY5CsgB,EAZ4C,KAaxDlmB,EAAWiN,aAAY,SAACC,GAAD,OAAQA,EAAG1M,SAASR,YAEjDoN,qBACC,YACkB,yCAAG,WAAOvO,EAAMI,GAAb,gBAAAoE,EAAA,sEACImB,GAAgB2hB,YAAYtnB,EAAMI,GADtC,OACb2G,EADa,OAEnBsgB,EAAYtgB,GACZwK,GAAa,GACb6V,GAAkB,GAJC,2CAAH,wDAMjBE,CAAYtnB,EAAMI,KAEnB,CAAEkR,EAAWtR,EAAMI,EAAI+mB,IAGxB,IAAMI,EAAsB,WAC3BH,GAAkB,IAYbnJ,EAAY,yCAAG,WAAO/J,GAAP,UAAA1P,EAAA,6DACpB0P,EAAI2D,iBADgB,SAEdlS,GAAgB6hB,cAAc1R,GAFhB,OAGpB2B,EAAYhY,GACZ8R,GAAa,GAJO,2CAAH,sDAOlB,OACC,eAACzI,GAAA,EAAD,CAAMC,WAAS,EAACM,UAAU,oBAA1B,UACC,cAACW,GAAA,EAAD,CAAYE,QAAQ,KAApB,sBACA,cAACpB,GAAA,EAAD,CAAMC,WAAS,EAACE,MAAI,EAACC,GAAI,GAAzB,SACC,cAAC2I,GAAA,EAAD,CAAK4V,GAAI,EAAGC,GAAI,EAAG7d,MAAO,CAAE/B,MAAO,QAAnC,SACEf,EAASsF,OAAS,EAClBtF,EAASwJ,KAAI,SAACtJ,GAAD,OACZ,cAAC,GAAD,CAECse,SAAUgC,EACVtgB,QAASA,EACT9F,SAAUA,EACVqkB,qBAAsBA,GALvB,kBACiBve,EAAQ7G,QAQ1B,cAAC4J,GAAA,EAAD,8BAIF7I,EACA,cAAC2H,GAAA,EAAD,CAAMC,WAAS,EAACE,MAAI,EAApB,SACC,eAACH,GAAA,EAAD,CAAMC,WAAS,EAACa,WAAW,SAASG,QAAS,EAAGd,MAAI,EAACC,GAAI,GAAIqd,KAAK,SAAlE,UACC,cAACzd,GAAA,EAAD,CAAMG,MAAI,EAAV,SACC,cAACwd,GAAA,EAAD,CAAQpd,UAAWX,EAAQue,WAA3B,SAAwC9lB,EAAS,OAElD,cAAC2H,GAAA,EAAD,CAAMG,MAAI,EAAV,SACC,sBAAM7I,GAAG,UAAUwX,SAAUqG,EAA7B,SACC,cAACvH,GAAA,EAAD,CACCtW,GAAG,OACHyP,KAAK,OACLuF,YAAY,iBACZ4B,WAAS,EACTG,SAjDa,SAACjD,GAAS,IAAD,EACLA,EAAImC,OAApBxG,EADqB,EACrBA,KAAMuH,EADe,EACfA,MAEdK,GAAY,SAACC,GAAD,mBAAC,eACTA,GADQ,kBAEV7H,EAAQuH,QA6CHA,MAAOtB,EAAS6P,WAInB,cAAC7c,GAAA,EAAD,CAAMG,MAAI,EAAV,SACC,cAAC2F,GAAA,EAAD,CAAYjC,KAAK,UAAU3M,KAAK,SAAhC,SACC,cAAC,KAAD,aAMJ,eAACgK,GAAA,EAAD,WACC,cAACO,GAAA,EAAD,CAAMD,UAAWkO,KAAYjP,GAAG,UAAhC,qBAEQ,IAHT,KAII,IACH,cAACgB,GAAA,EAAD,CAAMD,UAAWkO,KAAYjP,GAAG,UAAhC,qBAEQ,IAPT,0BC/GE7B,GAAYC,aAAW,CAC5BwQ,aAAiB,CAChBC,QAAU,IAEXuP,eAAiB,CAChBnB,YAAc,MAuJDoB,OAnJf,WACC3nB,QAAQC,IAAI,oBACZ,IAAMwI,EAAUhB,KACRtH,EAAOynB,eAAPznB,GACFI,EAAO4N,aAAY,SAACC,GAAD,OAAQA,EAAGxO,MAAMH,SAASU,MAC7Cc,EAAMkN,aAAY,SAACC,GAAD,OAAQA,EAAG1M,SAAST,OACtC4mB,EAAYtnB,EAAKunB,UAAY7mB,EANhB,EAOiB+M,oBAAS,GAP1B,oBAOXqD,EAPW,KAOAC,EAPA,OAQiBtD,mBAAS,CAC5CyC,QAAU,GACVC,MAAU,KAVQ,oBAQXI,EARW,KAQAS,EARA,KAablK,EAAWgH,cAqCjB,GAlCAC,qBACC,WACCtO,QAAQC,IAAI,mCAKPM,GAHe,yCAAG,WAAOyB,GAAP,UAAAuC,EAAA,sDACtB8C,EAASgW,GAAQrb,IADK,2CAAH,qDAInB+lB,CAAe5nB,KAGjB,CAAEI,EAAMJ,EAAIkH,IAIbiH,qBACC,WACCtO,QAAQC,IAAI,qCAURoR,GATc,yCAAG,WAAO7B,EAAerP,GAAtB,gBAAAoE,EAAA,sEACEoM,GAA8BnB,EAAerP,GAD/C,OACdsR,EADc,OAEpBzR,QAAQC,IAAI,wBAAyBwR,GACjCA,GACHF,EAAaE,GAEdH,GAAa,GANO,2CAAH,uDAUjBI,CAAazC,GAAU9O,KAGzB,CAAEkR,EAAWlR,IAGVkR,EACH,OAAO,0CAGR,IAOM2W,EAAkB,CACvB,CACC7b,MAAQ,cACRuK,MAAQ,cACRS,MAAQ5W,EAAK2R,aAEd,CACC/F,MAAQ,kBACRuK,MAAQ,kBACRS,MAAQ5W,EAAK0nB,gBAAkB,4BAAI1nB,EAAK4R,mBAEzC,CAAEhG,MAAO,SAAUuK,MAAO,eAAgBS,MAAO5W,EAAKqH,QACtD,CAAEuE,MAAO,MAAOuK,MAAO,YAAaS,MAAO5W,EAAKic,KAChD,CAAErQ,MAAO,YAAauK,MAAO,YAAaS,MAAO5W,EAAKmc,WACtD,CACCvQ,MAAQ,gBACRuK,MAAQ,gBACRS,MAAQ5W,EAAKyc,eAAiB,OAE/B,CACC7Q,MAAQ,cACRuK,MAAQ,cACRS,MAAK,WAAO5W,EAAK6R,YAAYC,EAAxB,aAA8B9R,EAAK6R,YAAYG,EAA/C,OAIP,OACC,eAAC1J,GAAA,EAAD,CAAMC,WAAS,EAAC2Q,UAAU,SAA1B,UACC,cAAC5Q,GAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,SAnCoB,SAAC6H,GACtB,MAA0B,KAAtBA,EAAUL,QAAuB,KAE7B,cAAC,GAAD,CAAUK,UAAS,CAAIA,EAAUL,SAAd,oBAA0BK,EAAUJ,UAiC5DwX,CAAcpX,KAEhB,eAACjI,GAAA,EAAD,CAAMO,UAAWX,EAAQyP,aAAcpP,WAAS,EAACE,MAAI,EAACC,GAAI,GAAIU,WAAW,aAAzE,UACC,eAACd,GAAA,EAAD,CAAMC,WAAS,EAACE,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAjC,UACC,eAACL,GAAA,EAAD,CAAMC,WAAS,EAACE,MAAI,EAACC,GAAI,GAAIqd,KAAK,SAAlC,UACC,cAACvc,GAAA,EAAD,CAAYE,QAAQ,KAAKE,cAAY,EAArC,SACE5J,EAAKqP,OAEP,eAAC/G,GAAA,EAAD,CAAMG,MAAI,EAAV,UACC,cAAC,GAAD,CAAiBhH,OAAQzB,EAAKJ,KAC7Bc,IAAQV,EAAKunB,SAAW,cAAC,GAAD,CAAa/nB,KAAM,QAASI,GAAII,EAAKJ,WAG/DI,EAAKgc,aACL,cAAC1T,GAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,SACC,cAACc,GAAA,EAAD,CAAYI,cAAY,EAACP,MAAO,CAAE8B,aAAc,GAAI+a,WAAY,YAAhE,SACElmB,EAAKgc,gBAIT,cAAC1T,GAAA,EAAD,CAAMC,WAAS,EAACE,MAAI,EAApB,SACC,cAACmf,GAAA,EAAD,CAAgB/e,UAAWX,EAAQif,eAAnC,SACC,cAACU,GAAA,EAAD,CAAO1E,aAAW,eAAlB,SACC,cAAC2E,GAAA,EAAD,UACEL,EAAgB1X,KAAI,SAACtH,EAAM0G,GAC3B,OAAO1G,EAAKmO,MACX,eAACmR,GAAA,EAAD,WACC,cAACC,GAAA,EAAD,UACC,4BAAIvf,EAAK0N,UAEV,cAAC6R,GAAA,EAAD,UAAYvf,EAAKmO,UAJHnO,EAAK0N,OAMjB,mBAOV,cAAC7N,GAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,SACC,cAACC,GAAA,EAAD,CAAOE,UAAW,EAAlB,SACC,cAAC,GAAD,CACCzJ,MAAO,CAAEW,GACTgT,UAAW,CAAEhT,EAAK6R,YAAYC,EAAG9R,EAAK6R,YAAYG,GAClDmB,gBAAgB,EAChBP,oBAAoB,EACpBQ,OAAO,QAIV,cAAC9K,GAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIW,MAAO,CAAEwU,UAAW,IAAvC,SACC,cAAC,GAAD,CAAmBre,KAAK,QAAQI,GAAII,EAAKJ,GAAIolB,qBAAsBsC,aC/JlEpgB,GAAYC,aAAW,CAC5BwQ,aAAe,CACdC,QAAU,IAEXzL,KAAe,CACdC,QAAgB,OAChBC,cAAgB,SAChB,QAAgB,CACfhB,aAAe,OAsJH4c,OAjJf,WACCxoB,QAAQC,IAAI,oBACZ,IAAMwI,EAAUhB,KACViB,EAAQC,eACNxI,EAAOynB,eAAPznB,GACFkH,EAAWgH,cALE,EAMWL,mBAAS,MANpB,oBAMXlO,EANW,KAMH2oB,EANG,KAOb/oB,EAASyO,aAAY,SAACC,GAAD,OAAQA,EAAGxO,MAAMF,UACtCa,EAAO4N,aAAY,SAACC,GAAD,OAAQA,EAAGxO,MAAMH,SAASU,MAC7CkY,EAAUC,eAKD,YAAX5Y,IACY,WAAXI,GAAqBuY,EAAQpH,KAAK,UACvB,WAAXnR,GAAqBuY,EAAQpH,KAAR,iBAAuB9Q,KAGjD,IAAMuoB,OACIC,IAATpoB,EACG,CACAqP,KAAkBrP,EAAKqP,KACvB2M,YAAkBhc,EAAKgc,aAAe,GACtCrK,YAAkB3R,EAAK2R,aAAe,GACtCC,gBAAkB5R,EAAK4R,iBAAmB,GAC1CvK,OAAkBrH,EAAKqH,QAAU,GACjC4U,IAAkBjc,EAAKic,KAAO,GAC9BE,UAAkBnc,EAAKmc,WAAa,GACpCM,cAAkBzc,EAAKyc,gBAAiB,GAExC,KA/Be,EAgCuBhP,mBAAS0a,GAhChC,oBAgCX/K,EAhCW,KAgCGC,EAhCH,OAiCqB5P,mBAAS,CAChDmG,SAAewU,IAATpoB,EAAqBA,EAAK6R,YAAYC,EAAI,KAChD+B,SAAeuU,IAATpoB,EAAqBA,EAAK6R,YAAYG,EAAI,OAnC9B,oBAiCXsL,EAjCW,KAiCEC,EAjCF,OAqCmB9P,mBAAS,IArC5B,oBAqCXkP,EArCW,KAqCCa,EArCD,KAwEbC,EAAY,yCAAG,WAAO/J,GAAP,gBAAA1P,EAAA,sDACpB0P,EAAI2D,iBAEAgR,EAHgB,2BAIhBjL,GAJgB,IAKnBvL,YAAc,CACb6L,SAAYC,WAAWL,EAAY1J,KACnCgK,UAAYD,WAAWL,EAAYzJ,MAEpCxM,OAAc+V,EAAa/V,QAAU,KACrC4U,IAAcmB,EAAanB,KAAO,OAGnCiM,EAAU,UACVphB,EAASkW,GAAWpd,EAAIyoB,EAAU1L,IAdd,2CAAH,sDAiBZ2L,EAAY,yCAAG,uBAAAtkB,EAAA,sDACpBkkB,EAAU,UACVphB,EAASiG,GAAqB/M,EAAKunB,QAAS3nB,IAC5CkH,EAASmW,GAAWrd,IAHA,2CAAH,qDAUlB,OACC,sBAAKiJ,UAAWX,EAAQyP,aAAxB,UACC,cAACnO,GAAA,EAAD,CAAYE,QAAQ,KAAKE,cAAY,EAArC,uBAGA,uBAAMwN,SAAUqG,EAAc5U,UAAWX,EAAQiE,KAAjD,UACC,cAAC,GAAD,CAAqB0P,MAAM,EAAMvG,SAAU8H,EAActB,aAlE/B,SAAClW,GAAU,IACjCyJ,EAAgBzJ,EAAhByJ,KAAMuH,EAAUhR,EAAVgR,MACC,kBAATvH,IACHuH,EAAQhR,EAAK4W,SAGda,GAAgB,SAACnG,GAAD,mBAAC,eACbA,GADY,kBAEd7H,EAAQuH,UA2DR,cAACpN,GAAA,EAAD,CAAYE,QAAQ,KAAKE,cAAY,EAArC,2BAGA,cAAC,GAAD,CACC0L,SAAUgI,EACV/H,oBA5D4B,SAAC3P,GAAS,IAEjCyJ,EAAgBzJ,EAAhByJ,KAAMuH,EAAUhR,EAAVgR,MACd2G,GAAe,SAACrG,GAAD,mBAAC,eACZA,GADW,kBAEb7H,EAAQuH,QAwDP1D,uBApD+B,SAACuB,GAEnC8I,EAAe9I,MAoDb,cAACxJ,GAAA,EAAD,CAASvB,QAAQ,WACjB,gCACC,cAACF,GAAA,EAAD,CAAYE,QAAQ,KAAKE,cAAY,EAArC,yBAGA,cAACJ,GAAA,EAAD,CAAYI,cAAY,EAAxB,iIAIA,cAAC,GAAD,CAAa8P,mBA1Dc,SAACxK,GAE/BsO,EAActO,MAyDX,cAACjE,GAAA,EAAD,CAASvB,QAAQ,cAElB,sBAAKL,MAAO,CAAE+C,QAAS,OAAQkF,eAAgB,iBAA/C,UACC,cAACzH,GAAA,EAAD,CAAQF,MAAM,YAAYD,QAAQ,YAAY2E,QAhC7B,WACpByJ,EAAQpH,KAAR,iBAAuB9Q,KA+BpB,qBAGA,cAACiK,GAAA,EAAD,CACCR,MAAO,CAAEsB,gBAAiBxC,EAAMyC,QAAQxL,MAAMmjB,KAAM5Y,MAAOxB,EAAMyC,QAAQxL,MAAMmpB,cAC/E7e,QAAQ,YACR2E,QAASia,EAHV,yBAOA,cAACze,GAAA,EAAD,CAAQF,MAAM,UAAUD,QAAQ,YAAYlK,KAAK,SAAjD,iCCjGUgpB,OApDf,YAAyE,IAAzClT,EAAwC,EAAxCA,SAAUwG,EAA8B,EAA9BA,aAA8B,IAAhBD,YAAgB,SACjE3T,EAAUhB,KACV+X,EAAarR,aAAY,SAACC,GAAD,OAAQA,EAAGlM,OAAOvC,SACjDK,QAAQC,IAAIuf,GACZ,IAAMrJ,EAAe,SAAClC,GACrBoI,EAAapI,EAAImC,SAGZsB,EAAqB,SAACvL,GAC3B,OAAOD,GAAaC,EAAOqT,IAG5B,OACC,eAAC3W,GAAA,EAAD,CAAMC,WAAS,EAACM,UAAWX,EAAQiE,KAAnC,UACC,cAAC+J,GAAA,EAAD,CACCtW,GAAG,OACHyP,KAAK,OACL8G,MAAM,aACNvB,YAAY,wBACZ+B,SAAUf,EACVgB,MAAOtB,EAASjG,KAChBwH,UAAWgF,EACXzc,MAAOqY,QAAQN,EAAmB,eAClCO,WAAYP,EAAmB,gBAEhC,cAACjB,GAAA,EAAD,CACCtW,GAAG,cACHyP,KAAK,cACL8G,MAAM,cACN4F,WAAS,EACT3F,WAAY,CAAEoB,UAAW,KACzB5C,YAAY,0CACZ+B,SAAUf,EACVgB,MAAOtB,EAAS0G,kBCjCd9U,GAAYC,aAAW,CAC5BwQ,aAAe,CACdC,QAAU,IAEXzL,KAAe,CACdC,QAAgB,OAChBC,cAAgB,SAChB,QAAgB,CACfhB,aAAe,OAkFHod,OA7Ef,WACC,IAAMvgB,EAAUhB,KACVJ,EAAWgH,cACXgK,EAAUC,eACV9V,EAAS2L,aAAY,SAACC,GAAD,OAAQA,EAAG1M,SAAST,OAJtB,EAUmB+M,mBALZ,CAC/B4B,KAAc,GACd2M,YAAc,GACd0M,WAAc,IARU,oBAUjBC,EAViB,KAUFC,EAVE,OAWanb,mBAAS,IAXtB,oBAWjBkP,EAXiB,KAWLa,EAXK,KAiCnBC,EAAY,yCAAG,WAAO/J,GAAP,oBAAA1P,EAAA,sDAKpB,IAAS4H,KAJT8H,EAAI2D,iBAEAnR,EAHgB,eAGAyiB,GAGK,KAApBziB,EAAS0F,WACL1F,EAAS0F,GAPE,OAWpBnM,QAAQC,IAAI,YAAawG,GAXL,SAYEY,EAASiY,GAAY7Y,EAAUyW,IAZjC,OAYdjb,EAZc,OAapBoF,EAASoG,GAAoBjL,EAAQP,GAAS,IAE1CA,IACHjC,QAAQC,IAAI,2BAA4BgC,GACxCoW,EAAQpH,KAAR,kBAAwBhP,KAjBL,2CAAH,sDAqBlB,OACC,sBAAKmH,UAAWX,EAAQyP,aAAxB,UACC,cAACnO,GAAA,EAAD,CAAYE,QAAQ,KAAKE,cAAY,EAArC,8BAGA,uBAAMwN,SAAUqG,EAAc5U,UAAWX,EAAQiE,KAAjD,UACC,cAAC,GAAD,CAAsBmJ,SAAUqT,EAAe7M,aA/CpB,SAAClW,GAAU,IAClCyJ,EAAgBzJ,EAAhByJ,KAAMuH,EAAUhR,EAAVgR,MACC,cAATvH,IACHuH,EAAQhR,EAAK4W,SAGdoM,GAAiB,SAAC1R,GAAD,mBAAC,eACdA,GADa,kBAEf7H,EAAQuH,UAwCR,cAAC3L,GAAA,EAAD,CAASvB,QAAQ,SAASL,MAAO,CAAEwU,UAAW,GAAIxS,aAAc,MAChE,gCACC,cAAC7B,GAAA,EAAD,CAAYE,QAAQ,KAAKE,cAAY,EAArC,gCAGA,cAAC,GAAD,CAAa6P,eAAe,EAAOC,mBAzCR,SAACxK,GAC/BzP,QAAQC,IAAI,yBAA0BwP,GACtCsO,EAActO,MAwCX,cAACjE,GAAA,EAAD,CAASvB,QAAQ,SAASL,MAAO,CAAEgC,aAAc,SAGlD,cAACxB,GAAA,EAAD,CAAQF,MAAM,YAAYD,QAAQ,YAAYlK,KAAK,SAAnD,iC,8BCnGW,OAA0B,gDCQnC0H,GAAYC,cAAW,SAACgB,GAAD,MAAY,CACxC0gB,QAAsB,CACrBrE,SAAarc,EAAM2gB,WAAWC,QAAQ,IACtCzd,WAAanD,EAAM2gB,WAAWE,mBAE/BC,oBAAsB,CACrB5hB,OAAqB,IACrBgD,gBAAe,cAAa6e,GAAb,KACf1e,iBAAqB,YACrBC,mBAAqB,SACrBC,eAAqB,QACrBC,gBAAqBxC,EAAMyC,QAAQC,UAAUC,UA6ChCqe,OAhCf,WACC,IAAMhhB,EAAQC,eADS,GAEPlB,GAAUiB,GAEV4P,eAEwEnK,aACvF,SAACC,GAAD,OAAQA,EAAG1M,aADCR,GANU,EAMfD,IANe,EAMVC,UAAUC,EANA,EAMAA,MAAgBE,GANhB,EAMOD,QANP,EAMgBC,YAQvC,OAduB,EAM4BO,SAN5B,EAMsCL,aANtC,EAMoDooB,SAS1E,cAAC9gB,GAAA,EAAD,CAAMC,WAAS,EAACE,MAAI,EAACC,GAAI,GAAzB,SACC,eAACJ,GAAA,EAAD,CAAMC,WAAS,EAAC2Q,UAAU,SAA1B,UACC,cAAC1P,GAAA,EAAD,CAAYE,QAAQ,KAApB,uBACA,eAACF,GAAA,EAAD,CAAYE,QAAQ,YAApB,uBAA2C/I,KAC3C,eAAC6I,GAAA,EAAD,CAAYE,QAAQ,YAApB,oBAAwC9I,KACxC,eAAC4I,GAAA,EAAD,CAAYE,QAAQ,YAApB,oBACS,IACP,IAAIga,KAAK5iB,GAAY6iB,mBAAmB,QAAS,CACjDC,KAAQ,UACRC,MAAQ,OACRC,IAAQ,qBClCR5c,GAAYC,cAAW,SAACgB,GAAD,MAAY,CACxCkhB,mBAAsB,CACrB/hB,MAAQ,QAETuhB,QAAsB,CACrBrE,SAAarc,EAAM2gB,WAAWC,QAAQ,IACtCzd,WAAanD,EAAM2gB,WAAWE,mBAE/BC,oBAAsB,CACrB5hB,OAAqB,IACrBgD,gBAAe,cAAa6e,GAAb,KACf1e,iBAAqB,YACrBC,mBAAqB,SACrBC,eAAqB,QACrBC,gBAAqBxC,EAAMyC,QAAQC,UAAUC,MAE9C6M,aAAsB,CACrBC,QAAU,IAEX0R,QAAsB,CACrBhiB,MAAe,MACfuW,UAAe,GACfxS,aAAe,QAsLFke,OAzKf,WACC,IAAMphB,EAAQC,eACRF,EAAUhB,GAAUiB,GAEpB2P,EAAUC,eAJU,EAMsEnK,aAC/F,SAACC,GAAD,OAAQA,EAAG1M,YADJT,EANkB,EAMlBA,IAAKC,EANa,EAMbA,SAAgDK,GANnC,EAMHJ,MANG,EAMIC,QANJ,EAMaC,WANb,EAMyBO,SANzB,EAMmCL,cAAcC,EANjD,EAMiDA,iBAGrEuoB,EAAW5b,aAAY,SAACC,GAAD,OAC5B8U,OAAOC,OAAO/U,EAAGxO,MAAMH,UAAUsC,QAAO,SAACxB,GAAD,OAAUgB,EAAagN,SAAShO,EAAKJ,UAExE6pB,EAAmB7b,aAAY,SAACC,GAAD,OACpC8U,OAAOC,OAAO/U,EAAGxO,MAAMH,UAAUsC,QAAO,SAACxB,GAAD,OAAUA,EAAKunB,UAAY7mB,QAE9DgpB,EAAiB9b,aAAY,SAACC,GAAD,OAClC8U,OAAOC,OAAO/U,EAAGlM,OAAOzC,UAAUsC,QAAO,SAACK,GAAD,OAAWZ,EAAiB+M,SAASnM,EAAMjC,UAE/E+pB,EAAoB/b,aAAY,SAACC,GAAD,OACrC8U,OAAOC,OAAO/U,EAAGlM,OAAOzC,UAAUsC,QAAO,SAACK,GAAD,OAAWA,EAAM0lB,UAAY7mB,QAUvE,OANkBkN,aAAY,SAACC,GAAD,OAAQA,EAAGlM,OAAOzC,YAO/C,eAACoJ,GAAA,EAAD,CAAMC,WAAS,EAAC2Q,UAAU,SAA1B,UACC,cAAC5Q,GAAA,EAAD,CAAMO,UAAWX,EAAQ+gB,oBAAqB1gB,WAAS,EAACC,QAAQ,SAASY,WAAW,WAAWX,MAAI,EAACC,GAAI,GAAxG,SACC,qBAAKW,MAAO,CAAEhC,OAAQ,SAEvB,eAACiB,GAAA,EAAD,CAAMC,WAAS,EAACE,MAAI,EAACI,UAAWX,EAAQyP,aAAxC,UACC,eAACrP,GAAA,EAAD,CAAMC,WAAS,EAACE,MAAI,EAApB,UACC,cAACH,GAAA,EAAD,CAAMG,MAAI,EAAV,SACC,cAAC,GAAD,MAED,cAACH,GAAA,EAAD,CAAMG,MAAI,EAAV,SACC,cAACoB,GAAA,EAAD,CAAQF,MAAM,YAAYD,QAAQ,WAAW2E,QAf3B,WACtByJ,EAAQpH,KAAR,iBAAuB/P,EAAvB,WAcI,4BAMF,cAACsK,GAAA,EAAD,CAASpC,UAAWX,EAAQohB,UAE5B,eAAChhB,GAAA,EAAD,CAAMC,WAAS,EAACE,MAAI,EAACC,GAAI,GAAzB,UAEC,eAACJ,GAAA,EAAD,CAAMC,WAAS,EAACE,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGihB,GAAI,EAAG1Q,UAAU,SAArD,UACC,cAAC7H,GAAA,EAAD,CAAKsK,GAAI,EAAT,SACC,cAACnS,GAAA,EAAD,CAAYE,QAAQ,KAApB,wBAGD,cAACmgB,GAAA,EAAD,CAAMC,OAAO,EAAb,SACEL,EAAiB5d,OAAS,EAC1B4d,EAAiB1Z,KAAI,SAAC/P,GAAD,OACpB,cAAC+pB,GAAA,EAAD,CACCC,QAAM,EACNlgB,UAAWkO,KACXjP,GAAE,iBAAY/I,EAAKJ,IAHpB,SAMC,cAACqqB,GAAA,EAAD,UAAejqB,EAAKqP,QANrB,eAIcrP,EAAKJ,QAMpB,cAAC0I,GAAA,EAAD,UACC,cAACkB,GAAA,EAAD,sCAMJ,cAACU,GAAA,EAAD,CAAQggB,MAAI,EAAZ,SACC,cAACjf,GAAA,EAAD,CAASpC,UAAWX,EAAQohB,YAI7B,eAAChhB,GAAA,EAAD,CAAMC,WAAS,EAACE,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGihB,GAAI,EAAG1Q,UAAU,SAArD,UACC,cAAC7H,GAAA,EAAD,CAAKsK,GAAI,EAAT,SACC,cAACnS,GAAA,EAAD,CAAYE,QAAQ,KAApB,8BAGD,cAACmgB,GAAA,EAAD,CAAMC,OAAO,EAAb,SACEN,EAAS3d,OAAS,EAClB2d,EAASzZ,KAAI,SAAC/P,GAAD,OACZ,cAAC+pB,GAAA,EAAD,CACCC,QAAM,EACNlgB,UAAWkO,KACXjP,GAAE,iBAAY/I,EAAKJ,IAHpB,SAMC,cAACqqB,GAAA,EAAD,UAAejqB,EAAKqP,QANrB,eAIcrP,EAAKJ,QAMpB,cAAC0I,GAAA,EAAD,UACC,cAACkB,GAAA,EAAD,uCAMJ,cAACU,GAAA,EAAD,CAAQigB,MAAI,EAAZ,SACC,cAAClf,GAAA,EAAD,CAASpC,UAAWX,EAAQohB,YAI7B,eAAChhB,GAAA,EAAD,CAAMC,WAAS,EAACE,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGihB,GAAI,EAAG1Q,UAAU,SAArD,UACC,cAAC7H,GAAA,EAAD,CAAKsK,GAAI,EAAT,SACC,cAACnS,GAAA,EAAD,CAAYE,QAAQ,KAApB,yBAGD,cAACmgB,GAAA,EAAD,CAAMC,OAAO,EAAb,SACEH,EAAkB9d,OAAS,EAC3B8d,EAAkB5Z,KAAI,SAAClO,GAAD,OACrB,cAACkoB,GAAA,EAAD,CACCC,QAAM,EACNlgB,UAAWkO,KACXjP,GAAE,kBAAalH,EAAMjC,IAHtB,SAMC,cAACqqB,GAAA,EAAD,UAAepoB,EAAMwN,QANtB,gBAIexN,EAAMjC,QAMtB,cAAC0I,GAAA,EAAD,UACC,cAACkB,GAAA,EAAD,uCAMJ,cAACU,GAAA,EAAD,CAAQggB,MAAI,EAAZ,SACC,cAACjf,GAAA,EAAD,CAASpC,UAAWX,EAAQohB,YAI7B,eAAChhB,GAAA,EAAD,CAAMC,WAAS,EAACE,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGihB,GAAI,EAAG1Q,UAAU,SAArD,UACC,cAAC7H,GAAA,EAAD,CAAKsK,GAAI,EAAT,SACC,cAACnS,GAAA,EAAD,CAAYE,QAAQ,KAApB,+BAGD,cAACmgB,GAAA,EAAD,CAAMC,OAAO,EAAb,SACEJ,EAAe7d,OAAS,EACxB6d,EAAe3Z,KAAI,SAAClO,GAAD,OAClB,cAACkoB,GAAA,EAAD,CACCC,QAAM,EACNlgB,UAAWkO,KACXjP,GAAE,kBAAalH,EAAMjC,IAHtB,SAMC,cAACqqB,GAAA,EAAD,UAAepoB,EAAMwN,QANtB,gBAIexN,EAAMjC,QAMtB,cAAC0I,GAAA,EAAD,UACC,cAACkB,GAAA,EAAD,kD,oBCxKM4gB,OAvCf,YAA0C,IAAZ1oB,EAAW,EAAXA,QACvByG,EAAQC,eAD0B,EAEFqF,mBAAS,MAFP,oBAEhC4c,EAFgC,KAEpBC,EAFoB,KAGlCroB,EAAS2L,aAAY,SAACC,GAAD,OAAQA,EAAG1M,SAAST,OACzCO,EAAmB2M,aAAY,SAACC,GAAD,OAAQA,EAAG1M,SAASF,oBACnD6F,EAAWgH,cAEjBC,qBACC,YAC2B,SAACrM,EAAST,GACnCqpB,EAAcrpB,EAAiB+M,SAAStM,IAEzC6oB,CAAkB7oB,EAAST,KAE5B,CAAEA,EAAkBS,IAGrB,IAAMwM,EAAW,yCAAG,uBAAAlK,EAAA,sDAElB8C,EADGujB,EACMhd,GAAyBpL,EAAQP,GAGjCwL,GAAoBjL,EAAQP,IAEtC4oB,GAAeD,GAPI,2CAAH,qDAUjB,OACC,cAAClc,GAAA,EAAD,CAASlF,MAAOohB,EAAa,WAAa,SAA1C,SACC,cAACjc,GAAA,EAAD,CAAYC,QAASH,EAArB,SACEmc,EACA,cAACG,GAAA,EAAD,CAAWjc,UAAWpG,EAAMyC,QAAQsF,QAAQ+H,QAE5C,cAACwS,GAAA,EAAD,CAAmBlc,UAAWpG,EAAMyC,QAAQsF,QAAQ+H,a,UCP1CyS,OA9Bf,YAAoD,IAAtB7oB,EAAqB,EAArBA,MAAO8oB,EAAc,EAAdA,WACpClrB,QAAQC,IAAI,6BAA8BmC,EAAO8oB,GACjD,IAAM7jB,EAAWgH,cAEX8c,EAAqBhd,aAAY,SAACC,GAAD,OAAQA,EAAG1M,SAASH,gBAE3DvB,QAAQC,IAAI,0CAA2CkrB,GAGvD,IAAIC,EAAejd,aAAY,SAACC,GAAD,OAAQ+c,EAAmB7a,KAAI,SAACnQ,GAAD,OAAQiO,EAAGxO,MAAMH,SAASU,SAGlFkrB,EAA4BF,EAAmBppB,QACpD,SAAC5B,GAAD,OAASirB,EAAa9a,KAAI,SAAC/P,GAAD,OAAUA,EAAKJ,MAAIoO,SAASpO,MAMvDmO,qBAAU,WACT+c,EAA0BC,SAAQ,SAACnrB,GAClC,IAAMI,EAAO8G,EAASgW,GAAQld,IAC9BirB,EAAana,KAAK1Q,QAEjB,IACH,IAAMgrB,EAAW,IAAIC,IAAJ,uBAAaN,GAAb,aAA4BE,KAG7C,OAAO,cAAC,GAAD,CAAUxrB,MAAK,aAAO2rB,GAAYnpB,MAAOA,K,UChB3CqF,GAAYC,cAAW,SAACgB,GAAD,MAAY,CACxC6hB,OAAW,CACVnM,UAAe,EACfxS,aAAe,GAEhB6f,SAAW,CACV9e,QAAa,OACbhD,WAAa,UAEd+hB,SAAQ,aACP/e,QAA+B,OAC/BC,cAA+B,SAC/BjD,WAA+B,cAE9BjB,EAAM+V,YAAYC,GAAG,MAAQ,CAC7B/R,QAAiB,OACjBC,cAAiB,MACjBiF,eAAiB,sBA8EL8Z,OApEf,YAAqE,IAAjD9D,EAAgD,EAAhDA,UAAW1gB,EAAqC,EAArCA,YAAalF,EAAwB,EAAxBA,QAAS2pB,EAAe,EAAfA,MAAO7rB,EAAQ,EAARA,KACrD2I,EAAQC,eACRtB,EAAWgH,cACX5F,EAAUhB,GAAUiB,GACpBmjB,EAAe1d,aAAY,SAACC,GAAD,OAAQA,EAAG1N,KAAKD,iBAE3CqrB,EAAa,SAAC/rB,EAAMyC,GACzB,OAAKqpB,EACDhE,GAAsB,SAAT9nB,EAEf,cAACqK,GAAA,EAAD,CACChB,UAAWX,EAAQ8hB,OACnBhgB,KAAK,QACLL,MAAM,YACND,QAAQ,YACR2E,QAAS,kBAAMvH,EpB2HpB,SAA4BpF,EAASO,GAEpC,OADAxC,QAAQC,IAAI,kCAAmCgC,EAASO,GACxD,yCAAO,WAAe6E,GAAf,UAAA9C,EAAA,6DACN8C,EAAS,CAAEtH,KAAMxB,IADX,kBAICmH,GAAgBqmB,eAAe9pB,EAASO,GAJzC,OAKL6E,EAAS,CAAEtH,KAAMvB,IALZ,gDAOLwB,QAAQC,IAAI,qCAAZ,MACAoH,EAASmY,GAAW,EAAD,KACnBnY,EAAS,CAAEtH,KAAMtB,IATZ,yDAAP,sDoB7H4ButB,CAAmB/pB,EAASO,KALrD,2BAWgB,YAATzC,EAEP,gCACEoH,GACA,cAACiD,GAAA,EAAD,CACChB,UAAWX,EAAQ8hB,OACnB3gB,MAAO,CAAE2c,YAAa,GACtBhc,KAAK,QACLL,MAAM,YACND,QAAQ,YACR2E,QAAS,kBAAMvH,EpB2EtB,SAA+BpF,EAASO,GAEvC,OADAxC,QAAQC,IAAI,yCAA0CuC,EAAQP,GAC9D,yCAAO,WAAeoF,GAAf,UAAA9C,EAAA,6DACN8C,EAAS,CAAEtH,KAAMxB,IADX,kBAGCmH,GAAgBmI,gBAAgBrL,EAAQP,GAHzC,OAILoF,EA0DK,CAAEtH,KAAM1B,EAA0B6B,QA1DP,CAAE+B,UAASO,YAC3C6E,EAAS,CAAEtH,KAAMvB,IALZ,gDAOLwB,QAAQC,IAAI,iCAAZ,MACAoH,EAASmY,GAAW,EAAD,KACnBnY,EAAS,CAAEtH,KAAMtB,IATZ,yDAAP,sDoB7E8BwtB,CAAsBhqB,EAASO,KANxD,2BAWAqlB,GACA,cAACzd,GAAA,EAAD,CACChB,UAAWX,EAAQ8hB,OACnBhgB,KAAK,QACLL,MAAM,UACND,QAAQ,YACR2E,QAAS,kBAAMvH,EpBgFtB,SAAuBpF,EAASO,GAE/B,OADAxC,QAAQC,IAAI,6BAA8BgC,EAASO,GACnD,yCAAO,WAAe6E,GAAf,UAAA9C,EAAA,6DACN8C,EAAS,CAAEtH,KAAMxB,IADX,kBAICmH,GAAgBwmB,YAAYjqB,EAASO,GAJtC,OAKL6E,EAAS,CAAEtH,KAAMvB,IALZ,gDAOLwB,QAAQC,IAAI,gCAAZ,MACAoH,EAASmY,GAAW,EAAD,KACnBnY,EAAS,CAAEtH,KAAMtB,IATZ,yDAAP,sDoBlF8B0tB,CAAclqB,EAASO,KALhD,2BAYQ,KA1Cc,MA6C3B,OACC,cAAC4nB,GAAA,EAAD,CAAMC,OAAO,EAAb,SACEuB,EAAMtb,KAAI,SAACvL,GAAD,OACV,eAACulB,GAAA,EAAD,CAA8BlhB,UAAWX,EAAQijB,SAAU7B,SAAO,EAAlE,UACC,sBAAKzgB,UAAWX,EAAQgjB,SAAxB,UACC,cAACW,GAAA,EAAD,UACC,cAAC5F,GAAA,EAAD,UAASzhB,EAAK7D,SAAS,OAExB,cAACspB,GAAA,EAAD,CAAc/Z,QAAS1L,EAAK7D,cAE7B,qBAAK0I,MAAO,CAAE+C,QAAS,QAAvB,SAAkCmf,EAAW/rB,EAAMgF,EAAKxC,aAP1CwC,EAAK7D,gBC/ElBuG,GAAYC,cAAW,SAACgB,GAC7B,MAAO,CACN2jB,SAAW,CACVnK,SAAkB,EAClBhX,gBAAkB,QAElBrD,MAAkB,QAEnBykB,SAAW,CACVxkB,OAASY,EAAMZ,OAAOykB,OAAS,EAC/BriB,MAAS,YAgEGsiB,OA3Df,YAA+D,IAAlC3E,EAAiC,EAAjCA,UAAW1gB,EAAsB,EAAtBA,YAAa/E,EAAS,EAATA,MACpDpC,QAAQC,IAAI,6BACZ,IAAMyI,EAAQC,eACElB,GAAUiB,GACT2F,cACGF,aAAY,SAACC,GAAD,OAAQA,EAAGlM,OAAOxC,UAElDM,QAAQC,IAAI,oBAAqBmC,GAEjC,IAAMqqB,EAAQrqB,EAAMC,QAAQqqB,MAAK,SAACpqB,GAAD,OAAYA,EAAOC,UAAYH,EAAM0lB,WAEhE6E,EAAavqB,EAAMC,QAAQN,QAChC,SAACO,GAAD,OAAoC,IAAxBA,EAAOsqB,cAAyBtqB,EAAOC,UAAYH,EAAM0lB,WAGhEzlB,EAAUD,EAAMC,QAAQN,QAAO,SAACO,GAAD,OAAoC,IAAxBA,EAAOsqB,gBAKxD,OAHA5sB,QAAQC,IAAI,oBAAqBwsB,EAAOzU,QAAQ2U,GAAatqB,GAI5D,gCACC,cAAC0H,GAAA,EAAD,CAAYI,cAAY,EAACF,QAAQ,KAAjC,qBAGA,cAAC,GAAD,CAAUhI,QAASG,EAAMjC,GAAIyrB,MAAO,CAAEa,KAEtC,cAAC1iB,GAAA,EAAD,CAAYI,cAAY,EAACF,QAAQ,KAAjC,wBAGC0iB,EAAWvgB,OACX,cAAC,GAAD,CACCyb,UAAWA,EACX1gB,YAAaA,EACblF,QAASG,EAAMjC,GACfyrB,MAAOe,EACP5sB,KAAM,SAGP,cAACgK,GAAA,EAAD,CAAYI,cAAY,EAAxB,0CAGD,cAACJ,GAAA,EAAD,CAAYI,cAAY,EAACF,QAAQ,KAAjC,qBAGC5H,EAAQ+J,OACR,cAAC,GAAD,CACCyb,UAAWA,EACX1gB,YAAaA,EACblF,QAASG,EAAMjC,GACfyrB,MAAOvpB,EACPtC,KAAM,YAGP,cAACgK,GAAA,EAAD,CAAYI,cAAY,EAAxB,2CCrEE1C,GAAYC,cAAW,SAACgB,GAC7B,MAAO,CACN2jB,SAAW,CACVnK,SAAkB,EAClBhX,gBAAkB,QAElBrD,MAAkB,QAEnBykB,SAAW,CACVxkB,OAASY,EAAMZ,OAAOykB,OAAS,EAC/BriB,MAAS,YAKZ,SAASoY,GAAS1B,GAAQ,IACjBnF,EAAqCmF,EAArCnF,SAAUtE,EAA2ByJ,EAA3BzJ,MAAOoL,EAAoB3B,EAApB2B,MAAUC,EADX,YACqB5B,EADrB,8BAGxB,OACC,6CACC6B,KAAK,WACLC,OAAQvL,IAAUoL,EAClBpiB,GAAE,yBAAoBoiB,GACtBI,kBAAA,oBAA8BJ,IAC1BC,GALL,aAOErL,IAAUoL,GAAS,cAAC3Q,GAAA,EAAD,CAAKib,EAAG,EAAR,SAAYpR,OAKnC,SAASmH,GAAUL,GAClB,MAAO,CACNpiB,GAAE,oBAA6BoiB,GAC/B,yCAAoCA,IAsHvBuK,OAlHf,YAAyD,IAAhC1qB,EAA+B,EAA/BA,MAAOylB,EAAwB,EAAxBA,UACzBnf,GADiD,EAAboI,UAC5BnI,gBACRF,EAAUhB,GAAUiB,GACpBrB,EAAWgH,cAHsC,EAI3BL,mBAAS,GAJkB,oBAI/CmJ,EAJ+C,KAIxC6L,EAJwC,OAK7BhV,oBAAS,GALoB,oBAK/C+X,EAL+C,KAKzCgH,EALyC,KAMjDC,EAAc7e,aAAY,SAACC,GAAD,OAAQA,EAAG1M,SAAST,OAG9CkG,EAAc6Q,QACnB5V,EAAMC,QAAQqqB,MAAK,SAACpqB,GAAD,OAAYA,EAAOC,UAAYyqB,IAAuC,IAAxB1qB,EAAOsqB,iBAIrE1B,EAAa/c,aAAY,SAACC,GAAD,OAAQ,aAAKhM,EAAMxC,OAAQ0Q,KAAI,SAACnQ,GAAD,OAAQiO,EAAGxO,MAAMH,SAASU,SAGhFkrB,EAA4BjpB,EAAMxC,MAAMmC,QAAO,SAAC5B,GAAD,OAAS+qB,EAAW5a,KAAI,SAAC/P,GAAD,OAAUA,EAAKJ,MAAIoO,SAASpO,MAyBzG,OAxBAH,QAAQC,IAAI,uCAAwCorB,GAEpDrrB,QAAQC,IAAI,2BAA4BirB,GAExC5c,qBACC,WACC+c,EAA0BC,SAAQ,SAACnrB,GAClC,IAAMI,EAAO8G,EAASgW,GAAQld,IAC9B+qB,EAAWja,KAAK1Q,QAGlB,CAAE8G,EAAU6jB,EAAYG,IAcxB,sBAAKjiB,UAAWX,EAAQ4jB,SAAxB,UACC,cAACjJ,GAAA,EAAD,CAAQrb,SAAS,SAAjB,SACC,eAACsb,GAAA,EAAD,CAAMlM,MAAOA,EAAOD,SAbF,SAACoM,EAAOC,GAC5BP,EAASO,IAYqCtZ,QAAQ,YAAYyZ,aAAW,aAAauJ,UAAQ,EAAhG,UACC,cAACtJ,GAAA,EAAD,aAAKjN,MAAM,SAAYkM,GAAU,KACjC,cAACe,GAAA,EAAD,aAAKjN,MAAM,SAAYkM,GAAU,KACjC,cAACe,GAAA,EAAD,aAAKjN,MAAM,WAAckM,GAAU,UAGrC,cAAC,GAAD,CAAUzL,MAAOA,EAAOoL,MAAO,EAA/B,SACC,eAAC1Z,GAAA,EAAD,CAAMC,WAAS,EAAC2Q,UAAU,SAA1B,UACC,eAAC5Q,GAAA,EAAD,CAAMC,WAAS,EAACE,MAAI,EAACC,GAAI,GAAIF,QAAQ,SAArC,UACE5B,GACA,cAACiD,GAAA,EAAD,CAAQF,MAAM,UAAU0E,QAnBD,WAC5Bme,GAAQ,IAkBoDnjB,MAAO,CAAEgC,aAAc,IAA9E,8BAID,cAACshB,GAAA,EAAD,CAAU9jB,UAAWX,EAAQ6jB,SAAUvG,KAAMA,EAAMnX,QApB7B,SAACqF,GAC3B8Y,GAAQ,IAmBJ,SACC,cAACnb,GAAA,EAAD,CACChI,MAAO,CACNsB,gBAAkB,QAClBrD,MAAkB,OAClBgF,SAAkB,KAClBjF,OAAM,UAAe,IAAwC,GAAlCgc,KAAK/M,IAAIqU,EAAW9e,OAAQ,IAAjD,MACNtE,OAAkB,GAClBoC,MAAkB,SAEnB0E,QAAS,SAACqF,GACTA,EAAIkZ,mBAVN,SAaC,cAAC,GAAD,CAAoB/qB,MAAOA,EAAO8oB,WAAYA,WAIjD,cAACriB,GAAA,EAAD,CAAMC,WAAS,EAACE,MAAI,EAACC,GAAI,GAAIF,QAAQ,SAArC,SACEmiB,EAAW9e,OAAS,EACpB,eAACvD,GAAA,EAAD,CAAMC,WAAS,EAACE,MAAI,EAACC,GAAI,GAAzB,UACC,cAACJ,GAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAImkB,GAAI,EAAvB,SACC,cAACjkB,GAAA,EAAD,CAAOE,UAAW,EAAlB,SACC,cAAC,GAAD,CAAYzJ,MAAOsrB,QAGrB,cAACriB,GAAA,EAAD,CAAMC,WAAS,EAACE,MAAI,EAACC,GAAI,GAAImkB,GAAI,EAAjC,SACC,cAACxb,GAAA,EAAD,CACCib,EAAG,EACHjjB,MAAO,CACNhC,OAAM,UAAM,IAAwC,GAAlCgc,KAAK/M,IAAIqU,EAAW9e,OAAQ,IAAxC,MACNvE,MAAS,QAJX,SAOC,cAAC,GAAD,CAAUjI,MAAOsrB,WAKpB,cAACnhB,GAAA,EAAD,CAAYC,MAAM,SAAlB,kGAOJ,cAAC,GAAD,CAAUmN,MAAOA,EAAOoL,MAAO,EAA/B,mBAGA,cAAC,GAAD,CAAUpL,MAAOA,EAAOoL,MAAO,EAA/B,SACC,cAAC,GAAD,CAAmBsF,UAAWA,EAAW1gB,YAAaA,EAAa/E,MAAOA,UC/IxEqF,GAAYC,cAAW,SAACgB,GAC7B,MAAO,CACNwP,aAAiB,CAChBC,QAAU,IAEXuP,eAAiB,CAChBnB,YAAc,QAyHF8G,OApHf,WACCrtB,QAAQC,IAAI,qBAEZ,IAAMwI,EAAUhB,KACV4Q,EAAUC,eACV5P,EAAQC,eACNxI,EAAOynB,eAAPznB,GACFqR,EAAkBrD,aAAY,SAACC,GAAD,OAAQA,EAAG1N,KAAKD,iBAC9C2B,EAAQ+L,aAAY,SAACC,GAAD,OAAQA,EAAGlM,OAAOzC,SAASU,MAC/Cc,EAAMkN,aAAY,SAACC,GAAD,OAAQA,EAAG1M,SAAST,OACtCtB,EAAQwO,aAAY,SAACC,GAAD,OAAQA,EAAGlM,OAAOvC,SACtCkoB,EAAY5mB,IAAQmB,EAAM0lB,QAC1B3gB,EAAc/E,EAAMC,QAAQqqB,MAAK,SAACpqB,GAAD,OAAoC,IAAxBA,EAAOsqB,cAAyBtqB,EAAOC,UAAYtB,KAEtGjB,QAAQC,IAAI,oBAAqBmC,GAdb,MAegB4L,oBAAS,GAfzB,oBAeZqD,EAfY,KAeDC,EAfC,OAgBgBtD,mBAAS,CAC5CyC,QAAU,GACVC,MAAU,KAlBS,oBAgBZI,EAhBY,KAgBDS,EAhBC,KAqBdlK,EAAWgH,cAgCjB,OA7BAC,qBACC,YACsB,yCAAG,WAAOrM,GAAP,UAAAsC,EAAA,sDACvB8C,EAASoY,GAASxd,IADK,2CAAH,sDAGrBqrB,CAAgBntB,KAEjB,CAAEA,EAAIR,EAAO0H,EAAUgR,IAIxB/J,qBACC,WAUK+C,GATc,yCAAG,WAAO7B,EAAerP,GAAtB,gBAAAoE,EAAA,sEACEoM,GAA8BnB,EAAerP,GAD/C,OACdsR,EADc,OAEpBzR,QAAQC,IAAI,UAAWwR,GACnBA,GACHF,EAAaE,GAEdH,GAAa,GANO,2CAAH,uDAUjBI,CAAavC,GAAWhP,KAG1B,CAAEkR,EAAWlR,IAGVkR,EACI,0CA6BP,eAACxI,GAAA,EAAD,CAAMO,UAAU,YAAYN,WAAS,EAAC2Q,UAAU,SAAhD,UACC,cAAC5Q,GAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,SA3BoB,SAAC6H,GACtB,MAA0B,KAAtBA,EAAUL,QAAuB,KAGnC,cAAC5H,GAAA,EAAD,CACCC,WAAS,EACTC,QAAQ,SACRY,WAAW,WACXX,MAAI,EACJC,GAAI,GACJW,MAAO,CACNhC,OAAqB,IACrBgD,gBAAe,cAAakG,EAAUL,QAAvB,KACf1F,iBAAqB,YACrBC,mBAAqB,SACrBC,eAAqB,QACrBC,gBAAqBxC,EAAMyC,QAAQC,UAAUC,MAZ/C,SAeC,qBAAKzB,MAAO,CAAEhC,OAAQ,SAStBsgB,CAAcpX,KAGhB,eAACjI,GAAA,EAAD,CAAMO,UAAWX,EAAQyP,aAAcpP,WAAS,EAACE,MAAI,EAACC,GAAI,GAAIU,WAAW,aAAzE,UACC,eAACd,GAAA,EAAD,CAAMC,WAAS,EAACE,MAAI,EAACC,GAAI,GAAIqd,KAAK,SAASvd,QAAQ,gBAAnD,UACC,cAACgB,GAAA,EAAD,CAAYE,QAAQ,KAAKE,cAAY,EAArC,SACE/H,EAAMwN,OAER,eAAC/G,GAAA,EAAD,CAAMG,MAAI,EAAV,UACEwI,IAAoBqW,GAAa,cAAC,GAAD,CAAoB5lB,QAASG,EAAMjC,KACpE0nB,GAAa,cAAC,GAAD,CAAa9nB,KAAM,SAAUI,GAAIiC,EAAMjC,WAGtDiC,EAAMma,aACN,cAAC1T,GAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIW,MAAO,CAAEgC,aAAc,IAA1C,SACC,cAAC7B,GAAA,EAAD,CAAYI,cAAY,EAACP,MAAO,CAAE6c,WAAY,YAA9C,SACErkB,EAAMma,gBAIV,cAAC1T,GAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,SACC,cAAC,GAAD,CAAe4e,UAAWA,EAAWzlB,MAAOA,EAAO0O,UAAWA,MAG/D,cAACjI,GAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIW,MAAO,CAAEwU,UAAW,IAAvC,SACC,cAAC,GAAD,CAAmBre,KAAK,SAASI,GAAIiC,EAAMjC,GAAIolB,qBAAsBsC,GAAa1gB,aCrIjFM,GAAYC,aAAW,CAC5BwQ,aAAe,CACdC,QAAU,IAEXzL,KAAe,CACdC,QAAgB,OAChBC,cAAgB,SAChB,QAAgB,CACfhB,aAAe,OA8FH2hB,OAzFf,WACC,IAAM9kB,EAAUhB,KACViB,EAAQC,eACRtB,EAAWgH,cACTlO,EAAOynB,eAAPznB,GACFkY,EAAUC,eALI,EAMUtK,mBAAS,MANnB,oBAMZlO,EANY,KAMJ2oB,EANI,KAOd/oB,EAASyO,aAAY,SAACC,GAAD,OAAQA,EAAGlM,OAAOxC,UACvC0C,EAAQ+L,aAAY,SAACC,GAAD,OAAQA,EAAGlM,OAAOzC,SAASU,MAEtC,YAAXT,IACY,SAAXI,GAAmBuY,EAAQpH,KAAR,kBAAwB9Q,IAChC,WAAXL,GAAqBuY,EAAQpH,KAAR,YAG1B,IAfoB,EAoBwBjD,mBALZ,CAC/B4B,KAAc,GACd2M,YAAc,GACd0M,WAAc,IAlBK,oBAoBZC,EApBY,KAoBGC,EApBH,KAoCdnL,EAAY,yCAAG,WAAO/J,GAAP,kBAAA1P,EAAA,sDAKpB,IAAS4H,KAJT8H,EAAI2D,iBAEAlR,EAHgB,eAGCwiB,GAGK,KAArBxiB,EAAUyF,WACNzF,EAAUyF,GAInBnM,QAAQC,IAAI,wBAAyByG,GACrC+hB,EAAU,QACVphB,EAASsY,GAAYxf,EAAIuG,IAbL,2CAAH,sDAgBZmiB,EAAY,yCAAG,uBAAAtkB,EAAA,sDACpBkkB,EAAU,UACVphB,EAASuG,GAAyBxL,EAAM0lB,QAAS3nB,IACjDkH,EAASuY,GAAYzf,IAHD,2CAAH,qDAUlB,OACC,sBAAKiJ,UAAWX,EAAQyP,aAAxB,UACC,cAACnO,GAAA,EAAD,CAAYE,QAAQ,KAAKE,cAAY,EAArC,wBAGA,uBAAMwN,SAAUqG,EAAc5U,UAAWX,EAAQiE,KAAjD,UACC,cAAC,GAAD,CAAsBmJ,SAAUqT,EAAe7M,aA9CpB,SAAClW,GAAU,IAClCyJ,EAAgBzJ,EAAhByJ,KAAMuH,EAAUhR,EAAVgR,MACC,cAATvH,IACHuH,EAAQhR,EAAK4W,SAGdoM,GAAiB,SAAC1R,GAAD,mBAAC,eACdA,GADa,kBAEf7H,EAAQuH,QAsC4EiF,MAAM,IAE1F,eAACvT,GAAA,EAAD,CAAMC,WAAS,EAACE,MAAI,EAACD,QAAQ,gBAAgBa,MAAO,CAAE+B,YAAa,GAAID,aAAc,IAArF,UACC,cAACtB,GAAA,EAAD,CAAQwE,QAbS,WACpByJ,EAAQpH,KAAR,kBAAwB9Q,KAYU8J,QAAQ,YAAYC,MAAM,YAAzD,qBAGA,cAACE,GAAA,EAAD,CACCwE,QAASia,EACT5e,QAAQ,YACRL,MAAO,CAAEsB,gBAAiBxC,EAAMyC,QAAQxL,MAAM0L,KAAMnB,MAAOxB,EAAMyC,QAAQxL,MAAMmpB,cAHhF,0BAOA,cAAC1e,GAAA,EAAD,CAAQH,QAAQ,YAAYC,MAAM,UAAUnK,KAAK,SAAjD,kCClGC0H,GAAYC,cAAW,SAACgB,GAC7B,MAAO,CACNwP,aAAe,CACdC,QAAkB,GAClBjN,gBAAkBxC,EAAMyC,QAAQsV,WAAWC,MAC3C1Y,UAAkBU,EAAM8kB,QAAQ,GAChC,SAAkB,CACjBpP,UAAY,IAEb,QAAkB,CACjBqP,WAAa,SA8EFC,OAxEf,WACC,IAAMhlB,EAAQC,eACRF,EAAUhB,GAAUiB,GAE1B,OACC,eAACG,GAAA,EAAD,CAAMC,WAAS,EAACM,UAAWX,EAAQyP,aAAcuB,UAAU,SAA3D,UACC,cAAC1P,GAAA,EAAD,CAAYC,MAAM,SAASC,QAAQ,KAAKL,MAAO,CAAEiC,WAAY,QAAU1B,cAAY,EAAnF,iCAGA,cAACJ,GAAA,EAAD,CAAYE,QAAQ,KAAKE,cAAY,EAArC,oCAGA,cAACJ,GAAA,EAAD,CAAYI,cAAY,EAAxB,gMAIA,cAACJ,GAAA,EAAD,CAAYI,cAAY,EAAxB,mYAMA,cAACJ,GAAA,EAAD,CAAYI,cAAY,EAAxB,kMAIA,cAACJ,GAAA,EAAD,CAAYE,QAAQ,KAAKE,cAAY,EAArC,qCAGA,eAACJ,GAAA,EAAD,CAAYI,cAAY,EAAxB,mVAI2B,IAC1B,cAACG,GAAA,EAAD,CACCqjB,KAAK,gDACLC,IAAI,aACJxX,OAAO,SACPxM,MAAO,CAAEM,MAAOxB,EAAMyC,QAAQsF,QAAQ+H,OAJvC,oBAOQ,IAZT,gNAgBA,eAACzO,GAAA,EAAD,CAAYE,QAAQ,KAAKE,cAAY,EAArC,wBACa,IACZ,cAACG,GAAA,EAAD,CACCqjB,KAAK,+CACLC,IAAI,aACJxX,OAAO,SACPxM,MAAO,CAAEM,MAAOxB,EAAMyC,QAAQsF,QAAQ+H,OAJvC,mCAFD,OAWA,cAACzO,GAAA,EAAD,CAAYI,cAAY,EAAxB,+oBASA,cAACJ,GAAA,EAAD,CAAYC,MAAM,SAASC,QAAQ,KAAKE,cAAY,EAACP,MAAO,CAAEwU,UAAW,IAAMlU,MAAM,UAArF,qKC5EY2jB,GALQ,SAAC,GAAuC,IAA1BC,EAAyB,EAApCzjB,UAAyB0jB,EAAW,6BACvD9sB,EAAMkN,aAAY,SAACC,GAAD,OAAQA,EAAG1M,SAAST,OAC5C,OAAO,cAAC,KAAD,2BAAW8sB,GAAX,IAAiBC,OAAQ,SAACpN,GAAD,OAAY3f,EAAM,cAAC6sB,EAAD,eAAelN,IAAY,cAAC,KAAD,CAAUtX,GAAG,iBCW5E2kB,GAZY,SAAC,GAAuC,IAA1BH,EAAyB,EAApCzjB,UAAyB0jB,EAAW,+BAC9BA,EAA3BG,SAAYC,SACiBC,MAAM,KAFsB,oBAElDruB,GAFkD,WAE5CI,EAF4C,KAK3D0nB,EAFM1Z,aAAY,SAACC,GAAD,OAAQA,EAAG1M,SAAST,SACxBkN,aAAY,SAACC,GAAD,OAAQA,EAAGrO,GAAMN,SAASU,GAAI2nB,WAG9D,OACC,cAAC,KAAD,2BAAWiG,GAAX,IAAiBC,OAAQ,SAACpN,GAAD,OAAYiH,EAAY,cAACiG,EAAD,eAAelN,IAAY,cAAC,KAAD,CAAUtX,GAAE,WAAMvJ,UCQjFsuB,GAhBU,SAAC,GAAuC,IAA1BP,EAAyB,EAApCzjB,UAAyB0jB,EAAW,6BAC3CI,EAAeJ,EAA3BG,SAAYC,SACpBnuB,QAAQC,IAAI,YAAakuB,GAEzBnuB,QAAQC,IAAI,YAAakuB,EAASC,MAAM,MAJuB,MAKnCD,EAASC,MAAM,KALoB,oBAKvDE,EALuD,KAKhDvuB,EALgD,KAK1CI,EAL0C,KAM/DH,QAAQC,IAAI,SAAUquB,GACtBtuB,QAAQC,IAAI,QAASF,GACrBC,QAAQC,IAAI,MAAOE,GAEnB,IACMouB,EADWpgB,aAAY,SAACC,GAAD,OAAQA,EAAG1M,SAASR,cACrBf,EAE5B,OAAO,cAAC,KAAD,2BAAW4tB,GAAX,IAAiBC,OAAQ,SAACpN,GAAD,OAAY2N,EAAS,cAACT,EAAD,eAAelN,IAAY,cAAC,KAAD,CAAUtX,GAAG,iBCoE/EklB,OAnEf,WAyBC,OAxBgBlW,eACQnK,aAAY,SAACC,GAAD,OAAQA,EAAG1N,KAAKf,SACxBwO,aAAY,SAACC,GAAD,OAAQA,EAAG1M,SAAS/B,SAClCwO,aAAY,SAACC,GAAD,OAAQA,EAAGlM,OAAOvC,SAC/BwO,aAAY,SAACC,GAAD,OAAQA,EAAGxO,MAAMD,SAqBrD,eAAC,KAAD,WACC,cAAC,KAAD,CAAO8uB,OAAK,EAACC,KAAK,IAAlB,SACC,cAAC,GAAD,MAED,cAAC,KAAD,CAAOD,OAAK,EAACC,KAAK,SAAlB,SACC,cAAC,GAAD,MAED,cAAC,GAAD,CAAkBrkB,UAAWyf,GAAiB2E,OAAK,EAACC,KAAK,qBACzD,cAAC,GAAD,CAAkBrkB,UAAW+O,GAAUqV,OAAK,EAACC,KAAK,0BAClD,cAAC,KAAD,CAAOD,OAAK,EAACC,KAAK,UAAlB,SACC,cAAC,GAAD,MAED,cAAC,KAAD,CAAOD,OAAK,EAACC,KAAK,UAAlB,SACC,cAAC,GAAD,MAED,cAAC,KAAD,CAAOD,OAAK,EAACC,KAAK,SAAlB,SACC,cAAC,GAAD,MAED,cAAC,GAAD,CAAgBrkB,UAAWqT,GAAe+Q,OAAK,EAACC,KAAK,eACrD,cAAC,KAAD,CAAOD,OAAK,EAACC,KAAK,aAAlB,SACC,cAAC,GAAD,MAED,cAAC,GAAD,CAAoBrkB,UAAWme,GAAUiG,OAAK,EAACC,KAAK,oBACpD,cAAC,KAAD,CAAOD,OAAK,EAACC,KAAK,UAAlB,SACC,cAAC,GAAD,MAED,cAAC,GAAD,CAAgBrkB,UAAW2e,GAAgByF,OAAK,EAACC,KAAK,gBACtD,cAAC,KAAD,CAAOD,OAAK,EAACC,KAAK,cAAlB,SACC,cAAC,GAAD,MAED,cAAC,GAAD,CAAoBrkB,UAAWkjB,GAAWkB,OAAK,EAACC,KAAK,qBACrD,cAAC,KAAD,CAAOD,OAAK,EAACC,KAAK,OAAlB,SACC,cAAC,GAAD,MAED,cAAC,KAAD,UACC,cAAC,GAAD,U,UCnFEC,GAAc,IAwDLlnB,GAtDGC,cAAW,SAACgB,GAAW,IAAD,IACvC,MAAO,CACNjG,KAAc,CACbkK,QAAU,QAEX4f,QAAM,mBACJ7jB,EAAM+V,YAAYC,GAAG,MAAQ,CAC7B7W,MAAa8mB,GACbC,WAAa,IAHT,cAKL,qCAAuC,CACtCC,iBAAmBnmB,EAAMyC,QAAQsF,QAAQpF,OANrC,GASNyjB,OAAM,eACJpmB,EAAM+V,YAAYC,GAAG,MAAQ,CAC7B7W,MAAK,sBAAuB8mB,GAAvB,OACLlB,WAAakB,KAGfI,WAAU,aACTxI,YAA+B7d,EAAMoB,QAAQ,IAC5CpB,EAAM+V,YAAYC,GAAG,MAAQ,CAC7B/R,QAAU,SAIZ4R,QAAO,2BACH7V,EAAM4V,OAAOC,SADV,IAEN5R,QAAkB,OAClBkF,eAAkB,gBAClB3G,gBAAkBxC,EAAMyC,QAAQsF,QAAQpF,OAEzC2jB,YAAc,CACbnnB,MAAQ8mB,IAET5hB,SAAO,GACNmV,SAA+B,EAC/BhX,gBAA+BxC,EAAMyC,QAAQsF,QAAQwe,UAF/C,cAGLvmB,EAAM+V,YAAYC,GAAG,MAAQ,CAC7B/S,YAAejD,EAAMoB,QAAQ,IAC7B4B,aAAehD,EAAMoB,QAAQ,MALxB,cAOLpB,EAAM+V,YAAYC,GAAG,MAAQ,CAC7B/S,YAAejD,EAAMoB,QAAQ,IAC7B4B,aAAehD,EAAMoB,QAAQ,MATxB,GAYPolB,OAAc,CACbvjB,YAAcjD,EAAMoB,QAAQ,Q,wCCsFhBqlB,qBAnHf,SAAmBvO,GAAQ,IACNuN,EAAevN,EAA3BsN,SAAYC,SAEd3c,EAAkBrD,aAAY,SAACC,GAAD,OAAQA,EAAG1N,KAAKD,iBAC9CiI,EAAQC,eACRF,EAAUhB,GAAUiB,GAE1B,OACC,gCACC,cAACS,GAAA,EAAD,CACCC,UAAWX,EAAQ8V,QACnB3U,MAAO,CACNsB,gBAAkBxC,EAAMyC,QAAQsF,QAAQpF,KACxCwG,eAAkB,SAClBlI,WAAkB,UAEnBylB,QAAM,EACN/lB,UAAW,EARZ,SAUC,cAACU,GAAA,EAAD,CAAYC,MAAM,SAASC,QAAQ,KAAKolB,QAAM,EAACzlB,MAAO,CAAEM,MAAO,SAA/D,6BAKD,cAACsB,GAAA,EAAD,IACA,eAAC4e,GAAA,EAAD,WACC,eAACE,GAAA,EAAD,CAAUC,QAAM,EAAClgB,UAAWC,KAAMhB,GAAG,IAAIgmB,SAAU,MAAQnB,EAA3D,UACC,cAACoB,GAAA,EAAD,UACC,cAACC,GAAA,EAAD,MAED,cAAChF,GAAA,EAAD,CAAc/Z,QAAQ,YAEvB,cAACjF,GAAA,EAAD,IAEA,eAAC8e,GAAA,EAAD,CAAU1gB,MAAO,CAAEsB,gBAAiBxC,EAAMyC,QAAQC,UAAU6jB,UAAYQ,UAAWje,EAAnF,UACC,cAAC+d,GAAA,EAAD,UACC,cAAChP,GAAA,EAAD,MAED,cAACiK,GAAA,EAAD,CAAc/Z,QAAQ,cAEvB,eAAC2Z,GAAA,EAAD,CAAM/f,UAAU,MAAMqlB,gBAAc,EAApC,UACC,eAACpF,GAAA,EAAD,CACCC,QAAM,EACNnhB,UAAWX,EAAQymB,OACnB7kB,UAAWC,KACXhB,GAAG,aACHgmB,SAAU,eAAiBnB,EAC3BsB,UAAWje,EANZ,UAQC,cAAC+d,GAAA,EAAD,UACC,cAAC9c,GAAA,EAAD,MAED,cAAC+X,GAAA,EAAD,CAAc/Z,QAAQ,YAEvB,eAAC6Z,GAAA,EAAD,CACCC,QAAM,EACNnhB,UAAWX,EAAQymB,OACnB7kB,UAAWC,KACXhB,GAAG,cACHgmB,SAAU,gBAAkBnB,EAC5BsB,UAAWje,EANZ,UAQC,cAAC+d,GAAA,EAAD,UACC,cAACxE,GAAA,EAAD,MAED,cAACP,GAAA,EAAD,CAAc/Z,QAAQ,mBAIzB,cAACjF,GAAA,EAAD,IACA,eAAC4e,GAAA,EAAD,CAAMxgB,MAAO,CAAEC,WAAY,GAA3B,UACC,eAACygB,GAAA,EAAD,CAAU1gB,MAAO,CAAEsB,gBAAiBxC,EAAMyC,QAAQC,UAAU6jB,UAA5D,UACC,cAACM,GAAA,EAAD,UACC,cAACI,GAAA,EAAD,MAED,cAACnF,GAAA,EAAD,CAAc/Z,QAAQ,eAEvB,eAAC2Z,GAAA,EAAD,CAAM/f,UAAU,MAAMqlB,gBAAc,EAApC,UACC,eAACpF,GAAA,EAAD,CACCC,QAAM,EACNnhB,UAAWX,EAAQymB,OACnB7kB,UAAWC,KACXhB,GAAG,SACHgmB,SAAU,WAAanB,EALxB,UAOC,cAACoB,GAAA,EAAD,UACC,cAAC9c,GAAA,EAAD,MAED,cAAC+X,GAAA,EAAD,CAAc/Z,QAAQ,aAEvB,eAAC6Z,GAAA,EAAD,CACCC,QAAM,EACNnhB,UAAWX,EAAQymB,OACnB7kB,UAAWC,KACXhB,GAAG,UACHgmB,SAAU,YAAcnB,EALzB,UAOC,cAACoB,GAAA,EAAD,UACC,cAACxE,GAAA,EAAD,MAED,cAACP,GAAA,EAAD,CAAc/Z,QAAQ,iBAGxB,cAACjF,GAAA,EAAD,IACA,eAAC8e,GAAA,EAAD,CAAUC,QAAM,EAAClgB,UAAWC,KAAMhB,GAAG,SAASgmB,SAAU,WAAanB,EAArE,UACC,cAACoB,GAAA,EAAD,UACC,cAACK,GAAA,EAAD,MAED,cAACpF,GAAA,EAAD,CAAc/Z,QAAQ,sB,wCCKZof,OA3Gf,YAAsD,IAAjCC,EAAgC,EAAhCA,mBACdzX,GAD8C,sCACpCC,gBACV5P,EAAQC,eACRF,EAAUhB,GAAUiB,GACpBqnB,EAAa5hB,aAAY,SAACC,GAAD,OAAQA,EAAG1N,KAAKD,iBACzCS,EAAWiN,aAAY,SAACC,GAAD,OAAQA,EAAG1M,SAASR,YAC3CmG,EAAWgH,cANmC,EAOlBL,mBAAS,MAPS,oBAO5C6X,EAP4C,KAOlCC,EAPkC,KAQ9CC,EAAO/N,QAAQ6N,GAMfmK,EAAc,WACnBlK,EAAY,OAab,OACC,cAAC1C,GAAA,EAAD,CAAQrb,SAAS,QAAQqB,UAAWX,EAAQqmB,OAA5C,SACC,eAACmB,GAAA,EAAD,CAAS7mB,UAAWX,EAAQ8V,QAA5B,UACC,cAAC5P,GAAA,EAAD,CACCzE,MAAM,UACNwZ,aAAW,cACXwM,KAAK,QACLthB,QAASkhB,EACT1mB,UAAWX,EAAQsmB,WALpB,SAOC,cAAC,KAAD,MAED,cAACtkB,GAAA,EAAD,CAAQ0lB,MAAI,EAACxlB,eAAe,KAA5B,SACC,cAACZ,GAAA,EAAD,CAAYE,QAAQ,KAAKolB,QAAM,EAA/B,6BAID,cAAC5kB,GAAA,EAAD,CAAQ2lB,QAAM,EAACzlB,eAAe,KAA9B,SACC,0BAEAolB,EACA,gCACC,cAACphB,GAAA,EAAD,CACC+U,aAAW,0BACXgD,gBAAc,cACdC,gBAAc,OACd/X,QA5Ca,SAAC0U,GACnBwC,EAAYxC,EAAM9H,gBA4CbtR,MAAM,UALP,SAOC,cAACmmB,GAAA,EAAD,MAED,eAACxJ,GAAA,EAAD,CACC1mB,GAAG,cACH0lB,SAAUA,EACVyK,aAAc,CACbC,SAAa,MACbC,WAAa,SAEd1J,aAAW,EACX2J,gBAAiB,CAChBF,SAAa,MACbC,WAAa,SAEdzK,KAAMA,EACNgB,QAASiJ,EAbV,UAeC,cAACrT,GAAA,EAAD,CAAU/N,QAzDW,WAC1BohB,IACA3X,EAAQpH,KAAR,iBAAuB/P,KAuDlB,qBAGA,cAACyb,GAAA,EAAD,CAAU/N,QAvDM,WACrBohB,IACA3oB,EAASD,MACTiR,EAAQpH,KAAK,MAoDR,4BAMF,8BACC,eAACyf,GAAA,EAAD,CAAanmB,KAAK,QAAQN,QAAQ,OAAlC,UACC,cAACG,GAAA,EAAD,CACCR,MAAO,CAAEM,MAAO,SAChBG,UAAWC,KACXhB,GAAG,UAHJ,qBAOA,cAACc,GAAA,EAAD,CACCR,MAAO,CAAEM,MAAO,SAChBG,UAAWC,KACXhB,GAAG,UAHJ,gCC/BQqnB,OA5Df,SAAoB/P,GAAQ,IACnBgQ,EAAqBhQ,EAArBgQ,OAAQnV,EAAamF,EAAbnF,SACV/S,EAAQC,eACRF,EAAUhB,GAAUiB,GAHA,EAIYsF,oBAAS,GAJrB,oBAIlB6iB,EAJkB,KAINC,EAJM,QAKP3iB,aAAY,SAACC,GAAD,OAAQA,EAAG1N,KAAKD,iBAC9B4N,cACiBqH,IAAM1H,SAAS,OAPvB,oBAOlB6X,EAPkB,KAUpBiK,GAVoB,KAQb9X,QAAQ6N,GAEM,WAC1BiL,GAAeD,KAGV/nB,OACM6f,IAAXiI,EAAuB,kBAAMA,IAASG,SAASC,WAAOrI,EAEvD,OACC,sBAAKvf,UAAWX,EAAQhG,KAAxB,UACC,cAAC,GAAD,CAAWqtB,mBAAoBA,IAC/B,sBAAK1mB,UAAWX,EAAQ8jB,OAAQ7I,aAAW,oBAA3C,UACC,cAACjZ,GAAA,EAAD,CAAQ0lB,MAAI,EAACxlB,eAAe,KAA5B,SACC,cAACsmB,GAAA,EAAD,CACCnoB,UAAWA,EACXmB,QAAQ,YACRinB,OACqB,QAApBxoB,EAAM+Q,UAAsB,QAAU,OAEvCsM,KAAM8K,EACN9J,QAAS+I,EACTrnB,QAAS,CACRiY,MAAQjY,EAAQumB,aAEjBmC,WAAY,CACXrK,aAAc,GAZhB,SAeC,cAAC,GAAD,QAGF,cAACrc,GAAA,EAAD,CAAQ2lB,QAAM,EAACzlB,eAAe,KAA9B,SACC,cAACsmB,GAAA,EAAD,CACCxoB,QAAS,CACRiY,MAAQjY,EAAQumB,aAEjB/kB,QAAQ,YACR8b,MAAI,EALL,SAOC,cAAC,GAAD,WAIH,uBAAM3c,UAAWX,EAAQsE,QAAzB,UACC,qBAAK3D,UAAWX,EAAQ8V,UACvB9C,SC/CU2V,OA1Bf,WACC,IAAM1oB,EAAQC,eAERtB,GADUI,GAAUiB,GACT2F,eAYjB,OARAC,qBACC,WACC,IAAM+iB,EAAchqB,G7DwFf,SAASA,GACf,IAmBC,OAlBoB3G,GAAK4wB,mBAAL,iCAAA/sB,EAAA,MAAwB,WAAOQ,GAAP,UAAAR,EAAA,sDACvCQ,EACH/E,QAAQC,IAAI,oBAAqB8E,IAYjC/E,QAAQC,IAAI,wBACZoH,EAASD,OAfiC,2CAAxB,uDAmBnB,MAAOmqB,GACRvxB,QAAQC,IAAI,mBAAoBsxB,GAChClqB,EAASC,GAAUiqB,Q6D9GnB,OAAO,kBAAMF,OAEd,CAAEhqB,IAIF,cAAC,KAAD,UACC,qBAAK+B,UAAU,MAAf,SACC,cAAC,GAAD,UACC,cAAC,GAAD,W,kDCfCV,GAAQ8oB,aAAe,CAC5BrmB,QAAU,CACTsF,QAAY,CACXqS,KAAW2O,KAAW,KACtB3X,OAAW2X,KAAWC,KACtBzC,SAAWwC,KAAW,KAEvBrmB,UAAY,CACX0X,KAAW6O,KAAM,KACjB1C,SAAW0C,KAAM,QAKpBC,IAAS5D,OACR,cAAC,IAAD,CAAU9qB,MAAOA,GAAjB,SACC,cAAC,IAAD,CAAa2uB,QAAS,KAAMC,UAAWvuB,GAAvC,SACC,cAACwuB,GAAA,EAAD,CAAerpB,MAAOA,GAAtB,SACC,cAACspB,GAAA,EAAD,UACC,cAAC,GAAD,YAKJjB,SAASkB,eAAe,W","file":"static/js/main.7d03f724.chunk.js","sourcesContent":["/**\n * Establish and export action types for consistency across app.\n */\n\n// Tree Action Types\nexport const LOAD_TREE = 'LOAD_TREE';\nexport const LOAD_TREES = 'LOAD_TREES';\nexport const REMOVE_TREE = 'REMOVE_TREE';\nexport const TREE_ERROR = 'TREE_ERROR';\nexport const TREE_REQUEST_START = 'TREE_REQUEST_START';\nexport const TREE_REQUEST_SUCCESS = 'TREE_REQUEST_SUCCESS';\nexport const TREE_REQUEST_FAILURE = 'TREE_REQUEST_FAILURE';\n\n// Group Action Types\nexport const LOAD_GROUP = 'LOAD_GROUP';\nexport const REMOVE_GROUP = 'REMOVE_GROUP';\nexport const LOAD_GROUPS = 'LOAD_GROUPS';\nexport const LOAD_TREE_TO_GROUP = 'LOAD_TREE_TO_GROUP';\nexport const REMOVE_TREE_FROM_GROUP = 'REMOVE_TREE_FROM_GROUP';\nexport const LOAD_MEMBER_TO_GROUP = 'LOAD_MEMBER_TO_GROUP';\nexport const REMOVE_MEMBER_FROM_GROUP = 'REMOVE_MEMBER_FROM_GROUP';\nexport const GROUP_ERROR = 'GROUP_ERROR';\nexport const GROUP_REQUEST_START = 'GROUP_REQUEST_START';\nexport const GROUP_REQUEST_SUCCESS = 'GROUP_REQUEST_SUCCESS';\nexport const GROUP_REQUEST_FAILURE = 'GROUP_REQUEST_FAILURE';\n\n// Curr User Action Types\nexport const LOAD_CURR_USER = 'LOAD_CURR_USER';\nexport const LOAD_CURR_USER_ERROR = 'LOAD_CURR_USER_ERROR';\nexport const LOAD_USERS_ERROR = 'LOAD_USERS_ERROR';\nexport const LOAD_CURR_USER_REQUEST = 'LOAD_CURR_USER_REQUEST';\nexport const LOAD_CURR_USER_SUCCESS = 'LOAD_CURR_USER_SUCCESS';\nexport const LOAD_CURR_USER_FAILURE = 'LOAD_CURR_USER_FAILURE';\nexport const RESET_CURR_USER = 'RESET_CURR_USER';\n\nexport const LOAD_SAVED_TREE = 'LOAD_SAVED_TREE';\nexport const REMOVE_SAVED_TREE = 'REMOVE_SAVED_TREE';\n\nexport const LOAD_FOLLOWED_GROUP = 'LOAD_FOLLOWED_GROUP';\nexport const REMOVE_FOLLOWED_GROUP = 'REMOVE_FOLLOWED_GROUP';\n\n// Auth Action Types\nexport const AUTH_USER = 'AUTH_USER';\nexport const AUTH_ERROR = 'AUTH_ERROR';\nexport const SIGN_OUT_USER = 'SIGN_OUT_USER';\n\nexport const RESET_ALL = 'RESET_ALL';\n","/**\n * treeReducer with cases for reseting data and loading a tree.\n */\n\nimport {\n\tLOAD_TREE,\n\tLOAD_TREES,\n\tREMOVE_TREE,\n\tTREE_ERROR,\n\tRESET_ALL,\n\tTREE_REQUEST_START,\n\tTREE_REQUEST_SUCCESS,\n\tTREE_REQUEST_FAILURE\n} from '../actions/types';\n\nconst INITIAL_STATE = { entities: {}, status: 'idle', error: null };\n\nfunction trees(state = INITIAL_STATE, action) {\n\tswitch (action.type) {\n\t\tcase RESET_ALL:\n\t\t\treturn { ...INITIAL_STATE };\n\n\t\tcase TREE_REQUEST_START:\n\t\t\treturn { ...state, status: 'loading' };\n\n\t\tcase TREE_REQUEST_SUCCESS:\n\t\t\treturn { ...state, status: 'idle' };\n\n\t\tcase TREE_REQUEST_FAILURE:\n\t\t\treturn { ...state, status: 'failure' };\n\n\t\tcase LOAD_TREE:\n\t\t\tconsole.log('REDUCERS LOAD_TREE - action', action);\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tentities : {\n\t\t\t\t\t...state.entities,\n\t\t\t\t\t[action.payload.id]: { ...action.payload }\n\t\t\t\t},\n\t\t\t\tstatus   : 'success',\n\t\t\t\terror    : null\n\t\t\t};\n\n\t\tcase LOAD_TREES:\n\t\t\tconsole.log('REDUCERS LOAD_TREES - action', action);\n\t\t\tconst entitiesObj = action.payload.reduce((obj, tree) => {\n\t\t\t\tobj[tree.id] = tree;\n\t\t\t\treturn obj;\n\t\t\t}, {});\n\n\t\t\treturn { entities: entitiesObj, status: 'success', error: null };\n\n\t\tcase REMOVE_TREE:\n\t\t\tconsole.log('REDUCERS REMOVE_TREE - action', action);\n\t\t\tconst { [action.payload]: omit, ...trees } = state.entities;\n\n\t\t\treturn { ...state, entities: trees, status: 'success', error: null };\n\n\t\tcase TREE_ERROR:\n\t\t\tconsole.log('REDUCERS TREE_ERROR - action', action);\n\n\t\t\treturn { ...state, error: action.payload };\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n\nexport default trees;\n","/**\n * authReducer with cases for handling current authenticated user state.\n */\n\nimport { AUTH_ERROR, AUTH_USER, SIGN_OUT_USER } from '../actions/types';\n\nconst INITIAL_STATE = {\n\ttoken         : null,\n\tauthenticated : false,\n\terror         : null\n};\n\nfunction auth(state = INITIAL_STATE, action) {\n\tswitch (action.type) {\n\t\tcase AUTH_USER:\n\t\t\tconsole.log('Reducers AUTH_USER - action', action);\n\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\ttoken         : action.payload.token,\n\t\t\t\tauthenticated : true,\n\t\t\t\terror         : null\n\t\t\t};\n\t\tcase SIGN_OUT_USER:\n\t\t\tconsole.log('Reducers SIGN_OUT_USER - action', action);\n\t\t\treturn { ...INITIAL_STATE };\n\t\tcase AUTH_ERROR:\n\t\t\tconsole.log('Reducers AUTH_ERROR - action', action);\n\t\t\tlet errors;\n\t\t\tif (action.payload.hasOwnProperty('code')) {\n\t\t\t\terrors = [\n\t\t\t\t\t{\n\t\t\t\t\t\tstatus  : action.payload.code,\n\t\t\t\t\t\tmessage : action.payload.message\n\t\t\t\t\t}\n\t\t\t\t];\n\t\t\t}\n\t\t\telse {\n\t\t\t\terrors = Array.isArray(action.payload)\n\t\t\t\t\t? action.payload\n\t\t\t\t\t: [ action.payload ];\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\terror : errors\n\t\t\t};\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n\nexport default auth;\n","/**\n * currUserReducer with cases for handling currently logged in user state.\n */\n\nimport {\n\tLOAD_CURR_USER,\n\tLOAD_CURR_USER_ERROR,\n\tRESET_CURR_USER,\n\tLOAD_SAVED_TREE,\n\tREMOVE_SAVED_TREE,\n\tLOAD_FOLLOWED_GROUP,\n\tREMOVE_FOLLOWED_GROUP,\n\tLOAD_CURR_USER_REQUEST,\n\tLOAD_CURR_USER_SUCCESS,\n\tLOAD_CURR_USER_FAILURE\n} from '../actions/types';\n\nconst INITIAL_STATE = {\n\tuid              : null,\n\tusername         : null,\n\temail            : null,\n\timg_url          : null,\n\tcreated_at       : null,\n\thome_geolocation : [],\n\tsavedTreeIds     : [],\n\tfollowedGroupIds : [],\n\tcommentIds       : [],\n\tstatus           : 'idle',\n\terror            : null\n};\n\nfunction currUser(state = INITIAL_STATE, action) {\n\tswitch (action.type) {\n\t\tcase LOAD_CURR_USER_REQUEST:\n\t\t\treturn { ...state, status: 'isLoading' };\n\n\t\tcase LOAD_CURR_USER_SUCCESS:\n\t\t\treturn { ...state, status: 'idle' };\n\n\t\tcase LOAD_CURR_USER_FAILURE:\n\t\t\treturn { ...state, status: 'failure' };\n\n\t\tcase LOAD_CURR_USER:\n\t\t\tconsole.log('Reducers LOAD_CURR_USER - action', action);\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tuid              : action.payload.firebase_id,\n\t\t\t\tis_admin         : action.payload.is_admin,\n\t\t\t\tusername         : action.payload.username,\n\t\t\t\temail            : action.payload.email,\n\t\t\t\timg_url          : action.payload.img_url,\n\t\t\t\tcreated_at       : action.payload.created_at,\n\t\t\t\thome_geolocation : action.payload.home_geolocation,\n\t\t\t\tsavedTreeIds     : action.payload.saved_tree_ids || [],\n\t\t\t\tfollowedGroupIds : action.payload.followed_group_ids || [],\n\t\t\t\tcommentIds       : action.payload.commentIds || [],\n\t\t\t\tstatus           : 'success',\n\t\t\t\terror            : null\n\t\t\t};\n\n\t\tcase LOAD_CURR_USER_ERROR:\n\t\t\tconsole.log('Reducers LOAD_CURR_USER_ERROR - action', action);\n\t\t\tlet errors;\n\t\t\tif (action.payload.hasOwnProperty('code')) {\n\t\t\t\terrors = [\n\t\t\t\t\t{\n\t\t\t\t\t\tstatus  : action.payload.code,\n\t\t\t\t\t\tmessage : action.payload.message\n\t\t\t\t\t}\n\t\t\t\t];\n\t\t\t}\n\t\t\telse {\n\t\t\t\terrors = Array.isArray(action.payload) ? action.payload : [ action.payload ];\n\t\t\t}\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\terror : errors\n\t\t\t};\n\n\t\tcase RESET_CURR_USER:\n\t\t\tconsole.log('Reducers RESET_CURR_USER - action', action);\n\t\t\treturn { ...INITIAL_STATE };\n\n\t\tcase LOAD_SAVED_TREE:\n\t\t\tconsole.log('Reducers LOAD_SAVED_TREE - action', action);\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tstatus       : 'success',\n\t\t\t\tsavedTreeIds : [ ...state.savedTreeIds, action.payload ]\n\t\t\t};\n\n\t\tcase REMOVE_SAVED_TREE:\n\t\t\tconsole.log('Reducers REMOVE_SAVED_TREE - action', action);\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tstatus       : 'success',\n\t\t\t\tsavedTreeIds : state.savedTreeIds.filter((treeId) => treeId !== action.payload)\n\t\t\t};\n\n\t\tcase LOAD_FOLLOWED_GROUP:\n\t\t\tconsole.log('Reducers LOAD_FOLLOWED_GROUP - action', action);\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tstatus           : 'success',\n\t\t\t\tfollowedGroupIds : [ ...state.followedGroupIds, action.payload ]\n\t\t\t};\n\n\t\tcase REMOVE_FOLLOWED_GROUP:\n\t\t\tconsole.log('Reducers REMOVE_FOLLOWED_GROUP - action', action);\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tstatus           : 'success',\n\t\t\t\tfollowedGroupIds : state.followedGroupIds.filter((groupId) => groupId !== action.payload)\n\t\t\t};\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n\nexport default currUser;\n","/**\n * groupReducer with cases for reseting data and loading a group.\n */\n\nimport {\n\tLOAD_GROUP,\n\tLOAD_GROUPS,\n\tREMOVE_GROUP,\n\tLOAD_TREE_TO_GROUP,\n\tREMOVE_TREE_FROM_GROUP,\n\t// LOAD_MEMBER_TO_GROUP,\n\tREMOVE_MEMBER_FROM_GROUP,\n\tGROUP_ERROR,\n\tGROUP_REQUEST_START,\n\tGROUP_REQUEST_SUCCESS,\n\tGROUP_REQUEST_FAILURE,\n\tRESET_ALL\n} from '../actions/types';\n\nconst INITIAL_STATE = { entities: {}, status: 'idle', error: null };\n\nfunction groups(state = INITIAL_STATE, action) {\n\tswitch (action.type) {\n\t\tcase RESET_ALL:\n\t\t\tconsole.log('REDUCERS RESET_ALL');\n\n\t\t\treturn { ...INITIAL_STATE };\n\n\t\tcase GROUP_REQUEST_START:\n\t\t\tconsole.log('REDUCERS GROUP_REQUEST_START');\n\n\t\t\treturn { ...state, status: 'loading' };\n\n\t\tcase GROUP_REQUEST_SUCCESS:\n\t\t\tconsole.log('REDUCERS GROUP_REQUEST_SUCCESS');\n\n\t\t\treturn { ...state, status: 'idle' };\n\n\t\tcase GROUP_REQUEST_FAILURE:\n\t\t\tconsole.log('REDUCERS GROUP_REQUEST_FAILURE');\n\n\t\t\treturn { ...state, status: 'failure' };\n\n\t\tcase LOAD_GROUP:\n\t\t\tconsole.log('REDUCERS LOAD_GROUP - action', action);\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tentities : {\n\t\t\t\t\t...state.entities,\n\t\t\t\t\t[action.payload.id]: { ...action.payload }\n\t\t\t\t},\n\t\t\t\tstatus   : 'success',\n\t\t\t\terror    : null\n\t\t\t};\n\n\t\tcase LOAD_GROUPS:\n\t\t\tconsole.log('REDUCERS LOAD_GROUPS - action', action);\n\t\t\tconst groupsObj = action.payload.reduce((obj, group) => {\n\t\t\t\tobj[group.id] = group;\n\t\t\t\treturn obj;\n\t\t\t}, {});\n\t\t\treturn { entities: groupsObj, status: 'success', error: null };\n\n\t\tcase REMOVE_GROUP:\n\t\t\tconsole.log('REDUCERS REMOVE_GROUP - action', action);\n\t\t\tconst { [action.payload]: omit, ...groups } = state.entities;\n\t\t\tconsole.log('REDUCERS REMOVE_GROUP - state.entities', state.entities);\n\t\t\tconsole.log('REDUCERS REMOVE_GROUP - groups', groups);\n\n\t\t\treturn { ...state, entities: groups, status: 'success', error: null };\n\n\t\tcase LOAD_TREE_TO_GROUP:\n\t\t\tconsole.log('REDUCERS LOAD_TREE_TO_GROUP - action', action);\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tstatus   : 'success',\n\t\t\t\terror    : null,\n\t\t\t\tentities : {\n\t\t\t\t\t...state.entities,\n\t\t\t\t\t[action.payload.groupId]: {\n\t\t\t\t\t\t...state.entities[action.payload.groupId],\n\t\t\t\t\t\ttrees : [ ...state.entities[action.payload.groupId].trees, action.payload.treeId ]\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\n\t\tcase REMOVE_TREE_FROM_GROUP:\n\t\t\tconsole.log('REDUCERS REMOVE_TREE_FROM_GROUP - action', action);\n\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tstatus   : 'success',\n\t\t\t\terror    : null,\n\t\t\t\tentities : {\n\t\t\t\t\t...state.entities,\n\t\t\t\t\t[action.payload.groupId]: {\n\t\t\t\t\t\t...state.entities[action.payload.groupId],\n\t\t\t\t\t\ttrees : [\n\t\t\t\t\t\t\t...state.entities[action.payload.groupId].trees.filter(\n\t\t\t\t\t\t\t\t(treeId) => treeId !== action.payload.treeId\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\n\t\t/**\n\t\t * Currently no use case for this. \n\t\t */\n\t\t// case LOAD_MEMBER_TO_GROUP:\n\t\t// \tconsole.log('REDUCERS LOAD_MEMBER_TO_GROUP - action', action);\n\t\t// \treturn {\n\t\t// \t\t...state,\n\t\t// \t\tstatus   : 'success',\n\t\t// \t\terror    : null,\n\t\t// \t\tentities : {\n\t\t// \t\t\t...state.entities,\n\t\t// \t\t\t[action.payload.groupId]: {\n\t\t// \t\t\t\t...state.entities[action.payload.groupId],\n\t\t// \t\t\t\tmembers : [ ...state.entities[action.payload.groupId].members, action.payload.member ]\n\t\t// \t\t\t}\n\t\t// \t\t}\n\t\t// \t};\n\n\t\tcase REMOVE_MEMBER_FROM_GROUP:\n\t\t\tconsole.log('REDUCERS REMOVE_MEMBER_FROM_GROUP - action', action);\n\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tstatus   : 'success',\n\t\t\t\terror    : null,\n\t\t\t\tentities : {\n\t\t\t\t\t...state.entities,\n\t\t\t\t\t[action.payload.groupId]: {\n\t\t\t\t\t\t...state.entities[action.payload.groupId],\n\t\t\t\t\t\tmembers : [\n\t\t\t\t\t\t\t...state.entities[action.payload.groupId].members.filter(\n\t\t\t\t\t\t\t\t(member) => member.user_id !== action.payload.userId\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\n\t\tcase GROUP_ERROR:\n\t\t\tconsole.log('REDUCERS GROUP_ERROR - action', action);\n\n\t\t\treturn { ...state, error: action.payload };\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n\nexport default groups;\n","/**\n * rootReducer which combines reducers from \n * trees, groups, users, and comments.\n */\n\nimport { combineReducers } from 'redux';\nimport trees from './trees';\nimport auth from './auth';\nimport currUser from './currUser';\nimport groups from './groups';\nconst root = combineReducers({\n\tauth,\n\tcurrUser,\n\ttrees,\n\tgroups\n});\nexport default root;\n","/**\n * Sets up redux, redux-thunk, and redux-persist functionality.\n * Imported by index for application to app.\n */\n\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport autoMergeLevel2 from 'redux-persist/lib/stateReconciler/autoMergeLevel2';\n\nimport thunk from 'redux-thunk';\nimport root from './reducers/root';\nimport { createStore, applyMiddleware } from 'redux';\n\nconst persistConfig = {\n\tkey             : 'root',\n\tstorage,\n\tstateReconciler : autoMergeLevel2\n};\n\nconst persistedReducer = persistReducer(persistConfig, root);\n\nexport const store = createStore(\n\tpersistedReducer,\n\tcomposeWithDevTools(applyMiddleware(thunk))\n);\n\nexport const persistedStore = persistStore(store);\n","import firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/storage';\nimport 'firebase/analytics';\n\n// Setup Firebase configuration\nconst firebaseConfig = {\n\tapiKey            : process.env.REACT_APP_API_KEY,\n\tauthDomain        : process.env.REACT_APP_AUTHDOMAIN,\n\tdatabaseURL       : process.env.REACT_APP_BASEURL,\n\tprojectId         : process.env.REACT_APP_PROJECT_ID,\n\tstorageBucket     : process.env.REACT_APP_STORAGEBUCKET,\n\tmessagingSenderId : process.env.REACT_APP_MESSAGING_SENDER_ID,\n\tappId             : process.env.REACT_APP_APP_ID,\n\tmeasurementId     : process.env.REACT_APP_MEASUREMENT_ID\n};\n\n//Initialize Firebase and setup Authentication and Storage\nfirebase.initializeApp(firebaseConfig);\nfirebase.analytics();\n\nconst auth = firebase.auth();\nconst storage = firebase.storage();\n\nexport { firebase, auth, storage };\n","import { auth, firebase } from './firebaseIndex';\n\nconst signUp = async (email, password) => {\n\tconsole.log('firebaseAuth signUp');\n\tconst res = await auth.createUserWithEmailAndPassword(email, password);\n\tconsole.log('firebaseAuth signUp - Post');\n\n\treturn res;\n};\n\nconst signIn = async (email, password) => {\n\tconsole.log('firebaseAuth signIn');\n\tconst res = await auth.signInWithEmailAndPassword(email, password);\n\treturn res;\n};\n\nconst signOut = async () => {\n\tconsole.log('firebaseAuth signOut');\n\tawait auth.signOut();\n};\n\nconst updateEmail = async (email) => {\n\tconsole.log('firebaseAuth updateEmail');\n\tconst user = auth.currentUser;\n\tif (user) {\n\t\tconst res = await user.updateEmail(email);\n\t\treturn res;\n\t}\n};\nconst updateProfile = async (profileData) => {\n\tconsole.log('firebaseAuth updateProfile', profileData);\n\tconst user = auth.currentUser;\n\tif (user) {\n\t\tconst res = await user.updateProfile(profileData);\n\t\treturn res;\n\t}\n};\n\nconst reauthenticate = async (credentials) => {\n\tconsole.log('firebaseAuth reauthenticate - credentials', credentials);\n\tconst user = auth.currentUser;\n\tconsole.log('firebaseAuth reauthenticate - user', user);\n\n\tif (user) {\n\t\tconst credential = await firebase.auth.EmailAuthProvider.credential(\n\t\t\tcredentials.email || user.email,\n\t\t\tcredentials.password\n\t\t);\n\t\tawait user.reauthenticateWithCredential(credential);\n\t}\n};\n\nconst anonymousAuth = async () => {\n\tconsole.log('firebaseAuth anonymousAuth');\n\tconst res = await auth.signInAnonymously();\n\tconsole.log(res);\n\treturn res;\n};\n\n/** Get Firebase token from currentUser if not null,\n * otherwise returns undefined\n * \n */\nconst getToken = async () => {\n\tif (auth.currentUser !== null) {\n\t\tconst token = await auth.currentUser.getIdToken(true);\n\t\treturn token;\n\t}\n\treturn;\n};\n\nexport {\n\tsignUp,\n\tsignIn,\n\tsignOut,\n\tgetToken,\n\tanonymousAuth,\n\tupdateEmail,\n\tupdateProfile,\n\treauthenticate\n};\n","import axios from 'axios';\nimport { getToken } from './firebase/firebaseAuth';\n\nconst BASE_URL = process.env.REACT_APP_BASE_URL || 'http://localhost:3001';\n\n/**\n * TreeMarkable API class contains static methods to help interact with\n * the TreeMarkable database.\n */\nclass TreeMarkableApi {\n\tstatic async request(endpoint, paramsOrData = {}, verb = 'get') {\n\t\ttry {\n\t\t\tconsole.log('PRE API CALL', paramsOrData);\n\t\t\tparamsOrData._token = await getToken();\n\n\t\t\tconsole.debug('API Call:', endpoint, paramsOrData, verb);\n\t\t\tconst res = await axios({\n\t\t\t\tmethod                               : verb,\n\t\t\t\turl                                  : `${BASE_URL}/${endpoint}`,\n\t\t\t\t[verb === 'get' ? 'params' : 'data']: paramsOrData\n\t\t\t});\n\n\t\t\tconsole.log('API res RETURN', res.data);\n\t\t\treturn res.data;\n\t\t\t// axios sends query string data via the \"params\" key,\n\t\t\t// and request body data via the \"data\" key,\n\t\t\t// so the key we need depends on the HTTP verb\n\t\t} catch (err) {\n\t\t\tif (err.response) {\n\t\t\t\tconsole.error('API Error:', err.response);\n\t\t\t\tlet error = err.response.data;\n\t\t\t\tthrow Array.isArray(error) ? error : [ error ];\n\t\t\t}\n\t\t\telse {\n\t\t\t\tconsole.error('TreeMarkableAPI Error:', err);\n\n\t\t\t\treturn err;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n     * Authentication Requests\n     */\n\n\tstatic async login(data) {\n\t\tconsole.log('TreeMarkableApi Class Login - Start');\n\t\tlet res = await this.request(`login`, data, 'post');\n\t\treturn res.token;\n\t}\n\n\t/**\n     * User Requests\n     */\n\n\tstatic async getUser(username) {\n\t\tconsole.log('TreeMarkableApi Class getUser - Start');\n\t\tlet res = await this.request(`users/${username}`);\n\t\treturn res.user;\n\t}\n\n\tstatic async registerUser(data) {\n\t\tconsole.log('TreeMarkableApi Class registerUser - Start');\n\t\tlet res = await this.request(`users`, data, 'post');\n\t\treturn res.newUser;\n\t}\n\tstatic async updateUser(username, data) {\n\t\tconsole.log('TreeMarkableApi Class updateUser - Start');\n\t\tlet res = await this.request(`users/${username}`, data, 'patch');\n\t\treturn res.user;\n\t}\n\tstatic async deleteUser(username) {\n\t\tconsole.log('TreeMarkableApi Class deleteUser - Start');\n\t\tlet res = await this.request(`users/${username}`, {}, 'delete');\n\t\treturn res.message;\n\t}\n\n\t/**\n     * Group Requests\n     */\n\tstatic async getGroups(searchParams) {\n\t\tconsole.log('TreeMarkableApi Class getGroups - Start');\n\t\tlet res = await this.request(`groups`, searchParams);\n\t\treturn res.groups;\n\t}\n\tstatic async getGroup(groupId) {\n\t\tconsole.log('TreeMarkableApi Class getGroup - Start');\n\t\tlet res = await this.request(`groups/${groupId}`);\n\t\treturn res.group;\n\t}\n\tstatic async createGroup(data) {\n\t\tconsole.log('TreeMarkableApi Class createGroup - Start');\n\t\tlet res = await this.request(`groups`, data, 'post');\n\t\treturn res.newGroup;\n\t}\n\tstatic async updateGroup(groupId, data) {\n\t\tconsole.log('TreeMarkableApi Class updateGroup - Start');\n\t\tlet res = await this.request(`groups/${groupId}`, data, 'patch');\n\t\treturn res.editGroup;\n\t}\n\tstatic async deleteGroup(groupId) {\n\t\tconsole.log('TreeMarkableApi Class deleteGroup - Start');\n\t\tlet res = await this.request(`groups/${groupId}`, {}, 'delete');\n\t\treturn res.message;\n\t}\n\tstatic async getGroupMembers(groupId) {\n\t\tconsole.log('TreeMarkableApi Class getGroupMembers - Start');\n\t\tlet res = await this.request(`groups/${groupId}/members`);\n\t\treturn res.groupMembers;\n\t}\n\n\t/**\n     * Tree Requests\n     */\n\n\tstatic async getTrees(searchParams) {\n\t\tconsole.log('TreeMarkableApi Class getTrees - Start');\n\t\tlet res = await this.request(`trees`, searchParams);\n\t\treturn res.trees;\n\t}\n\tstatic async getTree(treeId) {\n\t\tconsole.log('TreeMarkableApi Class getTree - Start');\n\t\tlet res = await this.request(`trees/${treeId}`);\n\t\treturn res.tree;\n\t}\n\tstatic async createTree(data) {\n\t\tconsole.log('TreeMarkableApi Class createTree - Start');\n\t\tlet res = await this.request(`trees`, data, 'post');\n\t\treturn res.newTree;\n\t}\n\tstatic async updateTree(treeId, data) {\n\t\tconsole.log('TreeMarkableApi Class updateTree - Start');\n\t\tlet res = await this.request(`trees/${treeId}`, data, 'patch');\n\t\treturn res.updatedTree;\n\t}\n\tstatic async deleteTree(treeId) {\n\t\tconsole.log('TreeMarkableApi Class deleteTree - Start');\n\t\tlet res = await this.request(`trees/${treeId}`, {}, 'delete');\n\t\treturn res.message;\n\t}\n\t/**\n     * Comment Requests\n     */\n\n\tstatic async getComments(type, id) {\n\t\tconsole.log('TreeMarkableApi Class getComments - Start');\n\t\tlet res = await this.request(`comments/${type}/${id}`);\n\t\treturn res.comments;\n\t}\n\tstatic async getComment(commentId) {\n\t\tconsole.log('TreeMarkableApi Class getComment - Start');\n\t\tlet res = await this.request(`comments/${commentId}`);\n\t\treturn res.comment;\n\t}\n\tstatic async createComment(data) {\n\t\tconsole.log('TreeMarkableApi Class createComment - Start', data);\n\t\tlet res = await this.request(`comments`, data, 'post');\n\t\treturn res.newComment;\n\t}\n\tstatic async updateComment(commentId, data) {\n\t\tconsole.log('TreeMarkableApi Class updateComment - Start');\n\t\tlet res = await this.request(`comments/${commentId}`, data, 'patch');\n\t\treturn res.updatedComment;\n\t}\n\tstatic async deleteComment(commentId) {\n\t\tconsole.log('TreeMarkableApi Class deleteComment - Start');\n\t\tlet res = await this.request(`comments/${commentId}`, {}, 'delete');\n\t\treturn res.message;\n\t}\n\n\t/**\n\t * User - Tree Relationship Requests\n\t */\n\tstatic async userAddTree(userId, treeId) {\n\t\tconsole.log('TreeMarkableApi Class userAddTree - Start');\n\t\tlet res = await this.request(`users/${userId}/trees/${treeId}`, {}, 'post');\n\t\treturn res.message;\n\t}\n\tstatic async userRemoveTree(userId, treeId) {\n\t\tconsole.log('TreeMarkableApi Class userRemoveTree - Start');\n\t\tlet res = await this.request(`users/${userId}/trees/${treeId}`, {}, 'delete');\n\t\treturn res.message;\n\t}\n\t/**\n\t * User - Group Relationship Requests\n\t */\n\tstatic async userAddGroup(userId, groupId, isModerator) {\n\t\tconsole.log('TreeMarkableApi Class userAddGroup - Start');\n\t\tlet res = await this.request(`users/${userId}/groups/${groupId}`, { isModerator }, 'post');\n\t\treturn res.message;\n\t}\n\tstatic async userRemoveGroup(userId, groupId) {\n\t\tconsole.log('TreeMarkableApi Class userRemoveGroup - Start');\n\t\tlet res = await this.request(`users/${userId}/groups/${groupId}`, {}, 'delete');\n\t\treturn res.message;\n\t}\n\n\t/**\n\t * Group - Tree Relationship Requests\n\t */\n\tstatic async groupAddTree(groupId, treeId) {\n\t\tconsole.log('TreeMarkableApi Class groupAddTree - Start');\n\t\tlet res = await this.request(`groups/${groupId}/trees/${treeId}`, {}, 'post');\n\t\treturn res.message;\n\t}\n\tstatic async groupRemoveTree(groupId, treeId) {\n\t\tconsole.log('TreeMarkableApi Class groupRemoveTree - Start');\n\t\tlet res = await this.request(`groups/${groupId}/trees/${treeId}`, {}, 'delete');\n\t\treturn res.message;\n\t}\n\n\t/**\n\t * Group - Member Relationship Requests\n\t */\n\tstatic async groupAddMod(groupId, userId) {\n\t\tconsole.log('TreeMarkableApi Class groupAddMod - Start');\n\t\tlet res = await this.request(`groups/${groupId}/users/${userId}/addmod`, {}, 'patch');\n\t\treturn res.message;\n\t}\n\tstatic async groupRemoveMod(groupId, userId) {\n\t\tconsole.log('TreeMarkableApi Class groupRemoveMod - Start');\n\t\tlet res = await this.request(`groups/${groupId}/users/${userId}/removemod`, {}, 'patch');\n\t\treturn res.message;\n\t}\n}\n\nexport default TreeMarkableApi;\n","/**\n * Action creators for handling authentication of user. When user signs in\n * and is authenticated, updates store. Resets store on user sign out.\n * \n * Also updates user store to keep current user synced with authentication.\n */\n\nimport { signUp, signIn, signOut, anonymousAuth, updateEmail, updateProfile } from '../firebase/firebaseAuth';\nimport TreeMarkableApi from '../TreeMarkableApi';\nimport { auth } from '../firebase/firebaseIndex';\nimport {\n\tAUTH_ERROR,\n\tAUTH_USER,\n\tSIGN_OUT_USER,\n\tLOAD_CURR_USER_REQUEST,\n\tLOAD_CURR_USER_SUCCESS,\n\tLOAD_CURR_USER_FAILURE,\n\tLOAD_CURR_USER,\n\tRESET_CURR_USER\n} from './types';\n\nfunction signUpUser(credentials, userData) {\n\tconsole.log('Auth - signUpUser - ', credentials, userData);\n\treturn async function(dispatch) {\n\t\tdispatch({ type: LOAD_CURR_USER_REQUEST });\n\t\ttry {\n\t\t\t// create user in FirebaseAuth\n\t\t\tconst firebaseRes = await signUp(credentials.email, credentials.password);\n\t\t\t// create user in TreeMarkable Database\n\t\t\tconst apiRes = await TreeMarkableApi.registerUser({\n\t\t\t\t...userData,\n\t\t\t\tfirebase_id : firebaseRes.user.uid\n\t\t\t});\n\n\t\t\tawait updateProfile({ displayName: apiRes.username });\n\t\t\tconst currUserData = {\n\t\t\t\t...apiRes,\n\t\t\t\ttoken : firebaseRes.user.refreshToken\n\t\t\t};\n\t\t\tdispatch(\n\t\t\t\tauthUser({\n\t\t\t\t\ttoken : firebaseRes.user.refreshToken\n\t\t\t\t})\n\t\t\t);\n\t\t\tdispatch(loadCurrUser(currUserData));\n\t\t\tdispatch({ type: LOAD_CURR_USER_SUCCESS });\n\t\t} catch (err) {\n\t\t\tconsole.log('signUpUser error', err);\n\t\t\tdispatch(authError(err));\n\t\t\tdispatch({ type: LOAD_CURR_USER_FAILURE });\n\t\t}\n\t};\n}\nfunction signInUser(credentials) {\n\tconsole.log('Auth - signInUser', credentials);\n\n\treturn async function(dispatch) {\n\t\tdispatch({ type: LOAD_CURR_USER_REQUEST });\n\n\t\ttry {\n\t\t\tconst firebaseRes = await signIn(credentials.email, credentials.password);\n\n\t\t\tconst apiRes = await TreeMarkableApi.getUser(firebaseRes.user.displayName);\n\t\t\tconst currUserData = {\n\t\t\t\t...apiRes,\n\t\t\t\ttoken : firebaseRes.user.refreshToken\n\t\t\t};\n\t\t\tdispatch(\n\t\t\t\tauthUser({\n\t\t\t\t\ttoken : firebaseRes.user.refreshToken\n\t\t\t\t})\n\t\t\t);\n\t\t\tdispatch(loadCurrUser(currUserData));\n\t\t\tdispatch({ type: LOAD_CURR_USER_SUCCESS });\n\t\t} catch (err) {\n\t\t\tconsole.log('signInUser error', err);\n\t\t\tdispatch(authError(err));\n\t\t\tdispatch({ type: LOAD_CURR_USER_FAILURE });\n\t\t}\n\t};\n}\n\nfunction signOutUser() {\n\tconsole.log('Auth - signOutUser');\n\treturn async function(dispatch) {\n\t\ttry {\n\t\t\tawait signOut();\n\t\t\tdispatch({ type: SIGN_OUT_USER });\n\t\t\tdispatch({ type: RESET_CURR_USER });\n\t\t} catch (err) {\n\t\t\tconsole.log('signOutUser error', err);\n\t\t\tdispatch(authError(err));\n\t\t}\n\t};\n}\n\nfunction signInAnonUser() {\n\treturn async function(dispatch) {\n\t\ttry {\n\t\t\tconst res = await anonymousAuth();\n\t\t\tdispatch(authUser(res.user));\n\t\t} catch (err) {\n\t\t\tconsole.log('anonAuth error', err);\n\t\t\tdispatch(authError(err));\n\t\t}\n\t};\n}\n\nfunction verifyAuth() {\n\treturn function(dispatch) {\n\t\ttry {\n\t\t\tconst unsubscribe = auth.onAuthStateChanged(async (user) => {\n\t\t\t\tif (user) {\n\t\t\t\t\tconsole.log('verifyAuth - user', user);\n\t\t\t\t\t// const apiRes = await TreeMarkableApi.getUser(\n\t\t\t\t\t// \tuser.displayName\n\t\t\t\t\t// );\n\t\t\t\t\t// const currUserData = {\n\t\t\t\t\t// \t...apiRes,\n\t\t\t\t\t// \ttoken : user.refreshToken\n\t\t\t\t\t// };\n\t\t\t\t\t// dispatch(authUser({ token: user.refreshToken }));\n\t\t\t\t\t// dispatch(loadCurrUser(currUserData));\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tconsole.log('verifyAuth - no user');\n\t\t\t\t\tdispatch(signOutUser());\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn unsubscribe;\n\t\t} catch (err) {\n\t\t\tconsole.log('verifyAuth error', err);\n\t\t\tdispatch(authError(err));\n\t\t}\n\t};\n}\n\nfunction authUser(user) {\n\treturn { type: AUTH_USER, payload: user };\n}\nfunction authError(error) {\n\treturn { type: AUTH_ERROR, payload: error };\n}\nfunction loadCurrUser(user) {\n\treturn { type: LOAD_CURR_USER, payload: user };\n}\n\nexport { signUpUser, signInUser, signOutUser, signInAnonUser, verifyAuth };\n","export default __webpack_public_path__ + \"static/media/landing-page-main.3778ef03.jpg\";","export default __webpack_public_path__ + \"static/media/search-trees-snip.b71e6c6e.JPG\";","export default __webpack_public_path__ + \"static/media/share-trees.1de5d629.jpg\";","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport Hidden from '@material-ui/core/Hidden';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\n\nimport homeImg from './images/landing-page-main.jpg';\nimport searchTreesImg from './images/search-trees-snip.JPG';\nimport zIndex from '@material-ui/core/styles/zIndex';\n\nconst useStyles = makeStyles({\n\timgPaper : {\n\t\theight    : 300,\n\t\twidth     : 300,\n\t\tzIndex    : 1,\n\t\tposition  : 'relative',\n\t\tboxShadow : `0px 11px 15px -7px rgba(0,0,0,0.10),\n\t\t\t0px 24px 38px 3px rgba(0,0,0,0.60),\n\t\t\t0px 9px 46px 8px rgba(0,0,0,0.51)`\n\t}\n});\n\nfunction LandingPageElement({\n\ttitleText,\n\tbodyText,\n\timgSrc,\n\timgAlt,\n\timgSide = 'left',\n\tbuttonLink,\n\tbuttonText\n}) {\n\tconst classes = useStyles();\n\tconst theme = useTheme();\n\n\tconst imgContainer = (\n\t\t<Grid container justify=\"center\" item xs={12} md={6}>\n\t\t\t<Paper className={classes.imgPaper} elevation={10}>\n\t\t\t\t<Link to={`/${buttonLink}`}>\n\t\t\t\t\t<img\n\t\t\t\t\t\theight=\"100%\"\n\t\t\t\t\t\twidth=\"100%\"\n\t\t\t\t\t\talt={imgAlt}\n\t\t\t\t\t\ttitle={imgAlt}\n\t\t\t\t\t\tsrc={imgSrc}\n\t\t\t\t\t/>\n\t\t\t\t</Link>\n\t\t\t</Paper>\n\t\t</Grid>\n\t);\n\n\tconst textContainer = (\n\t\t<Grid\n\t\t\tcontainer\n\t\t\tjustify=\"center\"\n\t\t\talignItems=\"center\"\n\t\t\titem\n\t\t\txs={12}\n\t\t\tmd={6}\n\t\t\tstyle={{\n\t\t\t\tpaddingTop : theme.spacing(5)\n\t\t\t}}\n\t\t>\n\t\t\t<Grid container justify=\"center\" item xs={12}>\n\t\t\t\t<Typography\n\t\t\t\t\talign=\"center\"\n\t\t\t\t\tvariant=\"h4\"\n\t\t\t\t\tstyle={{ color: 'white' }}\n\t\t\t\t\tgutterBottom\n\t\t\t\t>\n\t\t\t\t\t{bodyText}\n\t\t\t\t</Typography>\n\t\t\t</Grid>\n\t\t\t<Grid container justify=\"center\" item xs={12}>\n\t\t\t\t<Button\n\t\t\t\t\tcomponent={Link}\n\t\t\t\t\tto={`/${buttonLink}`}\n\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\tsize=\"large\"\n\t\t\t\t>\n\t\t\t\t\t{buttonText}\n\t\t\t\t</Button>\n\t\t\t</Grid>\n\t\t</Grid>\n\t);\n\n\treturn (\n\t\t<Grid\n\t\t\tcontainer\n\t\t\titem\n\t\t\tjustify=\"center\"\n\t\t\tstyle={{\n\t\t\t\tpaddingTop    : theme.spacing(5),\n\t\t\t\tpaddingBottom : theme.spacing(8)\n\t\t\t}}\n\t\t>\n\t\t\t<Typography\n\t\t\t\talign=\"center\"\n\t\t\t\tvariant=\"h2\"\n\t\t\t\tstyle={{ color: 'white' }}\n\t\t\t\tgutterBottom\n\t\t\t>\n\t\t\t\t{titleText}\n\t\t\t</Typography>\n\t\t\t<Hidden only={[ 'xs', 'sm', 'xl' ]} implementation=\"js\">\n\t\t\t\t{imgSide === 'right' ? (\n\t\t\t\t\t<Grid container item xs={12}>\n\t\t\t\t\t\t{textContainer}\n\t\t\t\t\t\t{imgContainer}\n\t\t\t\t\t</Grid>\n\t\t\t\t) : (\n\t\t\t\t\t<Grid container item xs={12}>\n\t\t\t\t\t\t{imgContainer}\n\t\t\t\t\t\t{textContainer}\n\t\t\t\t\t</Grid>\n\t\t\t\t)}\n\t\t\t</Hidden>\n\t\t\t<Hidden only={[ 'md', 'lg' ]} implementation=\"js\">\n\t\t\t\t<Grid container item xs={12}>\n\t\t\t\t\t<Grid container justify=\"center\" item xs={12}>\n\t\t\t\t\t\t{imgContainer}\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid container justify=\"center\" item xs={12}>\n\t\t\t\t\t\t{textContainer}\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t</Hidden>\n\t\t</Grid>\n\t);\n}\nexport default LandingPageElement;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport Grid from '@material-ui/core/Grid';\nimport Hidden from '@material-ui/core/Hidden';\nimport Button from '@material-ui/core/Button';\nimport Divider from '@material-ui/core/Divider';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\n\nimport homeImg from './images/landing-page-main.jpg';\nimport searchTreesImg from './images/search-trees-snip.JPG';\nimport shareTreesImg from './images/share-trees.jpg';\nimport LandingPageElement from './LandingPageElement';\n\nconst useStyles = makeStyles((theme) => {\n\treturn {\n\t\tbackgroundImage : {\n\t\t\theight               : '100%',\n\t\t\tbackgroundImage      : `url(${homeImg})`,\n\t\t\tbackgroundAttachment : 'fixed',\n\t\t\tbackgroundRepeat     : 'no-repeat',\n\t\t\tbackgroundPosition   : 'center',\n\t\t\tbackgroundSize       : 'cover',\n\t\t\tbackgroundColor      : theme.palette.secondary.dark\n\t\t}\n\t};\n});\n\nfunction LandingPage() {\n\tconst theme = useTheme();\n\tconst classes = useStyles(theme);\n\n\tconst lightDivider = (\n\t\t<Grid item xs={12}>\n\t\t\t<Divider\n\t\t\t\tflexItem\n\t\t\t\tstyle={{\n\t\t\t\t\theight          : 2,\n\t\t\t\t\tbackgroundColor : 'rgba(255,255,255, .5)'\n\t\t\t\t}}\n\t\t\t\tvariant=\"middle\"\n\t\t\t/>\n\t\t</Grid>\n\t);\n\n\treturn (\n\t\t<Grid\n\t\t\tcontainer\n\t\t\tclassName={classes.backgroundImage}\n\t\t\talignItems=\"stretch\"\n\t\t>\n\t\t\t<Grid\n\t\t\t\tcontainer\n\t\t\t\titem\n\t\t\t\tstyle={{\n\t\t\t\t\tbackgroundColor : 'rgba(0,0,0,.5)',\n\t\t\t\t\tpaddingTop      : theme.spacing(10),\n\t\t\t\t\tpaddingRight    : theme.spacing(3),\n\t\t\t\t\tpaddingLeft     : theme.spacing(3)\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<Grid\n\t\t\t\t\tcontainer\n\t\t\t\t\titem\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tmarginBottom : theme.spacing(10)\n\t\t\t\t\t}}\n\t\t\t\t\tjustify=\"center\"\n\t\t\t\t>\n\t\t\t\t\t<Typography\n\t\t\t\t\t\talign=\"center\"\n\t\t\t\t\t\tvariant=\"h1\"\n\t\t\t\t\t\tstyle={{ color: 'white', fontWeight: 'bold' }}\n\t\t\t\t\t>\n\t\t\t\t\t\tWELCOME TO TREE-MARKABLE\n\t\t\t\t\t</Typography>\n\t\t\t\t</Grid>\n\t\t\t\t{lightDivider}\n\t\t\t\t<Hidden xlUp>\n\t\t\t\t\t<LandingPageElement\n\t\t\t\t\t\ttitleText=\"Explore\"\n\t\t\t\t\t\tbodyText=\"Find remarkable trees near you or around the\n\t\t\t\t\t\t\tworld!\"\n\t\t\t\t\t\timgSrc={searchTreesImg}\n\t\t\t\t\t\timgAlt=\"search trees map\"\n\t\t\t\t\t\tbuttonLink=\"trees\"\n\t\t\t\t\t\tbuttonText=\"Search Trees\"\n\t\t\t\t\t/>\n\t\t\t\t\t{lightDivider}\n\t\t\t\t\t<LandingPageElement\n\t\t\t\t\t\ttitleText=\"Share\"\n\t\t\t\t\t\tbodyText=\"Add your favorite trees for others to enjoy!\"\n\t\t\t\t\t\timgSrc={shareTreesImg}\n\t\t\t\t\t\timgAlt=\"large tree photo by Rob Mulally\"\n\t\t\t\t\t\timgSide=\"right\"\n\t\t\t\t\t\tbuttonLink=\"trees/new\"\n\t\t\t\t\t\tbuttonText=\"Create a Tree\"\n\t\t\t\t\t/>\n\t\t\t\t\t{lightDivider}\n\t\t\t\t\t<LandingPageElement\n\t\t\t\t\t\ttitleText=\"Collaborate\"\n\t\t\t\t\t\tbodyText=\"Create or join groups to track specific trees for a\n\t\t\t\tpurpose!\"\n\t\t\t\t\t\timgSrc={searchTreesImg}\n\t\t\t\t\t\timgAlt=\"\"\n\t\t\t\t\t\tbuttonLink=\"groups\"\n\t\t\t\t\t\tbuttonText=\"Search Groups\"\n\t\t\t\t\t/>\n\t\t\t\t</Hidden>\n\t\t\t\t<Hidden lgDown>\n\t\t\t\t\t<Grid container>\n\t\t\t\t\t\t<Grid item xs={4}>\n\t\t\t\t\t\t\t<LandingPageElement\n\t\t\t\t\t\t\t\ttitleText=\"Explore\"\n\t\t\t\t\t\t\t\tbodyText=\"Find remarkable trees near you or around the\n\t\t\t\t\t\t\tworld!\"\n\t\t\t\t\t\t\t\timgSrc={searchTreesImg}\n\t\t\t\t\t\t\t\timgAlt=\"search trees map\"\n\t\t\t\t\t\t\t\tbuttonLink=\"trees\"\n\t\t\t\t\t\t\t\tbuttonText=\"Search Trees\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid item xs={4}>\n\t\t\t\t\t\t\t<LandingPageElement\n\t\t\t\t\t\t\t\ttitleText=\"Share\"\n\t\t\t\t\t\t\t\tbodyText=\"Add your favorite trees for others to enjoy!\"\n\t\t\t\t\t\t\t\timgSrc={shareTreesImg}\n\t\t\t\t\t\t\t\timgAlt=\"large tree photo by Rob Mulally\"\n\t\t\t\t\t\t\t\timgSide=\"right\"\n\t\t\t\t\t\t\t\tbuttonLink=\"trees/new\"\n\t\t\t\t\t\t\t\tbuttonText=\"Create a Tree\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid item xs={4}>\n\t\t\t\t\t\t\t<LandingPageElement\n\t\t\t\t\t\t\t\ttitleText=\"Collaborate\"\n\t\t\t\t\t\t\t\tbodyText=\"Create or join groups to track specific trees for a\n\t\t\t\tpurpose!\"\n\t\t\t\t\t\t\t\timgSrc={searchTreesImg}\n\t\t\t\t\t\t\t\timgAlt=\"\"\n\t\t\t\t\t\t\t\tbuttonLink=\"groups\"\n\t\t\t\t\t\t\t\tbuttonText=\"Search Groups\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Hidden>\n\t\t\t</Grid>\n\t\t</Grid>\n\t);\n}\nexport default LandingPage;\n","/**\n * Helper for showing errors returned from Firebase or API for form inputs\n *  \n */\n\nconst errorDisplay = (field, error) => {\n\tif (error === null || error.length === 0) return undefined;\n\tconst status = Number.isInteger(error[0].status) ? error[0].message : error[0].status;\n\tlet errors = new Map();\n\tif (field === 'username') {\n\t\terrors.set('Duplicate username found.', 'Duplicate username found.');\n\t}\n\tif (field === 'group_name') {\n\t\terrors.set('Duplicate group name found.', 'Duplicate group name found.');\n\t}\n\tif (field === 'email') {\n\t\terrors.set('auth/email-already-in-use', 'The email address is already in use by another account.');\n\t\terrors.set('auth/invalid-email', 'The email address is badly formatted.');\n\t\terrors.set('auth/user-not-found', 'There is no user corresponding to the given email.');\n\t\terrors.set('Duplicate email found.', 'Duplicate email found.');\n\t}\n\tif (field === 'password') {\n\t\terrors.set('auth/weak-password', 'Password is too weak. Must be greater than 6 characters.');\n\t\terrors.set('auth/wrong-password', 'Wrong password.');\n\t}\n\tif (field === 'new_password') {\n\t\terrors.set('auth/weak-password', 'Password is too weak. Must be greater than 6 characters.');\n\t}\n\t// console.log('status', status);\n\t// console.log('errors', errors);\n\t// console.log('errors.get(status)', errors.get(status));\n\treturn errors.get(status);\n};\n\nexport { errorDisplay };\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => {\n\treturn {\n\t\tform : {\n\t\t\tdisplay       : 'flex',\n\t\t\tflexDirection : 'column',\n\t\t\t'& div'       : {\n\t\t\t\tmarginBottom : 10\n\t\t\t}\n\t\t}\n\t};\n});\n// ${theme.palette.primary.accent}\n\nexport default useStyles;\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n\troot    : {\n\t\tmaxWidth : 300\n\t},\n\tmedia   : {\n\t\theight : 140\n\t},\n\tcontent : {\n\t\tpaddingBottom : 0,\n\t\tpaddingLeft   : 10,\n\t\tpaddingRight  : 10,\n\t\t'& p'         : {\n\t\t\tmargin : 0\n\t\t}\n\t},\n\tactions : {\n\t\tpaddingBottom : 0,\n\t\tpaddingTop    : 2\n\t}\n});\n\nexport default useStyles;\n","import TreeMarkableApi from '../TreeMarkableApi';\nimport { signUp, signIn, signOut, anonymousAuth, updateEmail, reauthenticate } from '../firebase/firebaseAuth';\nimport {\n\tLOAD_CURR_USER,\n\tLOAD_CURR_USER_REQUEST,\n\tLOAD_CURR_USER_SUCCESS,\n\tLOAD_CURR_USER_FAILURE,\n\tLOAD_CURR_USER_ERROR,\n\tLOAD_SAVED_TREE,\n\tREMOVE_SAVED_TREE,\n\tLOAD_FOLLOWED_GROUP,\n\tREMOVE_FOLLOWED_GROUP\n} from './types';\n\n/**\n * Action creator for editing the current user.\n */\n\nfunction editCurrUser(credentials, username, data) {\n\tconsole.log('currUser - editCurrUser - Start', credentials, username, data);\n\treturn async function(dispatch) {\n\t\tdispatch({ type: LOAD_CURR_USER_REQUEST });\n\t\ttry {\n\t\t\tawait reauthenticate(credentials);\n\t\t\t// await updateEmail(data.email);\n\n\t\t\tconst user = await TreeMarkableApi.updateUser(username, data);\n\t\t\tif (data.email) {\n\t\t\t\tawait reauthenticate({\n\t\t\t\t\temail    : data.email,\n\t\t\t\t\tpassword : credentials.password\n\t\t\t\t});\n\t\t\t}\n\t\t\tdispatch(loadCurrUser(user));\n\t\t\tconsole.log('currUser - editCurrUser - success', user);\n\t\t\tdispatch({ type: LOAD_CURR_USER_SUCCESS });\n\t\t} catch (err) {\n\t\t\tconsole.log('currUser - editCurrUser error', err);\n\t\t\tdispatch(currUserError(err));\n\t\t\tdispatch({ type: LOAD_CURR_USER_FAILURE });\n\t\t}\n\t};\n}\n\n// function updateUser(credentials, username, newEmail) {\n// \tconsole.log('Auth - updateUserEmail');\n// \treturn async function(dispatch) {\n// \t\ttry {\n// \t\t\tconst res = await updateEmail(credentials, newEmail);\n// \t\t\tconsole.log('res');\n// \t\t} catch (err) {\n// \t\t\tconsole.log('Auth - updateUserEmail - err', err);\n// \t\t\tdispatch(authError(err));\n// \t\t}\n// \t};\n// }\n\n/**\n * Action creators for updating the current User's saved Trees and \n */\n\nfunction addToSavedTrees(userId, treeId) {\n\tconsole.log('currUser - addToSavedTrees - ', userId, treeId);\n\treturn async function(dispatch) {\n\t\tdispatch({ type: LOAD_CURR_USER_REQUEST });\n\t\ttry {\n\t\t\tawait TreeMarkableApi.userAddTree(userId, treeId);\n\t\t\tdispatch(treeSaved(treeId));\n\t\t\tdispatch({ type: LOAD_CURR_USER_SUCCESS });\n\t\t} catch (err) {\n\t\t\tconsole.log('addToSavedTrees error', err);\n\t\t\tdispatch(currUserError(err));\n\t\t\tdispatch({ type: LOAD_CURR_USER_FAILURE });\n\t\t}\n\t};\n}\nfunction removeFromSavedTrees(userId, treeId) {\n\tconsole.log('currUser - removeFromSavedTrees - ', userId, treeId);\n\treturn async function(dispatch) {\n\t\tdispatch({ type: LOAD_CURR_USER_REQUEST });\n\t\ttry {\n\t\t\tawait TreeMarkableApi.userRemoveTree(userId, treeId);\n\t\t\tdispatch(treeRemoved(treeId));\n\t\t\tdispatch({ type: LOAD_CURR_USER_SUCCESS });\n\t\t} catch (err) {\n\t\t\tconsole.log('removeFromSavedTrees error', err);\n\t\t\tdispatch(currUserError(err));\n\t\t\tdispatch({ type: LOAD_CURR_USER_FAILURE });\n\t\t}\n\t};\n}\n/**\n * Action creators for updating the current User's followed Groups\n */\n\nfunction addToFollowedGroups(userId, groupId, isModerator) {\n\tconsole.log('currUser - addToFollowedGroups - ', userId, groupId, isModerator);\n\treturn async function(dispatch) {\n\t\tdispatch({ type: LOAD_CURR_USER_REQUEST });\n\t\ttry {\n\t\t\tawait TreeMarkableApi.userAddGroup(userId, groupId, isModerator);\n\t\t\tdispatch(groupFollowed(groupId));\n\t\t\tdispatch({ type: LOAD_CURR_USER_SUCCESS });\n\t\t} catch (err) {\n\t\t\tconsole.log('addToFollowedGroups error', err);\n\t\t\tdispatch(currUserError(err));\n\t\t\tdispatch({ type: LOAD_CURR_USER_FAILURE });\n\t\t}\n\t};\n}\nfunction removeFromFollowedGroups(userId, groupId) {\n\tconsole.log('currUser - removeFromFollowedGroups - ', userId, groupId);\n\treturn async function(dispatch) {\n\t\tdispatch({ type: LOAD_CURR_USER_REQUEST });\n\t\ttry {\n\t\t\tawait TreeMarkableApi.userRemoveGroup(userId, groupId);\n\t\t\tdispatch(groupUnfollowed(groupId));\n\t\t\tdispatch({ type: LOAD_CURR_USER_SUCCESS });\n\t\t} catch (err) {\n\t\t\tconsole.log('removeFromFollowedGroups error', err);\n\t\t\tdispatch(currUserError(err));\n\t\t\tdispatch({ type: LOAD_CURR_USER_FAILURE });\n\t\t}\n\t};\n}\n\nfunction loadCurrUser(user) {\n\treturn { type: LOAD_CURR_USER, payload: user };\n}\nfunction currUserError(error) {\n\treturn { type: LOAD_CURR_USER_ERROR, payload: error };\n}\nfunction treeSaved(treeId) {\n\treturn { type: LOAD_SAVED_TREE, payload: treeId };\n}\nfunction treeRemoved(treeId) {\n\treturn { type: REMOVE_SAVED_TREE, payload: treeId };\n}\nfunction groupFollowed(groupId) {\n\treturn { type: LOAD_FOLLOWED_GROUP, payload: groupId };\n}\nfunction groupUnfollowed(groupId) {\n\treturn { type: REMOVE_FOLLOWED_GROUP, payload: groupId };\n}\n\nexport { addToSavedTrees, removeFromSavedTrees, editCurrUser, addToFollowedGroups, removeFromFollowedGroups };\n","import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport {\n\tInfo as InfoIcon,\n\tAdd as AddIcon,\n\tNature as NatureIcon,\n\tGroup as GroupIcon,\n\tExplore as ExploreIcon,\n\tHome as HomeIcon,\n\tMessage as MessageIcon,\n\tCheck as CheckIcon,\n\tFavoriteBorder as FavoriteBorderIcon,\n\tFavorite as FavoriteIcon\n} from '@material-ui/icons';\n\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nimport useStyles from '../styles/markerCard';\nimport { addToSavedTrees, removeFromSavedTrees } from '../actions/currUser';\n\nfunction FavoriteIconBtn({ treeId }) {\n\tconst classes = useStyles();\n\tconst [ isFav, setIsFav ] = useState(null);\n\tconst uid = useSelector((st) => st.currUser.uid);\n\tconst savedTreeIds = useSelector((st) => st.currUser.savedTreeIds);\n\tconst dispatch = useDispatch();\n\n\tuseEffect(\n\t\t() => {\n\t\t\tconst checkFavStatus = (treeId, savedTreeIds) => {\n\t\t\t\tsetIsFav(savedTreeIds.includes(treeId));\n\t\t\t};\n\t\t\tcheckFavStatus(treeId, savedTreeIds);\n\t\t},\n\t\t[ savedTreeIds, treeId ]\n\t);\n\n\tconst handleClick = async () => {\n\t\tif (isFav) {\n\t\t\tdispatch(removeFromSavedTrees(uid, treeId));\n\t\t}\n\t\telse {\n\t\t\tdispatch(addToSavedTrees(uid, treeId));\n\t\t}\n\t\tsetIsFav(!isFav);\n\t};\n\n\tif (!uid) {\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<Tooltip title={isFav ? 'Unfavorite' : 'Favorite'}>\n\t\t\t<IconButton onClick={handleClick}>\n\t\t\t\t<FavoriteIcon htmlColor={isFav ? 'red' : 'pink'} />\n\t\t\t</IconButton>\n\t\t</Tooltip>\n\t);\n}\nexport default FavoriteIconBtn;\n","import { storage } from './firebaseIndex';\n\n// Firebase Storage References\nconst storageRef = storage.ref();\nconst treesRef = storageRef.child('trees');\nconst usersRef = storageRef.child('users');\nconst groupsRef = storageRef.child('groups');\n\n// Establish some naming conventions\nconst IMAGES = 'images';\nconst PRIMARY = 'primary';\nconst ALBUM = 'album';\n\n/**\n * uploadImagesToFirebase\n * \n * Uploads images to Firebase Storage based on a given \n * storage.ref, and id for the tree, user, or group, and and array\n * of files.\n * \n * collectionRef is a Firebase storage reference, id is a string \n * of the id where the images will be stored, and files is an \n * array of File objects.\n **/\n\nconst uploadImagesToFirebase = async (collectionRef, id, files) => {\n\tconsole.log('uploadImagesToFirebase - Start:', collectionRef, id, files);\n\tfor (let idx = 0; idx < files.length; idx++) {\n\t\tlet imageRef;\n\t\tif (idx === 0) {\n\t\t\timageRef = collectionRef.child(`${id}/${IMAGES}/${PRIMARY}/${files[idx].name}`);\n\t\t}\n\t\telse {\n\t\t\timageRef = collectionRef.child(`${id}/${IMAGES}/${ALBUM}/${files[idx].name}`);\n\t\t}\n\t\ttry {\n\t\t\tconst res = await imageRef.put(files[idx]);\n\t\t\tconsole.log('uploadImagesToFirebase - res', res);\n\t\t} catch (err) {\n\t\t\tconsole.log('uploadImagesToFirebase - err', err);\n\t\t}\n\t}\n};\n\n/**\n *  listImagePathsFromFirebase\n * \n * Uses Firebase Storage .listAll() method to list all prefixes\n * and items for a given storage ref.\n * \n * Takes a storage ref and item id to get the image paths for\n * the primary and album images.\n * \n * Returns an object {primary: 'imagePath', album:['imagePath1,...']}\n */\nconst listImagePathsFromFirebase = async (collectionRef, id) => {\n\tconsole.log('listImagePathsFromFirebase - start', collectionRef, id);\n\n\ttry {\n\t\tconst primaryRef = collectionRef.child(`${id}/${IMAGES}/${PRIMARY}`);\n\t\tconst albumRef = collectionRef.child(`${id}/${IMAGES}/${ALBUM}`);\n\t\tconst primaryRes = await primaryRef.listAll();\n\t\tconst albumRes = await albumRef.listAll();\n\n\t\tif (primaryRes.items.length === 0) return;\n\n\t\tconst albumImagePaths = !(albumRes.items.length === 0) ? albumRes.items.map((item) => item.fullPath) : [];\n\n\t\tconst imagePaths = {\n\t\t\tprimary : primaryRes.items[0].fullPath,\n\t\t\talbum   : albumImagePaths\n\t\t};\n\n\t\tconsole.log('listImagePathsFromFirebase - imagePaths', imagePaths);\n\t\treturn imagePaths;\n\t} catch (err) {\n\t\tconsole.error('listImagePathsFromFirebase - err', err);\n\t}\n};\n\n/**\n *  downloadImageUrlsFromFirebase\n * \n * Uses Firebase Storage .getDownloadURL() method to download\n * image url for a given storageRef and item id.\n * \n * Takes a storage ref and item id to get the image urls that\n * can be used for an HTML image element source.\n * \n * Returns an object {primary: 'imageUrl', album:['imageUrl,...']}\n */\nconst downloadImageUrlsFromFirebase = async (collectionRef, id) => {\n\tconsole.log('downloadImageUrlsFromFirebase - start', collectionRef, id);\n\n\ttry {\n\t\tconst imagePaths = await listImagePathsFromFirebase(collectionRef, id);\n\n\t\tconsole.log('downloadImageUrlsFromFirebase - imagePaths', imagePaths);\n\t\tif (!imagePaths) return;\n\n\t\tconst primaryImageUrl = await storageRef.child(`${imagePaths.primary}`).getDownloadURL();\n\n\t\tlet imageUrls = { primary: primaryImageUrl, album: [] };\n\n\t\tfor await (let imagePath of imagePaths.album) {\n\t\t\tconst imageUrl = await storageRef.child(`${imagePath}`).getDownloadURL();\n\n\t\t\timageUrls[ALBUM].push(imageUrl);\n\t\t}\n\n\t\tconsole.log('downloadImageUrlsFromFirebase - imageUrls', imageUrls);\n\t\treturn imageUrls;\n\t} catch (err) {\n\t\tconsole.error('downloadImageUrlsFromFirebase err - ', err);\n\t}\n};\n\nconst deleteImagesFromFirebase = async (collectionRef, id) => {\n\tconsole.log('deleteImagesFromFirebase - start', collectionRef, id);\n\ttry {\n\t\tconst imagePaths = await listImagePathsFromFirebase(collectionRef, id);\n\t\tconsole.log('deleteImagesFromFirebase - imagePaths', imagePaths);\n\t\tif (!imagePaths) return;\n\n\t\tstorageRef.child(`${imagePaths.primary}`).delete();\n\n\t\tif (imagePaths.album.length > 0) {\n\t\t\tfor (const imagePath of imagePaths.album) {\n\t\t\t\tconsole.log('deleteImagesFromFirebase - imagePath', imagePath);\n\n\t\t\t\tstorageRef.child(`${imagePath}`).delete();\n\t\t\t}\n\t\t}\n\t} catch (err) {\n\t\tconsole.log('deleteImagesFromFirebase -err', err);\n\t}\n};\n\nexport {\n\tstorageRef,\n\ttreesRef,\n\tusersRef,\n\tgroupsRef,\n\tuploadImagesToFirebase,\n\tdownloadImageUrlsFromFirebase,\n\tlistImagePathsFromFirebase,\n\tdeleteImagesFromFirebase\n};\n","import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\nimport { Nature as NatureIcon } from '@material-ui/icons';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport IconButton from '@material-ui/core/IconButton';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Box from '@material-ui/core/Box';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nimport useStyles from '../styles/markerCard';\n\nimport FavoriteIconBtn from '../iconBtns/FavoriteIconBtn';\n\nimport {\n\ttreesRef,\n\tdownloadImageUrlsFromFirebase\n} from '../firebase/firebaseStorage';\n\nfunction TreePopup({ tree }) {\n\tconst classes = useStyles();\n\n\tconst [ isLoading, setIsLoading ] = useState(true);\n\tconst [ imageUrls, setImageUrls ] = useState({\n\t\tprimary : '',\n\t\talbum   : []\n\t});\n\tconst isAuthenticated = useSelector((st) => st.auth.authenticated);\n\tconst dispatch = useDispatch();\n\n\t// Get Image Urls to display tree image, if it exists\n\tuseEffect(\n\t\t() => {\n\t\t\tconst getImageUrls = async (collectionRef, id) => {\n\t\t\t\tconst imgUrls = await downloadImageUrlsFromFirebase(\n\t\t\t\t\tcollectionRef,\n\t\t\t\t\tid\n\t\t\t\t);\n\t\t\t\tif (imgUrls) {\n\t\t\t\t\tsetImageUrls(imgUrls);\n\t\t\t\t}\n\t\t\t\tsetIsLoading(false);\n\t\t\t};\n\n\t\t\tif (isLoading) {\n\t\t\t\tgetImageUrls(treesRef, tree.id);\n\t\t\t}\n\t\t},\n\t\t[ isLoading, dispatch ]\n\t);\n\n\t// If tree has a primary image, show it on popup. Show\n\t// loading circle while retrieving image from storage.\n\t// Show nothing if no image is saved in storage\n\tconst showPrimaryImage = () => {\n\t\tif (isLoading) {\n\t\t\treturn (\n\t\t\t\t<Box display=\"flex\" justifyContent=\"center\">\n\t\t\t\t\t<CircularProgress />\n\t\t\t\t</Box>\n\t\t\t);\n\t\t}\n\t\telse if (imageUrls.primary === '') return '';\n\t\telse {\n\t\t\treturn (\n\t\t\t\t<CardMedia\n\t\t\t\t\tclassName={classes.media}\n\t\t\t\t\timage={imageUrls.primary}\n\t\t\t\t\ttitle={`${tree.name}`}\n\t\t\t\t/>\n\t\t\t);\n\t\t}\n\t};\n\n\treturn (\n\t\t<Card className={classes.root} elevation={0}>\n\t\t\t{showPrimaryImage()}\n\t\t\t<CardContent className={classes.content}>\n\t\t\t\t<Typography gutterBottom variant=\"h5\" component=\"h2\">\n\t\t\t\t\t{tree.name}\n\t\t\t\t</Typography>\n\t\t\t\t<Typography variant=\"body2\" color=\"textSecondary\">\n\t\t\t\t\t{tree.common_name}\n\t\t\t\t</Typography>\n\t\t\t\t<Typography\n\t\t\t\t\tvariant=\"body2\"\n\t\t\t\t\tcolor=\"textSecondary\"\n\t\t\t\t\tcomponent=\"i\"\n\t\t\t\t>\n\t\t\t\t\t{tree.scientific_name}\n\t\t\t\t</Typography>\n\t\t\t\t<Typography\n\t\t\t\t\tvariant=\"caption\"\n\t\t\t\t\tcolor=\"textSecondary\"\n\t\t\t\t\tcomponent=\"p\"\n\t\t\t\t>\n\t\t\t\t\t{`(${tree.geolocation.y.toFixed(\n\t\t\t\t\t\t5\n\t\t\t\t\t)}, ${tree.geolocation.x.toFixed(5)})`}\n\t\t\t\t</Typography>\n\t\t\t</CardContent>\n\t\t\t<CardActions className={classes.actions}>\n\t\t\t\t<Grid container justify=\"center\">\n\t\t\t\t\t<Grid container justify=\"center\" item xs={6}>\n\t\t\t\t\t\t<Tooltip title=\"Details\">\n\t\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\t\tcomponent={Link}\n\t\t\t\t\t\t\t\tto={`/trees/${tree.id}`}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<NatureIcon color=\"primary\" />\n\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t{isAuthenticated && (\n\t\t\t\t\t\t<Grid container justify=\"center\" item xs={6}>\n\t\t\t\t\t\t\t<FavoriteIconBtn treeId={tree.id} />\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t)}\n\t\t\t\t</Grid>\n\t\t\t</CardActions>\n\t\t</Card>\n\t);\n}\nexport default TreePopup;\n","import React, { useState, useEffect } from 'react';\n\nimport { MapContainer, useMap, useMapEvents, Marker, Popup, TileLayer } from 'react-leaflet';\n\nimport { GeoSearchControl, OpenStreetMapProvider } from 'leaflet-geosearch';\nimport 'leaflet-geosearch/dist/geosearch.css';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport TreePopup from './TreePopup';\n\nconst useStyles = makeStyles({\n\tmapContainer   : {\n\t\twidth     : '100%',\n\t\theight    : 450,\n\t\t// Style map search bar width to fit on mobile\n\t\t'& .open' : {\n\t\t\tmaxWidth : 280\n\t\t}\n\t},\n\tmapContainerSm : {\n\t\twidth     : '100%',\n\t\theight    : 300,\n\t\t// Style map search bar width to fit on mobile\n\t\t'& .open' : {\n\t\t\tmaxWidth : 280\n\t\t}\n\t}\n});\n\n// Set up search provider for Leaflet map\nconst searchControl = new GeoSearchControl({\n\tposition   : 'topright',\n\tshowMarker : false,\n\tprovider   : new OpenStreetMapProvider()\n});\n\n/**\n * LeafletMap component handles the leaflet map and associated features.\n * \n */\nfunction LeafletMap({\n\tuseGetClickCoordinates = false,\n\tuseSearchComponent = true,\n\tuseCenterOnUser = false,\n\tsetCenterOnUser,\n\tzoomLevel = 13,\n\tmapCenter = [ 48.09574762069073, -123.42439143699785 ],\n\tsetMapCenter,\n\tonMapCoordinatesChange,\n\ttrees = false,\n\tallowWheelZoom = true,\n\tsmall = false\n}) {\n\tconst classes = useStyles();\n\tconst [ clickCoords, setClickCoords ] = useState(null);\n\tuseEffect(\n\t\t() => {\n\t\t\tif (useCenterOnUser) {\n\t\t\t\tsetCenterOnUser(false);\n\t\t\t}\n\t\t},\n\t\t[ useCenterOnUser, setCenterOnUser ]\n\t);\n\n\t// On Map click, gets coordinates and provides a marker showing\n\t// the coordinates.\n\tconst GetClickCoordinates = () => {\n\t\tuseMapEvents({\n\t\t\tclick(evt) {\n\t\t\t\tsetClickCoords(evt.latlng);\n\n\t\t\t\tonMapCoordinatesChange({\n\t\t\t\t\tlat : evt.latlng.lat,\n\t\t\t\t\tlng : evt.latlng.lng\n\t\t\t\t});\n\t\t\t\tconsole.log('clickCoords', clickCoords);\n\t\t\t}\n\t\t});\n\t\treturn clickCoords === null ? null : (\n\t\t\t<Marker position={clickCoords}>\n\t\t\t\t<Popup>Tree Geolocation: {`${clickCoords}`}</Popup>\n\t\t\t</Marker>\n\t\t);\n\t};\n\n\t//Center map view on user. Changes map center to user location.\n\tconst CenterOnUser = () => {\n\t\tconst map = useMap();\n\t\tmap.locate({ setView: true });\n\t\treturn null;\n\t};\n\n\t// Adds search control to Leaflet Map\n\tconst SearchComponent = () => {\n\t\tconst map = useMap();\n\t\tmap.addControl(searchControl);\n\t\treturn null;\n\t};\n\n\t// Update map center when dragging.\n\tconst UpdateCenterOnDrag = () => {\n\t\tconst map = useMapEvents({\n\t\t\tdragend() {\n\t\t\t\tconsole.log(map.getCenter());\n\t\t\t\tconst coords = map.getCenter();\n\t\t\t\tsetMapCenter([ coords.lat, coords.lng ]);\n\t\t\t}\n\t\t});\n\t\treturn null;\n\t};\n\n\tconst loadingPlaceholder = <CircularProgress />;\n\n\treturn (\n\t\t<MapContainer\n\t\t\tclassName={small ? classes.mapContainerSm : classes.mapContainer}\n\t\t\tplaceholder={loadingPlaceholder}\n\t\t\tcenter={mapCenter}\n\t\t\tzoom={zoomLevel}\n\t\t\tscrollWheelZoom={allowWheelZoom}\n\t\t>\n\t\t\t<TileLayer\n\t\t\t\turl=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n\t\t\t\tattribution=\"&copy; <a href=&quot;http://osm.org/copyright&quot;>OpenStreetMap</a> contributors\"\n\t\t\t/>\n\n\t\t\t{useGetClickCoordinates && <GetClickCoordinates />}\n\t\t\t{useSearchComponent && <SearchComponent />}\n\t\t\t{useCenterOnUser && <CenterOnUser />}\n\t\t\t{setMapCenter && <UpdateCenterOnDrag />}\n\t\t\t{trees &&\n\t\t\t\ttrees.map((tree) => (\n\t\t\t\t\t<Marker key={`marker-${tree.id}`} position={[ tree.geolocation.y, tree.geolocation.x ]}>\n\t\t\t\t\t\t<Popup className={classes.treeMarkerPopup}>\n\t\t\t\t\t\t\t<TreePopup tree={tree} />\n\t\t\t\t\t\t</Popup>\n\t\t\t\t\t</Marker>\n\t\t\t\t))}\n\t\t</MapContainer>\n\t);\n}\nexport default React.memo(LeafletMap);\n","import React, { useState, useRef, useEffect } from 'react';\nimport { MapContainer, useMap, useMapEvents, Marker, Popup, TileLayer } from 'react-leaflet';\nimport { GeoSearchControl, OpenStreetMapProvider } from 'leaflet-geosearch';\nimport 'leaflet-geosearch/dist/geosearch.css';\n\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Slider from '@material-ui/core/Slider';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Button from '@material-ui/core/Button';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport LeafletMap from './LeafletMap';\nimport useStyles from '../styles/formStyle';\n\nfunction SelectCoordinates({ formData, onCoordinatesChange, onMapCoordinatesChange }) {\n\tconst classes = useStyles();\n\tconst didMountRef = useRef(false);\n\tconst [ showSelectMap, setShowSelectMap ] = useState(true);\n\n\t// Handles change to coordinates from text input\n\tconst handleChange = (evt) => {\n\t\tonCoordinatesChange(evt.target);\n\t};\n\n\t// Scroll to map when shown for selecting tree location\n\t// Ref to map toogle button, toggle dispays Leaflet map\n\t// and changes button text. Only runs on rerenders after first\n\tconst mapToggleRef = useRef(null);\n\tuseEffect(\n\t\t() => {\n\t\t\tif (showSelectMap && mapToggleRef.current && didMountRef.current) {\n\t\t\t\tmapToggleRef.current.scrollIntoView({\n\t\t\t\t\tbehavior : 'smooth'\n\t\t\t\t});\n\t\t\t}\n\t\t\telse {\n\t\t\t\tdidMountRef.current = true;\n\t\t\t}\n\t\t},\n\t\t[ showSelectMap ]\n\t);\n\n\tconst toggleSelectMap = () => {\n\t\tsetShowSelectMap(!showSelectMap);\n\t};\n\tconst selectMapBtn = () => {\n\t\treturn showSelectMap ? <Typography>Hide Map</Typography> : <Typography>Select Via Map</Typography>;\n\t};\n\tconst setDisplayMapStyle = () => {\n\t\treturn showSelectMap ? {} : { display: 'none' };\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t<Grid item container ref={mapToggleRef}>\n\t\t\t\t<Grid item xs={12} md={6}>\n\t\t\t\t\t<TextField\n\t\t\t\t\t\tid=\"lat\"\n\t\t\t\t\t\tname=\"lat\"\n\t\t\t\t\t\tlabel=\"Latitude\"\n\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\tinputProps={{ step: 'any', min: -90, max: 90 }}\n\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\tInputLabelProps={{ shrink: true }}\n\t\t\t\t\t\tplaceholder=\"-90 to 90 (eg. 48.10045)\"\n\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\tvalue={formData.lat}\n\t\t\t\t\t\trequired\n\t\t\t\t\t/>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item xs={12} md={6}>\n\t\t\t\t\t<TextField\n\t\t\t\t\t\tid=\"lng\"\n\t\t\t\t\t\tname=\"lng\"\n\t\t\t\t\t\tlabel=\"Longitude\"\n\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\tinputProps={{ step: 'any', min: -180, max: 180 }}\n\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\tInputLabelProps={{ shrink: true }}\n\t\t\t\t\t\tplaceholder=\"-180 to 180 (eg. -123.45316)\"\n\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\tvalue={formData.lng}\n\t\t\t\t\t\trequired\n\t\t\t\t\t/>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t\t<Button variant=\"outlined\" color=\"secondary\" fullWidth onClick={toggleSelectMap}>\n\t\t\t\t{selectMapBtn()}\n\t\t\t</Button>\n\t\t\t<div className={classes.mapContainer} style={setDisplayMapStyle()}>\n\t\t\t\t<LeafletMap onMapCoordinatesChange={onMapCoordinatesChange} useGetClickCoordinates={true} />\n\t\t\t</div>\n\t\t</div>\n\t);\n}\nexport default React.memo(SelectCoordinates);\n","import React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { signUpUser } from '../actions/auth';\nimport { errorDisplay } from '../helpers/formErrorDisplay';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\nimport useStyles from '../styles/formStyle';\nimport SelectCoordinates from '../leafletMap/SelectCoordinates';\nimport { getUserFromApi } from '../actions/currUser';\n// TODO change geolocation request to use my location\n\nfunction SignUpForm({ submitFormData }) {\n\tconst classes = useStyles();\n\n\tconst authErrors = useSelector((st) => st.auth.error);\n\n\tconst INITIAL_FORM_DATA = {\n\t\tusername : '',\n\t\temail    : '',\n\t\tpassword : '',\n\t\timg_url  : ''\n\t};\n\tconst [ formData, setFormData ] = useState(INITIAL_FORM_DATA);\n\n\tconst handleChange = (evt) => {\n\t\tconst { name, value } = evt.target;\n\n\t\tsetFormData((fData) => ({\n\t\t\t...fData,\n\t\t\t[name] : value\n\t\t}));\n\t};\n\tconst handleSubmit = (evt) => {\n\t\tevt.preventDefault();\n\t\tsubmitFormData(formData);\n\t};\n\n\tconst handleErrorDisplay = (field) => {\n\t\treturn errorDisplay(field, authErrors);\n\t};\n\n\treturn (\n\t\t<form onSubmit={handleSubmit} className={classes.form}>\n\t\t\t<TextField\n\t\t\t\tid=\"username\"\n\t\t\t\tname=\"username\"\n\t\t\t\tlabel=\"Username\"\n\t\t\t\tonChange={handleChange}\n\t\t\t\tvalue={formData.username}\n\t\t\t\tautoComplete=\"username\"\n\t\t\t\trequired\n\t\t\t\tinputProps={{ minLength: 1, maxLength: 55 }}\n\t\t\t\terror={Boolean(handleErrorDisplay('username'))}\n\t\t\t\thelperText={handleErrorDisplay('username')}\n\t\t\t/>\n\t\t\t<TextField\n\t\t\t\tid=\"email\"\n\t\t\t\tname=\"email\"\n\t\t\t\tlabel=\"Email\"\n\t\t\t\ttype=\"email\"\n\t\t\t\tonChange={handleChange}\n\t\t\t\tvalue={formData.email}\n\t\t\t\tautoComplete=\"email\"\n\t\t\t\trequired\n\t\t\t\tinputProps={{ minLength: 6, maxLength: 60 }}\n\t\t\t\terror={Boolean(handleErrorDisplay('email'))}\n\t\t\t\thelperText={handleErrorDisplay('email')}\n\t\t\t/>\n\t\t\t<TextField\n\t\t\t\tid=\"password\"\n\t\t\t\tname=\"password\"\n\t\t\t\tlabel=\"Password\"\n\t\t\t\ttype=\"password\"\n\t\t\t\tonChange={handleChange}\n\t\t\t\tvalue={formData.password}\n\t\t\t\tautoComplete=\"password\"\n\t\t\t\trequired\n\t\t\t\tinputProps={{ minLength: 6 }}\n\t\t\t\terror={Boolean(handleErrorDisplay('password'))}\n\t\t\t\thelperText={handleErrorDisplay('password')}\n\t\t\t/>\n\n\t\t\t{/* <TextField\n\t\t\t\tid=\"img_url\"\n\t\t\t\tname=\"img_url\"\n\t\t\t\tlabel=\"Profile Image URL\"\n\t\t\t\ttype=\"url\"\n\t\t\t\tonChange={handleChange}\n\t\t\t\tvalue={formData.img_url}\n\t\t\t/> */}\n\t\t\t<Button variant=\"contained\" color=\"secondary\" type=\"submit\">\n\t\t\t\tSign Up\n\t\t\t</Button>\n\t\t</form>\n\t);\n}\nexport default SignUpForm;\n","import React, { useState, useEffect } from 'react';\nimport { Link as RouterLink, useHistory } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Link from '@material-ui/core/Link';\n\nimport { signUpUser } from '../actions/auth';\nimport { errorDisplay } from '../helpers/formErrorDisplay';\nimport SignUpForm from './SignUpForm';\nimport SelectCoordinates from '../leafletMap/SelectCoordinates';\nimport { getUserFromApi } from '../actions/currUser';\n\nconst useStyles = makeStyles({\n\tinnerContent : {\n\t\tpadding : 20\n\t},\n\tform         : {\n\t\tdisplay       : 'flex',\n\t\tflexDirection : 'column',\n\t\t'& div'       : {\n\t\t\tmarginBottom : 10\n\t\t}\n\t}\n});\n\nfunction SignUp() {\n\tconst classes = useStyles();\n\tconst theme = useTheme();\n\tconst history = useHistory();\n\tconst dispatch = useDispatch();\n\tconst isAuthenticated = useSelector((st) => st.auth.authenticated);\n\tconst username = useSelector((st) => st.currUser.username);\n\n\t// Avoid updating during an existing state transition by checking\n\t// auth status in useEffect\n\tuseEffect(\n\t\t() => {\n\t\t\t// If user is authenticated, push to user page\n\t\t\tif (isAuthenticated) {\n\t\t\t\thistory.push(`/users/${username}`);\n\t\t\t}\n\t\t},\n\t\t[ isAuthenticated, username ]\n\t);\n\n\tconst submitFormData = (formData) => {\n\t\t// email and password required by Firebase Authentication\n\t\tconst credentials = {\n\t\t\temail    : formData.email,\n\t\t\tpassword : formData.password\n\t\t};\n\t\t// remove password for TreeMarkableApi user creation\n\t\tconst userData = { ...formData };\n\t\tdelete userData.password;\n\n\t\tdispatch(signUpUser(credentials, userData));\n\t};\n\n\treturn (\n\t\t<Grid container className={classes.innerContent}>\n\t\t\t<Grid item xs={12}>\n\t\t\t\t<Typography variant=\"h3\" gutterBottom>\n\t\t\t\t\tSign Up\n\t\t\t\t</Typography>\n\t\t\t\t<Typography gutterBottom>\n\t\t\t\t\tAlready have an account? Sign in{' '}\n\t\t\t\t\t<Link component={RouterLink} to=\"/signin\" style={{ color: theme.palette.primary.light }}>\n\t\t\t\t\t\there\n\t\t\t\t\t</Link>.\n\t\t\t\t</Typography>\n\t\t\t\t<Grid item>\n\t\t\t\t\t<SignUpForm submitFormData={submitFormData} />\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t</Grid>\n\t);\n}\n\nexport default SignUp;\n","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\nimport { signInUser, signOutUser } from '../actions/auth';\nimport { errorDisplay } from '../helpers/formErrorDisplay';\nimport useStyles from '../styles/formStyle';\n\nfunction SignIn({ submitFormData }) {\n\tconst classes = useStyles();\n\n\tconst authErrors = useSelector((st) => st.auth.error);\n\n\tconst INITIAL_FORM_DATA = {\n\t\temail    : '',\n\t\tpassword : ''\n\t};\n\tconst [ formData, setFormData ] = useState(INITIAL_FORM_DATA);\n\n\tconst handleChange = (evt) => {\n\t\tconst { name, value } = evt.target;\n\n\t\tsetFormData((fData) => ({\n\t\t\t...fData,\n\t\t\t[name] : value\n\t\t}));\n\t};\n\tconst handleSubmit = (evt) => {\n\t\tevt.preventDefault();\n\t\tsubmitFormData(formData);\n\t};\n\tconst handleErrorDisplay = (field) => {\n\t\treturn errorDisplay(field, authErrors);\n\t};\n\n\treturn (\n\t\t<form onSubmit={handleSubmit} className={classes.form}>\n\t\t\t<TextField\n\t\t\t\tid=\"email\"\n\t\t\t\tname=\"email\"\n\t\t\t\tlabel=\"Email\"\n\t\t\t\ttype=\"email\"\n\t\t\t\tonChange={handleChange}\n\t\t\t\tvalue={formData.email}\n\t\t\t\tautoComplete=\"email\"\n\t\t\t\trequired\n\t\t\t\tinputProps={{ minLength: 6, maxLength: 60 }}\n\t\t\t\terror={Boolean(handleErrorDisplay('email'))}\n\t\t\t\thelperText={handleErrorDisplay('email')}\n\t\t\t/>\n\t\t\t<TextField\n\t\t\t\tid=\"password\"\n\t\t\t\tname=\"password\"\n\t\t\t\tlabel=\"Password\"\n\t\t\t\ttype=\"password\"\n\t\t\t\tonChange={handleChange}\n\t\t\t\tvalue={formData.password}\n\t\t\t\tautoComplete=\"password\"\n\t\t\t\trequired\n\t\t\t\terror={Boolean(handleErrorDisplay('password'))}\n\t\t\t\thelperText={handleErrorDisplay('password')}\n\t\t\t/>\n\t\t\t<Button color=\"secondary\" variant=\"contained\" type=\"submit\">\n\t\t\t\tSign In\n\t\t\t</Button>\n\t\t</form>\n\t);\n}\nexport default SignIn;\n","import React, { useState, useEffect } from 'react';\nimport { Link as RouterLink, useHistory } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Link from '@material-ui/core/Link';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\nimport { signInUser, signOutUser } from '../actions/auth';\nimport { errorDisplay } from '../helpers/formErrorDisplay';\nimport SignInForm from './SignInForm';\n\nconst useStyles = makeStyles({\n\tinnerContent : {\n\t\tpadding : 20\n\t},\n\tform         : {\n\t\tdisplay       : 'flex',\n\t\tflexDirection : 'column',\n\t\t'& div'       : {\n\t\t\tmarginBottom : 10\n\t\t}\n\t}\n});\n\nfunction SignIn() {\n\tconsole.log('SignIn Component - Start');\n\tconst classes = useStyles();\n\tconst theme = useTheme();\n\tconst dispatch = useDispatch();\n\tconst history = useHistory();\n\tconst isAuthenticated = useSelector((st) => st.auth.authenticated);\n\tconst username = useSelector((st) => st.currUser.username);\n\tconst status = useSelector((st) => st.currUser.status);\n\n\t// Avoid updating during an existing state transition by checking\n\t// auth status in useEffect. Also redirect already logged in users\n\tuseEffect(\n\t\t() => {\n\t\t\t// If user is authenticated, push to user page\n\t\t\tif ((isAuthenticated && status === 'idle') || status === 'successful') {\n\t\t\t\thistory.push(`/users/${username}`);\n\t\t\t}\n\t\t},\n\t\t[ isAuthenticated, username, history, status ]\n\t);\n\n\tconst submitFormData = (formData) => {\n\t\tdispatch(signInUser(formData));\n\t};\n\n\treturn (\n\t\t<Grid container className={classes.innerContent}>\n\t\t\t<Grid item xs={12}>\n\t\t\t\t<Typography variant=\"h3\" gutterBottom>\n\t\t\t\t\tSign In\n\t\t\t\t</Typography>\n\t\t\t\t<Typography gutterBottom>\n\t\t\t\t\tDon't have an account? Sign up{' '}\n\t\t\t\t\t<Link component={RouterLink} to=\"/signup\" style={{ color: theme.palette.primary.light }}>\n\t\t\t\t\t\there\n\t\t\t\t\t</Link>{' '}\n\t\t\t\t\t, or browse the publically available trees and groups.\n\t\t\t\t</Typography>\n\n\t\t\t\t<SignInForm submitFormData={submitFormData} />\n\t\t\t</Grid>\n\t\t</Grid>\n\t);\n}\nexport default SignIn;\n","import React, { useState } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Divider from '@material-ui/core/Divider';\n\n// import CurrUserInfo from './CurrUserInfo';\nimport { errorDisplay } from '../helpers/formErrorDisplay';\nimport { editCurrUser } from '../actions/currUser';\n\nconst useStyles = makeStyles({\n\tinnerContent : {\n\t\tpadding : 20\n\t},\n\tform         : {\n\t\tdisplay       : 'flex',\n\t\tflexDirection : 'column',\n\t\t'& div'       : {\n\t\t\tmarginBottom : 10\n\t\t}\n\t}\n});\n\nfunction EditUser() {\n\tconst classes = useStyles();\n\tconst history = useHistory();\n\tconst dispatch = useDispatch();\n\tconst { username, error } = useSelector((st) => st.currUser);\n\tconst status = useSelector((st) => st.currUser.status);\n\n\tconst INITIAL_FORM_DATA = {\n\t\tcurrent_email    : '',\n\t\tcurrent_password : '',\n\t\tusername         : '',\n\t\tnew_email        : '',\n\t\tnew_password     : '',\n\t\timg_url          : ''\n\t};\n\tconst [ formData, setFormData ] = useState(INITIAL_FORM_DATA);\n\n\t// When a user changes their username, push to the updated username\n\t// to prevent issues on a potential refresh.\n\n\tif (status === 'success') {\n\t\thistory.push(`/users/${username}`);\n\t}\n\n\tconst handleChange = (evt) => {\n\t\tconst { name, value } = evt.target;\n\n\t\tsetFormData((fData) => ({\n\t\t\t...fData,\n\t\t\t[name] : value\n\t\t}));\n\t};\n\n\tconst handleCancel = () => {\n\t\thistory.push(`/users/${username}`);\n\t};\n\n\tconst handleSubmit = (evt) => {\n\t\tevt.preventDefault();\n\n\t\t// email and password required by Firebase Reauthentication\n\t\tconst credentials = {\n\t\t\temail    : formData.current_email,\n\t\t\tpassword : formData.current_password\n\t\t};\n\n\t\t// user data required by TreeMarkableApi to edit user\n\t\tconst userData = {\n\t\t\tusername : formData.username,\n\t\t\timg_url  : formData.img_url,\n\t\t\temail    : formData.new_email,\n\t\t\tpassword : formData.new_password\n\t\t};\n\n\t\tfor (let field in userData) {\n\t\t\tif (userData[field] === '') {\n\t\t\t\tdelete userData[field];\n\t\t\t}\n\t\t}\n\t\tconsole.log('Edit User - handleSumbit - userData', userData);\n\t\tdispatch(editCurrUser(credentials, username, userData));\n\t};\n\n\tconst handleErrorDisplay = (field) => {\n\t\treturn errorDisplay(field, error);\n\t};\n\n\treturn (\n\t\t<Grid container className={classes.innerContent} direction=\"column\">\n\t\t\t<Grid item>\n\t\t\t\t<Typography variant=\"h3\" gutterBottom>\n\t\t\t\t\tEdit User\n\t\t\t\t</Typography>\n\t\t\t</Grid>\n\t\t\t<Divider variant=\"middle\" style={{ marginBottom: 15 }} />\n\t\t\t<Grid container item xs={12}>\n\t\t\t\t<Grid container direction=\"column\" item xs={12}>\n\t\t\t\t\t<form onSubmit={handleSubmit} className={classes.form}>\n\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t<Typography>Any fields left blank will be ignored.</Typography>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\tid=\"username\"\n\t\t\t\t\t\t\t\tname=\"username\"\n\t\t\t\t\t\t\t\tlabel=\"New Username\"\n\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\tvalue={formData.username}\n\t\t\t\t\t\t\t\tinputProps={{ maxLength: 55 }}\n\t\t\t\t\t\t\t\terror={Boolean(handleErrorDisplay('username'))}\n\t\t\t\t\t\t\t\thelperText={handleErrorDisplay('username')}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\tid=\"new_email\"\n\t\t\t\t\t\t\t\tname=\"new_email\"\n\t\t\t\t\t\t\t\tlabel=\"New Email\"\n\t\t\t\t\t\t\t\ttype=\"email\"\n\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\tvalue={formData.new_email}\n\t\t\t\t\t\t\t\tautoComplete=\"email\"\n\t\t\t\t\t\t\t\terror={Boolean(handleErrorDisplay('email'))}\n\t\t\t\t\t\t\t\thelperText={handleErrorDisplay('email')}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\tid=\"new_password\"\n\t\t\t\t\t\t\t\tname=\"new_password\"\n\t\t\t\t\t\t\t\tlabel=\"New Password\"\n\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\tvalue={formData.new_password}\n\t\t\t\t\t\t\t\tinputProps={{ minLength: 6 }}\n\t\t\t\t\t\t\t\terror={Boolean(handleErrorDisplay('new_password'))}\n\t\t\t\t\t\t\t\thelperText={handleErrorDisplay('new_password')}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t{/* <Grid item >\n\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\tid=\"img_url\"\n\t\t\t\t\t\t\t\tname=\"img_url\"\n\t\t\t\t\t\t\t\tlabel=\"New Profile Image URL\"\n\t\t\t\t\t\t\t\ttype=\"url\"\n\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\tvalue={formData.img_url}\n\t\t\t\t\t\t\t\tautoComplete=\"img_url\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Grid> */}\n\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t<Typography variant=\"subtitle2\">Verify Account</Typography>\n\n\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\tid=\"current_password\"\n\t\t\t\t\t\t\t\tname=\"current_password\"\n\t\t\t\t\t\t\t\tlabel=\"Current Password\"\n\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\tvalue={formData.current_password}\n\t\t\t\t\t\t\t\tinputProps={{ minLength: 6 }}\n\t\t\t\t\t\t\t\terror={Boolean(handleErrorDisplay('password'))}\n\t\t\t\t\t\t\t\thelperText={handleErrorDisplay('password')}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid container item justify=\"space-between\" style={{ paddingLeft: 40, paddingRight: 40 }}>\n\t\t\t\t\t\t\t<Button onClick={handleCancel} variant=\"contained\" color=\"secondary\">\n\t\t\t\t\t\t\t\tGo Back\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t<Button variant=\"contained\" color=\"primary\" type=\"submit\">\n\t\t\t\t\t\t\t\tSave Edits\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</form>\n\t\t\t\t</Grid>\n\t\t\t\t{/* <Grid container item xs={6}>\n\t\t\t\t\t<CurrUserInfo />\n\t\t\t\t</Grid> */}\n\t\t\t</Grid>\n\t\t</Grid>\n\t);\n}\nexport default EditUser;\n","import React, { useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\n\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Input from '@material-ui/core/Input';\nimport Button from '@material-ui/core/Button';\nimport Box from '@material-ui/core/Box';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\n\nimport { storageRef } from '../firebase/firebaseStorage';\n\nconst useStyles = makeStyles((theme) => {\n\treturn {\n\t\timgPreview    : { height: 100, width: 'auto' },\n\t\timgsContainer : {\n\t\t\t'& .selected' : {\n\t\t\t\tbackgroundColor : theme.palette.primary.accent\n\t\t\t}\n\t\t},\n\t\timgPaper      : {\n\t\t\tjustifyContent : 'center',\n\t\t\talignItems     : 'center',\n\t\t\tpadding        : 4,\n\t\t\tpaddingBottom  : 0\n\t\t}\n\t};\n});\n\nfunction ImagesInput({ allowMultiple = true, onImageFilesChange }) {\n\tconst theme = useTheme();\n\tconst classes = useStyles(theme);\n\tconst [ imageUrls, setImageUrls ] = useState([]);\n\tconst [ fileList, setFileList ] = useState([]);\n\n\t// Lift files to parent component\n\tuseEffect(\n\t\t() => {\n\t\t\tconsole.log('useEffect fileList', fileList);\n\t\t\tonImageFilesChange(fileList);\n\t\t},\n\t\t[ fileList, onImageFilesChange ]\n\t);\n\n\tconst readUploadedFileAsDataUrl = (inputFile) => {\n\t\tconst temporaryFileReader = new FileReader();\n\n\t\treturn new Promise((resolve, reject) => {\n\t\t\ttemporaryFileReader.onerror = () => {\n\t\t\t\ttemporaryFileReader.abort();\n\t\t\t\treject(new DOMException('Problem parsing input file.'));\n\t\t\t};\n\n\t\t\ttemporaryFileReader.onload = () => {\n\t\t\t\tresolve(temporaryFileReader.result);\n\t\t\t};\n\t\t\ttemporaryFileReader.readAsDataURL(inputFile);\n\t\t});\n\t};\n\n\tconst getImageUrlsFromFiles = async (files) => {\n\t\tconsole.log('getImageUrlsFromFiles', files);\n\t\tlet urls = [];\n\n\t\tfor (let i = 0; i < files.length; i++) {\n\t\t\tconst url = await readUploadedFileAsDataUrl(files[i]);\n\t\t\turls.push(url);\n\t\t}\n\n\t\tsetImageUrls(urls);\n\t};\n\n\tconst handleChange = async (evt) => {\n\t\tconst files = evt.target.files;\n\t\tconst filesArr = Array.from(files);\n\t\tconsole.log('filesArr', filesArr);\n\n\t\tgetImageUrlsFromFiles(files);\n\t\tsetFileList((fileList) => {\n\t\t\treturn filesArr;\n\t\t});\n\t};\n\n\tconst handlePrimaryChange = (evt) => {\n\t\tconst targetUrl = evt.currentTarget.children[0].src;\n\t\tconst idx = imageUrls.findIndex((url) => url === targetUrl);\n\t\tconsole.log('handlePrimaryChange idx', idx);\n\n\t\tsetImageUrls((imageUrls) => {\n\t\t\tconst filteredUrls = imageUrls.filter((url) => url !== targetUrl);\n\t\t\tfilteredUrls.unshift(targetUrl);\n\t\t\treturn filteredUrls;\n\t\t});\n\n\t\tconsole.log('handlePrimaryChange fileList', fileList);\n\t\tsetFileList((fileList) => {\n\t\t\treturn [ fileList[idx], ...fileList.slice(0, idx), ...fileList.slice(idx + 1) ];\n\t\t});\n\t\tconsole.log('handlePrimaryChange fileList post', fileList);\n\t};\n\n\treturn (\n\t\t<Grid container className=\"ImagesInput\">\n\t\t\t<Grid item>\n\t\t\t\t<Input\n\t\t\t\t\taccept=\"image/*\"\n\t\t\t\t\tstyle={{ display: 'none' }}\n\t\t\t\t\tid=\"file-upload\"\n\t\t\t\t\ttype=\"file\"\n\t\t\t\t\tinputProps={{ multiple: allowMultiple }}\n\t\t\t\t\tonChange={handleChange}\n\t\t\t\t/>\n\t\t\t\t<Button variant=\"outlined\" color=\"primary\" htmlFor=\"file-upload\" component=\"label\">\n\t\t\t\t\t{allowMultiple ? 'Choose Images' : 'Choose Image'}\n\t\t\t\t</Button>\n\t\t\t\t{allowMultiple && (\n\t\t\t\t\t<Typography>\n\t\t\t\t\t\tIf selecting multiple images, click the one you want to be the primary image.\n\t\t\t\t\t</Typography>\n\t\t\t\t)}\n\t\t\t</Grid>\n\t\t\t<Grid container item xs={12} justify=\"center\" className={classes.imgsContainer}>\n\t\t\t\t{imageUrls.map((url, idx) => (\n\t\t\t\t\t<Box key={url} mr={1}>\n\t\t\t\t\t\t<Paper\n\t\t\t\t\t\t\televation={3}\n\t\t\t\t\t\t\tonClick={handlePrimaryChange}\n\t\t\t\t\t\t\tclassName={imageUrls[0] === url ? `${classes.imgPaper} selected` : classes.imgPaper}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<img className={classes.imgPreview} src={url} />\n\t\t\t\t\t\t</Paper>\n\t\t\t\t\t</Box>\n\t\t\t\t))}\n\t\t\t</Grid>\n\t\t</Grid>\n\t);\n}\nexport default React.memo(ImagesInput);\n","import React, { useState, useRef, useEffect } from 'react';\n\nimport Typography from '@material-ui/core/Typography';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\n\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Slider from '@material-ui/core/Slider';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Button from '@material-ui/core/Button';\n\nimport useStyles from '../styles/formStyle';\nimport TreeMarkableApi from '../TreeMarkableApi';\nimport SelectLocationMap from '../leafletMap/LeafletMap';\nimport { treesRef, uploadImagesToFirebase } from '../firebase/firebaseStorage';\nimport ImagesInput from '../imageHandling/ImagesInput';\n\nfunction TreeFormBasicFields({ edit = false, formData, onFormChange }) {\n\tconst classes = useStyles();\n\n\tconst handleChange = (evt) => {\n\t\tonFormChange(evt.target);\n\t};\n\n\treturn (\n\t\t<Grid container className={classes.form}>\n\t\t\t<TextField\n\t\t\t\tid=\"name\"\n\t\t\t\tname=\"name\"\n\t\t\t\tlabel=\"Tree Name\"\n\t\t\t\tplaceholder=\"Hyperion\"\n\t\t\t\tonChange={handleChange}\n\t\t\t\tvalue={formData.name}\n\t\t\t\trequired={!edit}\n\t\t\t/>\n\t\t\t<TextField\n\t\t\t\tid=\"description\"\n\t\t\t\tname=\"description\"\n\t\t\t\tlabel=\"Description\"\n\t\t\t\tmultiline\n\t\t\t\tplaceholder=\"World's tallest known living tree!\"\n\t\t\t\tonChange={handleChange}\n\t\t\t\tvalue={formData.description}\n\t\t\t/>\n\n\t\t\t<TextField\n\t\t\t\tid=\"common_name\"\n\t\t\t\tname=\"common_name\"\n\t\t\t\tlabel=\"Species Common Name\"\n\t\t\t\tplaceholder=\"Bigleaf Maple\"\n\t\t\t\tonChange={handleChange}\n\t\t\t\tvalue={formData.common_name}\n\t\t\t/>\n\n\t\t\t<TextField\n\t\t\t\tid=\"scientific_name\"\n\t\t\t\tname=\"scientific_name\"\n\t\t\t\tlabel=\"Species Scientifc Name\"\n\t\t\t\tplaceholder=\"Acer Macrophyllum\"\n\t\t\t\tonChange={handleChange}\n\t\t\t\tvalue={formData.scientific_name}\n\t\t\t/>\n\n\t\t\t<TextField\n\t\t\t\tid=\"height\"\n\t\t\t\tname=\"height\"\n\t\t\t\tlabel=\"Height (ft.)\"\n\t\t\t\ttype=\"number\"\n\t\t\t\tplaceholder=\"From base to the tallest branch.\"\n\t\t\t\tinputProps={{ min: 0, max: 500, step: 0.01 }}\n\t\t\t\tonChange={handleChange}\n\t\t\t\tvalue={formData.height}\n\t\t\t/>\n\t\t\t<TextField\n\t\t\t\tid=\"dsh\"\n\t\t\t\tname=\"dsh\"\n\t\t\t\tlabel=\"Diameter Standard Height (in.)\"\n\t\t\t\ttype=\"number\"\n\t\t\t\tinputProps={{ min: 0, max: 500, step: 0.01 }}\n\t\t\t\tplaceholder=\"Trunk circumference 4.5ft above the ground.\"\n\t\t\t\tonChange={handleChange}\n\t\t\t\tvalue={formData.dsh}\n\t\t\t/>\n\t\t\t<TextField\n\t\t\t\tid=\"leaf_type\"\n\t\t\t\tname=\"leaf_type\"\n\t\t\t\tlabel=\"Leaf Type\"\n\t\t\t\tselect\n\t\t\t\tonChange={handleChange}\n\t\t\t\tvalue={formData.leaf_type}\n\t\t\t>\n\t\t\t\t<MenuItem value=\"\">Unknown</MenuItem>\n\t\t\t\t<MenuItem value=\"deciduous\">Deciduous</MenuItem>\n\t\t\t\t<MenuItem value=\"evergreen\">Evergreen</MenuItem>\n\t\t\t</TextField>\n\t\t\t<FormControlLabel\n\t\t\t\tcontrol={\n\t\t\t\t\t<Checkbox\n\t\t\t\t\t\tid=\"fruit_bearing\"\n\t\t\t\t\t\tname=\"fruit_bearing\"\n\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\tchecked={formData.fruit_bearing}\n\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t/>\n\t\t\t\t}\n\t\t\t\tlabel=\"Fruit Bearing? Consider adding what type of fruit to the description!\"\n\t\t\t/>\n\t\t</Grid>\n\t);\n}\nexport default TreeFormBasicFields;\n","/**\n * Action creator for fetching a tree from the TreeMarkable API by the tree id.\n * Returns an object with the returned tree data.\n */\n\nimport TreeMarkableApi from '../TreeMarkableApi';\nimport {\n\tLOAD_TREE,\n\tLOAD_TREES,\n\tREMOVE_TREE,\n\tTREE_ERROR,\n\tTREE_REQUEST_START,\n\tTREE_REQUEST_SUCCESS,\n\tTREE_REQUEST_FAILURE\n} from './types';\nimport { treesRef, uploadImagesToFirebase, deleteImagesFromFirebase } from '../firebase/firebaseStorage';\nimport { removeFromSavedTrees } from './currUser';\n\nfunction createTree(tree, imageFiles) {\n\tconsole.log('Actions - createTree tree', tree, imageFiles);\n\treturn async function(dispatch) {\n\t\tdispatch({ type: TREE_REQUEST_START });\n\t\ttry {\n\t\t\tconst res = await TreeMarkableApi.createTree(tree);\n\t\t\tconsole.log('Actions - createTree res', res);\n\t\t\tawait uploadImagesToFirebase(treesRef, res.id, imageFiles);\n\t\t\tdispatch(gotTree(res));\n\t\t\tdispatch({ type: TREE_REQUEST_SUCCESS });\n\t\t\treturn res.id;\n\t\t} catch (err) {\n\t\t\tconsole.log('Actions - createTree err', err);\n\t\t\tdispatch(treeError(err));\n\t\t\tdispatch({ type: TREE_REQUEST_FAILURE });\n\t\t\treturn false;\n\t\t}\n\t};\n}\n\nfunction getTree(id) {\n\treturn async function(dispatch) {\n\t\tdispatch({ type: TREE_REQUEST_START });\n\t\ttry {\n\t\t\tconst res = await TreeMarkableApi.getTree(id);\n\t\t\tconsole.log('Actions - getTree res', res);\n\t\t\tdispatch(gotTree(res));\n\t\t\tdispatch({ type: TREE_REQUEST_SUCCESS });\n\t\t} catch (err) {\n\t\t\tconsole.log('Actions - getTree err', err);\n\t\t\tdispatch(treeError(err));\n\t\t\tdispatch({ type: TREE_REQUEST_FAILURE });\n\t\t}\n\t};\n}\nfunction getTrees(searchParams) {\n\treturn async function(dispatch) {\n\t\tdispatch({ type: TREE_REQUEST_START });\n\t\ttry {\n\t\t\tconst res = await TreeMarkableApi.getTrees(searchParams);\n\t\t\tconsole.log('Actions - getTrees res', res);\n\t\t\tdispatch(gotTrees(res));\n\t\t\tdispatch({ type: TREE_REQUEST_SUCCESS });\n\t\t} catch (err) {\n\t\t\tconsole.log('Actions - getTrees err', err);\n\t\t\tdispatch(treeError(err));\n\t\t\tdispatch({ type: TREE_REQUEST_FAILURE });\n\t\t}\n\t};\n}\nfunction updateTree(treeId, data, imageFiles) {\n\treturn async function(dispatch) {\n\t\tdispatch({ type: TREE_REQUEST_START });\n\t\ttry {\n\t\t\tconst res = await TreeMarkableApi.updateTree(treeId, data);\n\t\t\tconsole.log('Actions - updateTree res', res);\n\t\t\tif (imageFiles.length > 0) {\n\t\t\t\tconsole.log('Actions - updateTree - imagesFiles', imageFiles);\n\t\t\t\tawait deleteImagesFromFirebase(treesRef, treeId);\n\t\t\t\tawait uploadImagesToFirebase(treesRef, treeId, imageFiles);\n\t\t\t}\n\t\t\tdispatch(gotTree(res));\n\t\t\tdispatch({ type: TREE_REQUEST_SUCCESS });\n\t\t} catch (err) {\n\t\t\tconsole.log('Actions - updateTree err', err);\n\t\t\tdispatch(treeError(err));\n\t\t\tdispatch({ type: TREE_REQUEST_FAILURE });\n\t\t}\n\t};\n}\n\nfunction deleteTree(treeId) {\n\tconsole.log('Actions - deleteTree - start', treeId);\n\treturn async function(dispatch) {\n\t\tdispatch({ type: TREE_REQUEST_START });\n\t\ttry {\n\t\t\tconst res = await TreeMarkableApi.deleteTree(treeId);\n\t\t\tconsole.log('Actions - deleteTree res', res);\n\t\t\tawait deleteImagesFromFirebase(treesRef, treeId);\n\t\t\tawait dispatch(deletedTree(treeId));\n\t\t\tawait dispatch({ type: TREE_REQUEST_SUCCESS });\n\t\t\treturn true;\n\t\t} catch (err) {\n\t\t\tconsole.log('Actions - deleteTree err', err);\n\t\t\tdispatch(treeError(err));\n\t\t\tdispatch({ type: TREE_REQUEST_FAILURE });\n\t\t\treturn false;\n\t\t}\n\t};\n}\n\nfunction gotTree(tree) {\n\treturn { type: LOAD_TREE, payload: tree };\n}\nfunction gotTrees(trees) {\n\treturn { type: LOAD_TREES, payload: trees };\n}\nfunction deletedTree(treeId) {\n\treturn { type: REMOVE_TREE, payload: treeId };\n}\nfunction treeError(error) {\n\treturn { type: TREE_ERROR, payload: error };\n}\n\nexport { createTree, getTree, getTrees, updateTree, deleteTree };\n","import React, { useState, useRef, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Slider from '@material-ui/core/Slider';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Divider from '@material-ui/core/Divider';\nimport Button from '@material-ui/core/Button';\n\nimport TreeMarkableApi from '../TreeMarkableApi';\nimport TreeFormBasicFields from './TreeFormBasicFields';\nimport SelectCoordinates from '../leafletMap/SelectCoordinates';\n\nimport ImagesInput from '../imageHandling/ImagesInput';\nimport { addToSavedTrees } from '../actions/currUser';\nimport { createTree } from '../actions/trees';\n\nconst useStyles = makeStyles({\n\tinnerContent : {\n\t\tpadding         : 20,\n\t\tbackgroundColor : 'white'\n\t},\n\tform         : {\n\t\tdisplay       : 'flex',\n\t\tflexDirection : 'column',\n\t\t'& div'       : {\n\t\t\tmarginBottom : 10\n\t\t}\n\t}\n});\n\nfunction CreateNewTree() {\n\tconst history = useHistory();\n\tconst dispatch = useDispatch();\n\tconst userId = useSelector((st) => st.currUser.uid);\n\tconst INITIAL_TREE_FORM_DATA = {\n\t\tname            : '',\n\t\tdescription     : '',\n\t\tcommon_name     : '',\n\t\tscientific_name : '',\n\t\theight          : '',\n\t\tdsh             : '',\n\t\tleaf_type       : '',\n\t\tfruit_bearing   : false\n\t};\n\tconst classes = useStyles();\n\tconst [ treeFormData, setTreeFormData ] = useState(INITIAL_TREE_FORM_DATA);\n\tconst [ coordinates, setCoordinates ] = useState({ lat: '', lng: '' });\n\tconst [ imageFiles, setImageFiles ] = useState([]);\n\n\tconsole.log('CreateNewTree Load - coordinates', coordinates);\n\tconsole.log('CreateNewTree Load - imageFiles', imageFiles);\n\n\tconst handleTreeFormChange = (data) => {\n\t\tlet { name, value } = data;\n\t\tif (name === 'fruit_bearing') {\n\t\t\tvalue = data.checked;\n\t\t}\n\n\t\tsetTreeFormData((fData) => ({\n\t\t\t...fData,\n\t\t\t[name] : value\n\t\t}));\n\t};\n\n\tconst handleCoordinatesChange = (data) => {\n\t\tconsole.log('CreateNewTree - handleCoordinatesChange', data);\n\t\tconst { name, value } = data;\n\n\t\tsetCoordinates((fData) => ({\n\t\t\t...fData,\n\t\t\t[name] : value\n\t\t}));\n\t};\n\n\tconst handleMapCoordinatesChange = (coords) => {\n\t\tconsole.log('CreateNewTree - handleMapCoordinatesChange', coords);\n\n\t\tsetCoordinates(coords);\n\t};\n\n\tconst handleImageFilesChange = (files) => {\n\t\tsetImageFiles(files);\n\t};\n\n\t// On form submit, convert data to type expected by server\n\t// and make POST request to create new tree\n\tconst handleSubmit = async (evt) => {\n\t\tevt.preventDefault();\n\n\t\tlet newTree = {\n\t\t\t...treeFormData,\n\t\t\tgeolocation : {\n\t\t\t\tlatitude  : parseFloat(coordinates.lat),\n\t\t\t\tlongitude : parseFloat(coordinates.lng)\n\t\t\t}\n\t\t};\n\n\t\tfor (let field in newTree) {\n\t\t\tif (newTree[field] === '') {\n\t\t\t\tdelete newTree[field];\n\t\t\t}\n\t\t\telse if (field === 'height' || field === 'dsh') {\n\t\t\t\tnewTree[field] = parseFloat(newTree[field]);\n\t\t\t}\n\t\t}\n\t\tconsole.log('CreateNewTree', newTree);\n\t\tconst treeId = await dispatch(createTree(newTree, imageFiles));\n\t\tdispatch(addToSavedTrees(userId, treeId));\n\n\t\tif (treeId) {\n\t\t\tconsole.log('CreateNewTree - treeId', treeId);\n\t\t\thistory.push(`/trees/${treeId}`);\n\t\t}\n\t};\n\n\treturn (\n\t\t<div className={classes.innerContent}>\n\t\t\t<Typography variant=\"h4\" gutterBottom>\n\t\t\t\tCreate New Tree\n\t\t\t</Typography>\n\t\t\t<form onSubmit={handleSubmit} className={classes.form}>\n\t\t\t\t<TreeFormBasicFields formData={treeFormData} onFormChange={handleTreeFormChange} />\n\t\t\t\t<Typography variant=\"h5\" gutterBottom>\n\t\t\t\t\tTree Location\n\t\t\t\t</Typography>\n\t\t\t\t<SelectCoordinates\n\t\t\t\t\tformData={coordinates}\n\t\t\t\t\tonCoordinatesChange={handleCoordinatesChange}\n\t\t\t\t\tonMapCoordinatesChange={handleMapCoordinatesChange}\n\t\t\t\t/>\n\t\t\t\t<Divider variant=\"middle\" style={{ marginTop: 15, marginBottom: 15 }} />\n\t\t\t\t<div>\n\t\t\t\t\t<Typography variant=\"h5\" gutterBottom>\n\t\t\t\t\t\tAdd Images\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<ImagesInput onImageFilesChange={handleImageFilesChange} />\n\t\t\t\t\t<Divider variant=\"middle\" style={{ marginBottom: 15 }} />\n\t\t\t\t</div>\n\n\t\t\t\t<Button color=\"secondary\" variant=\"contained\" type=\"submit\">\n\t\t\t\t\tCreate Tree\n\t\t\t\t</Button>\n\t\t\t</form>\n\t\t</div>\n\t);\n}\nexport default CreateNewTree;\n","export default __webpack_public_path__ + \"static/media/not-found-page.b8048e53.jpg\";","import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport lostWoods from './images/not-found-page.jpg';\n\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Link from '@material-ui/core/Link';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => {\n\treturn {\n\t\tbackgroundImage : {\n\t\t\tbackgroundImage              : `url(${lostWoods})`,\n\t\t\tbackgroundRepeat             : 'no-repeat',\n\t\t\tbackgroundPosition           : 'center',\n\t\t\tbackgroundSize               : 'cover',\n\t\t\tbackgroundColor              : 'black',\n\t\t\theight                       : `calc(100vh - ${theme.mixins.toolbar.minHeight}px)`,\n\t\t\t[theme.breakpoints.up('md')]: {\n\t\t\t\theight : 'calc(100vh - 64px)'\n\t\t\t}\n\t\t}\n\t};\n});\n\nfunction NotFound() {\n\tconst theme = useTheme();\n\tconst classes = useStyles(theme);\n\n\treturn (\n\t\t<Grid container className={classes.backgroundImage} alignItems=\"center\">\n\t\t\t<Grid\n\t\t\t\tcontainer\n\t\t\t\titem\n\t\t\t\tjustify=\"center\"\n\t\t\t\tdirection=\"column\"\n\t\t\t\tstyle={{ backgroundColor: 'rgba(0,0,0,.5)', paddingBottom: 10 }}\n\t\t\t>\n\t\t\t\t<Typography align=\"center\" variant=\"h1\" style={{ color: 'white', fontWeight: 'bold' }} gutterBottom>\n\t\t\t\t\tPage Not Found\n\t\t\t\t</Typography>\n\t\t\t\t<Typography align=\"center\" variant=\"h5\" style={{ color: 'white' }}>\n\t\t\t\t\tDid you get lost in the woods? Head back{' '}\n\t\t\t\t\t<Link component={RouterLink} to=\"/\" style={{ color: theme.palette.primary.accent }}>\n\t\t\t\t\t\thome\n\t\t\t\t\t</Link>.\n\t\t\t\t</Typography>\n\t\t\t</Grid>\n\t\t</Grid>\n\t);\n}\nexport default NotFound;\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Divider from '@material-ui/core/Divider';\nimport Box from '@material-ui/core/Box';\nimport TextField from '@material-ui/core/TextField';\nimport Slider from '@material-ui/core/Slider';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Paper from '@material-ui/core/Paper';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\n\nimport { getTrees } from '../actions/trees';\n\nimport useStyles from '../styles/formStyle';\n\nfunction TreeSearchForm({ mapCenter, setCenterOnUser }) {\n\tconst classes = useStyles();\n\tconst dispatch = useDispatch();\n\n\tconsole.log('TreeSearchForm - mapCenter', mapCenter);\n\n\tconst [ formData, setFormData ] = useState({\n\t\tsearch        : '',\n\t\tdistance      : '',\n\t\tleaf_type     : '',\n\t\tfruit_bearing : false,\n\t\theight_min    : '',\n\t\theight_max    : '',\n\t\tdsh_min       : '',\n\t\tdsh_max       : ''\n\t});\n\n\tconst handleChange = (evt) => {\n\t\tconst name = evt.target.name;\n\t\tconst value = name === 'fruit_bearing' ? evt.target.checked : evt.target.value;\n\n\t\tsetFormData((fData) => ({\n\t\t\t...fData,\n\t\t\t[name] : value\n\t\t}));\n\t};\n\n\tconst handleSubmit = (evt) => {\n\t\tevt.preventDefault();\n\t\tsetFormData(formData);\n\n\t\tconst searchParams = {\n\t\t\tsearch        : formData.search,\n\t\t\tdistance      : parseFloat(formData.distance) || '',\n\t\t\tmap_center_x  : mapCenter[1],\n\t\t\tmap_center_y  : mapCenter[0],\n\t\t\tleaf_type     : formData.leaf_type,\n\t\t\tfruit_bearing : formData.fruit_bearing || '',\n\t\t\theight_min    : parseFloat(formData.height_min) || '',\n\t\t\theight_max    : parseFloat(formData.height_max) || '',\n\t\t\tdsh_min       : parseFloat(formData.dsh_min) || '',\n\t\t\tdsh_max       : parseFloat(formData.dsh_max) || ''\n\t\t};\n\n\t\tfor (let field in searchParams) {\n\t\t\tif (searchParams[field] === '') {\n\t\t\t\tdelete searchParams[field];\n\t\t\t}\n\t\t}\n\n\t\tconsole.log('Searchparams', searchParams);\n\t\tdispatch(getTrees(searchParams));\n\t};\n\n\tconst handleCenterMapOnUser = () => {\n\t\tconsole.log('handleCenterMapOnUser - click');\n\t\tsetCenterOnUser(true);\n\t};\n\n\treturn (\n\t\t<form onSubmit={handleSubmit} className={classes.form}>\n\t\t\t<Grid container>\n\t\t\t\t<Grid item xs={12} className={classes.form}>\n\t\t\t\t\t<TextField\n\t\t\t\t\t\tid=\"search\"\n\t\t\t\t\t\tname=\"search\"\n\t\t\t\t\t\tlabel=\"Search Term\"\n\t\t\t\t\t\tplaceholder=\"Search Tree Name, Common Name, Scientific Name...\"\n\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\tvalue={formData.search}\n\t\t\t\t\t/>\n\t\t\t\t</Grid>\n\n\t\t\t\t<Grid container item xs={12} md={6}>\n\t\t\t\t\t<Grid item xs={6}>\n\t\t\t\t\t\t<Typography variant=\"subtitle1\">Height (ft.)</Typography>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tid=\"height_min\"\n\t\t\t\t\t\t\tname=\"height_min\"\n\t\t\t\t\t\t\tlabel=\"Min\"\n\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\tinputProps={{ min: 0, max: 500, step: 0.01 }}\n\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\tvalue={formData.height_min}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tid=\"height_max\"\n\t\t\t\t\t\t\tname=\"height_max\"\n\t\t\t\t\t\t\tlabel=\"Max\"\n\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\tinputProps={{ min: 1, max: 500, step: 0.01 }}\n\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\tvalue={formData.height_max}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item xs={6}>\n\t\t\t\t\t\t<Typography variant=\"subtitle1\">DSH (in.)</Typography>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tid=\"dsh_min\"\n\t\t\t\t\t\t\tname=\"dsh_min\"\n\t\t\t\t\t\t\tlabel=\"Min\"\n\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\tinputProps={{\n\t\t\t\t\t\t\t\tmin  : 0,\n\t\t\t\t\t\t\t\tmax  : 500,\n\t\t\t\t\t\t\t\tstep : 0.01\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\tvalue={formData.dsh_min}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tid=\"dsh_max\"\n\t\t\t\t\t\t\tname=\"dsh_max\"\n\t\t\t\t\t\t\tlabel=\"Max\"\n\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\tinputProps={{\n\t\t\t\t\t\t\t\tmin  : 1,\n\t\t\t\t\t\t\t\tmax  : 500,\n\t\t\t\t\t\t\t\tstep : 0.01\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\tvalue={formData.dsh_max}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid container item xs={12} md={6}>\n\t\t\t\t\t<Grid item xs={6} md={12}>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tid=\"leaf_type\"\n\t\t\t\t\t\t\tname=\"leaf_type\"\n\t\t\t\t\t\t\tlabel=\"Leaf Type\"\n\t\t\t\t\t\t\tselect\n\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\tvalue={formData.leaf_type}\n\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<MenuItem value=\"\">Any</MenuItem>\n\t\t\t\t\t\t\t<MenuItem value=\"deciduous\">Deciduous</MenuItem>\n\t\t\t\t\t\t\t<MenuItem value=\"evergreen\">Evergreen</MenuItem>\n\t\t\t\t\t\t</TextField>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item xs={6} md={12}>\n\t\t\t\t\t\t<FormControlLabel\n\t\t\t\t\t\t\tcontrol={\n\t\t\t\t\t\t\t\t<Checkbox\n\t\t\t\t\t\t\t\t\tid=\"fruit_bearing\"\n\t\t\t\t\t\t\t\t\tname=\"fruit_bearing\"\n\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\tchecked={formData.fruit_bearing}\n\t\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tlabel=\"Fruit Bearing\"\n\t\t\t\t\t\t\tlabelPlacement=\"top\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid container alignItems=\"center\" item xs={12}>\n\t\t\t\t\t<Grid item md={8}>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tid=\"distance\"\n\t\t\t\t\t\t\tname=\"distance\"\n\t\t\t\t\t\t\tlabel=\"Miles from Map Center to Show Trees\"\n\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\tinputProps={{ min: 0, step: 1 }}\n\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\tvalue={formData.distance}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid container justify=\"center\" item md={4}>\n\t\t\t\t\t\t<Tooltip title=\"Requires user location permission\">\n\t\t\t\t\t\t\t<Button size=\"small\" color=\"primary\" variant=\"contained\" onClick={handleCenterMapOnUser}>\n\t\t\t\t\t\t\t\tCenter on Me\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t\t<Button fullWidth variant=\"outlined\" color=\"secondary\" type=\"submit\">\n\t\t\t\t\tSearch\n\t\t\t\t</Button>\n\t\t\t</Grid>\n\t\t</form>\n\t);\n}\n\nexport default TreeSearchForm;\n","/**\n * Action creator for fetching a group from the TreeMarkable API by the group id.\n * Returns an object with the returned group data.\n */\n\nimport TreeMarkableApi from '../TreeMarkableApi';\nimport {\n\tLOAD_GROUP,\n\tLOAD_GROUPS,\n\tREMOVE_GROUP,\n\tLOAD_TREE_TO_GROUP,\n\tREMOVE_TREE_FROM_GROUP,\n\tGROUP_ERROR,\n\tGROUP_REQUEST_START,\n\tGROUP_REQUEST_SUCCESS,\n\tGROUP_REQUEST_FAILURE,\n\tREMOVE_MEMBER_FROM_GROUP\n} from './types';\nimport { groupsRef, uploadImagesToFirebase, deleteImagesFromFirebase } from '../firebase/firebaseStorage';\n\nfunction createGroup(group, imageFiles) {\n\tconsole.log('Actions - createGroup group', group);\n\n\treturn async function(dispatch) {\n\t\tdispatch({ type: GROUP_REQUEST_START });\n\t\ttry {\n\t\t\tconst res = await TreeMarkableApi.createGroup(group);\n\t\t\tawait uploadImagesToFirebase(groupsRef, res.id, imageFiles);\n\t\t\tdispatch(gotGroup(res));\n\t\t\tdispatch({ type: GROUP_REQUEST_SUCCESS });\n\t\t\treturn res.id;\n\t\t} catch (err) {\n\t\t\tconsole.log('Actions - createGroup err', err);\n\t\t\tdispatch(groupError(err));\n\t\t\tdispatch({ type: GROUP_REQUEST_FAILURE });\n\t\t\treturn false;\n\t\t}\n\t};\n}\n\nfunction getGroup(id) {\n\tconsole.log('Actions - getGroup group', id);\n\treturn async function(dispatch) {\n\t\tdispatch({ type: GROUP_REQUEST_START });\n\t\ttry {\n\t\t\tconst res = await TreeMarkableApi.getGroup(id);\n\t\t\tdispatch(gotGroup(res));\n\t\t\tdispatch({ type: GROUP_REQUEST_SUCCESS });\n\t\t} catch (err) {\n\t\t\tconsole.log('Actions - getGroup err', err);\n\t\t\tdispatch(groupError(err));\n\t\t\tdispatch({ type: GROUP_REQUEST_FAILURE });\n\t\t}\n\t};\n}\nfunction getGroups(searchParams) {\n\treturn async function(dispatch) {\n\t\tdispatch({ type: GROUP_REQUEST_START });\n\t\ttry {\n\t\t\tconst res = await TreeMarkableApi.getGroups(searchParams);\n\t\t\tconsole.log('Actions - getGroups res', res);\n\n\t\t\tdispatch(gotGroups(res));\n\t\t\tdispatch({ type: GROUP_REQUEST_SUCCESS });\n\t\t} catch (err) {\n\t\t\tconsole.log('Actions - getGroups err', err);\n\t\t\tdispatch(groupError(err));\n\t\t\tdispatch({ type: GROUP_REQUEST_FAILURE });\n\t\t}\n\t};\n}\n\nfunction updateGroup(groupId, data) {\n\treturn async function(dispatch) {\n\t\tdispatch({ type: GROUP_REQUEST_START });\n\t\ttry {\n\t\t\tconst res = await TreeMarkableApi.updateGroup(groupId, data);\n\t\t\tconsole.log('Actions - updateGroup res', res);\n\t\t\tdispatch(gotGroup(res));\n\t\t\tdispatch({ type: GROUP_REQUEST_SUCCESS });\n\t\t\treturn true;\n\t\t} catch (err) {\n\t\t\tconsole.log('Actions - updateGroup err', err);\n\t\t\tdispatch(groupError(err));\n\t\t\tdispatch({ type: GROUP_REQUEST_FAILURE });\n\t\t\treturn false;\n\t\t}\n\t};\n}\n\nfunction deleteGroup(groupId) {\n\tconsole.log('Actions - deleteGroup - start', groupId);\n\treturn async function(dispatch) {\n\t\tdispatch({ type: GROUP_REQUEST_START });\n\t\ttry {\n\t\t\tconst res = await TreeMarkableApi.deleteGroup(groupId);\n\t\t\tawait deleteImagesFromFirebase(groupsRef, groupId);\n\t\t\tconsole.log('Actions - deleteGroup res', res);\n\t\t\tdispatch(deletedGroup(groupId));\n\t\t\tdispatch({ type: GROUP_REQUEST_SUCCESS });\n\t\t\treturn true;\n\t\t} catch (err) {\n\t\t\tconsole.log('Actions - deleteGroup err', err);\n\t\t\tdispatch(groupError(err));\n\t\t\tdispatch({ type: GROUP_REQUEST_FAILURE });\n\t\t\treturn false;\n\t\t}\n\t};\n}\n\n/**\n * Action creators for updating the group's saved Trees \n */\n\nfunction addTreeToGroup(groupId, treeId) {\n\tconsole.log('Actions - addTreeToGroup - ', groupId, treeId);\n\treturn async function(dispatch) {\n\t\tdispatch({ type: GROUP_REQUEST_START });\n\n\t\ttry {\n\t\t\tawait TreeMarkableApi.groupAddTree(groupId, treeId);\n\t\t\tdispatch(treeAddedToGroup({ groupId, treeId }));\n\t\t\tdispatch({ type: GROUP_REQUEST_SUCCESS });\n\t\t} catch (err) {\n\t\t\tconsole.log('Actions - addTreeToGroup error', err);\n\t\t\tdispatch(groupError(err));\n\t\t\tdispatch({ type: GROUP_REQUEST_FAILURE });\n\t\t}\n\t};\n}\nfunction removeTreeFromGroup(groupId, treeId) {\n\tconsole.log('Actions  - removeTreeFromGroup - ', groupId, treeId);\n\treturn async function(dispatch) {\n\t\tdispatch({ type: GROUP_REQUEST_START });\n\n\t\ttry {\n\t\t\tawait TreeMarkableApi.groupRemoveTree(groupId, treeId);\n\t\t\tdispatch(treeRemovedFromGroup({ groupId, treeId }));\n\t\t\tdispatch({ type: GROUP_REQUEST_SUCCESS });\n\t\t} catch (err) {\n\t\t\tconsole.log('Actions - removeTreeFromGroup error', err);\n\t\t\tdispatch(groupError(err));\n\t\t\tdispatch({ type: GROUP_REQUEST_FAILURE });\n\t\t}\n\t};\n}\n\n/**\n * Action creators for updating the group's members \n */\n\nfunction removeMemberFromGroup(groupId, userId) {\n\tconsole.log('currUser - removeFromFollowedGroups - ', userId, groupId);\n\treturn async function(dispatch) {\n\t\tdispatch({ type: GROUP_REQUEST_START });\n\t\ttry {\n\t\t\tawait TreeMarkableApi.userRemoveGroup(userId, groupId);\n\t\t\tdispatch(memberRemovedFromGroup({ groupId, userId }));\n\t\t\tdispatch({ type: GROUP_REQUEST_SUCCESS });\n\t\t} catch (err) {\n\t\t\tconsole.log('removeFromFollowedGroups error', err);\n\t\t\tdispatch(groupError(err));\n\t\t\tdispatch({ type: GROUP_REQUEST_FAILURE });\n\t\t}\n\t};\n}\n\nfunction addModToGroup(groupId, userId) {\n\tconsole.log('Actions - addModToGroup - ', groupId, userId);\n\treturn async function(dispatch) {\n\t\tdispatch({ type: GROUP_REQUEST_START });\n\n\t\ttry {\n\t\t\tawait TreeMarkableApi.groupAddMod(groupId, userId);\n\t\t\tdispatch({ type: GROUP_REQUEST_SUCCESS });\n\t\t} catch (err) {\n\t\t\tconsole.log('Actions - addModToGroup error', err);\n\t\t\tdispatch(groupError(err));\n\t\t\tdispatch({ type: GROUP_REQUEST_FAILURE });\n\t\t}\n\t};\n}\n\nfunction removeModFromGroup(groupId, userId) {\n\tconsole.log('Actions - removeModFromGroup - ', groupId, userId);\n\treturn async function(dispatch) {\n\t\tdispatch({ type: GROUP_REQUEST_START });\n\n\t\ttry {\n\t\t\tawait TreeMarkableApi.groupRemoveMod(groupId, userId);\n\t\t\tdispatch({ type: GROUP_REQUEST_SUCCESS });\n\t\t} catch (err) {\n\t\t\tconsole.log('Actions - removeModFromGroup error', err);\n\t\t\tdispatch(groupError(err));\n\t\t\tdispatch({ type: GROUP_REQUEST_FAILURE });\n\t\t}\n\t};\n}\n\nfunction gotGroup(group) {\n\treturn { type: LOAD_GROUP, payload: group };\n}\nfunction deletedGroup(groupId) {\n\treturn { type: REMOVE_GROUP, payload: groupId };\n}\nfunction gotGroups(groups) {\n\treturn { type: LOAD_GROUPS, payload: groups };\n}\nfunction treeAddedToGroup(data) {\n\treturn { type: LOAD_TREE_TO_GROUP, payload: data };\n}\nfunction treeRemovedFromGroup(data) {\n\treturn { type: REMOVE_TREE_FROM_GROUP, payload: data };\n}\nfunction memberRemovedFromGroup(data) {\n\treturn { type: REMOVE_MEMBER_FROM_GROUP, payload: data };\n}\nfunction groupError(error) {\n\treturn { type: GROUP_ERROR, payload: error };\n}\n\nexport {\n\tcreateGroup,\n\tgetGroup,\n\tgetGroups,\n\tupdateGroup,\n\taddTreeToGroup,\n\tremoveTreeFromGroup,\n\taddModToGroup,\n\tremoveModFromGroup,\n\tremoveMemberFromGroup,\n\tdeleteGroup\n};\n","import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { Add as AddIcon, Check as CheckIcon } from '@material-ui/icons';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { useTheme } from '@material-ui/core/styles';\n\nimport { addTreeToGroup, removeTreeFromGroup } from '../actions/groups';\n\nfunction EditTreeInGroupIconBtn({ group, treeId }) {\n\tconst theme = useTheme();\n\tconst [ treeInGroup, setTreeInGroup ] = useState(null);\n\n\tconst dispatch = useDispatch();\n\n\tuseEffect(\n\t\t() => {\n\t\t\tconst checkTreeInGroup = (group, treeId) => {\n\t\t\t\tsetTreeInGroup(group.trees.includes(treeId));\n\t\t\t};\n\t\t\tcheckTreeInGroup(group, treeId);\n\t\t},\n\t\t[ group, treeId ]\n\t);\n\n\tconst handleClick = async () => {\n\t\tif (treeInGroup) {\n\t\t\tdispatch(removeTreeFromGroup(group.id, treeId));\n\t\t}\n\t\telse {\n\t\t\tdispatch(addTreeToGroup(group.id, treeId));\n\t\t}\n\t\tsetTreeInGroup(!treeInGroup);\n\t};\n\n\treturn (\n\t\t<Tooltip title={treeInGroup ? 'Remove Tree' : 'Add Tree'}>\n\t\t\t<IconButton onClick={handleClick}>\n\t\t\t\t{treeInGroup ? (\n\t\t\t\t\t<CheckIcon htmlColor={theme.palette.primary.light} />\n\t\t\t\t) : (\n\t\t\t\t\t<AddIcon htmlColor={theme.palette.primary.light} />\n\t\t\t\t)}\n\t\t\t</IconButton>\n\t\t</Tooltip>\n\t);\n}\nexport default EditTreeInGroupIconBtn;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport { DataGrid } from '@material-ui/data-grid';\n\nimport { FavoriteBorder as FavoriteBorderIcon, Favorite as FavoriteIcon } from '@material-ui/icons';\n\nimport FavoriteIconBtn from '../iconBtns/FavoriteIconBtn';\nimport EditTreeInGroupIconBtn from '../iconBtns/EditTreeInGroupIconBtn';\n\nimport { addToSavedTrees, removeFromSavedTrees } from '../actions/currUser';\n\nconst useStyles = makeStyles((theme) => ({\n\ttreeListContainer : {\n\t\tbackgroundColor           : theme.palette.background.paper,\n\t\t'& .data-grid-fav-header' : {\n\t\t\t'& .MuiDataGrid-colCellTitleContainer' : {\n\t\t\t\talignItems : 'center'\n\t\t\t}\n\t\t},\n\t\tdisplay                   : 'flex',\n\t\theight                    : '100%'\n\t}\n}));\n\nfunction DetailsLinkBtn(props) {\n\treturn (\n\t\t<Button color=\"primary\" component={Link} {...props}>\n\t\t\tShow\n\t\t</Button>\n\t);\n}\n\nconst checkTreeIdInCollection = (collection, treeId) => {\n\treturn collection.includes(treeId);\n};\n\nfunction TreeList({ trees, group = null }) {\n\tconst classes = useStyles();\n\tconst dispatch = useDispatch();\n\tconst { username, savedTreeIds } = useSelector((st) => st.currUser);\n\tlet treeRows;\n\tconsole.log('TreeList - trees', trees);\n\tif (!group) {\n\t\ttreeRows = trees.map((tree) => ({\n\t\t\tisFavTree : {\n\t\t\t\tid    : tree.id,\n\t\t\t\tisFav : checkTreeIdInCollection(savedTreeIds, tree.id)\n\t\t\t},\n\t\t\t...tree,\n\t\t\tlink      : `trees/${tree.id}`\n\t\t}));\n\t}\n\telse if (group) {\n\t\ttreeRows = trees.map((tree) => ({\n\t\t\ttreeInGroup : {\n\t\t\t\tid          : tree.id,\n\t\t\t\ttreeInGroup : checkTreeIdInCollection(group.trees, tree.id)\n\t\t\t},\n\t\t\t...tree,\n\t\t\tlink        : `trees/${tree.id}`\n\t\t}));\n\t}\n\n\tconst columns = [\n\t\t// Tree List outside of group has favorite/unfavorite btn for user\n\t\t!group && {\n\t\t\tfield           : 'isFavTree',\n\t\t\trenderHeader    : (params) => <FavoriteIcon />,\n\t\t\theaderClassName : 'data-grid-fav-header',\n\t\t\theaderAlign     : 'center',\n\t\t\trenderCell      : (params) => {\n\t\t\t\treturn <FavoriteIconBtn treeId={parseInt(params.value.id)} />;\n\t\t\t},\n\t\t\tsortComparator  : (value1, value2, param1, param2) => {\n\t\t\t\t//sort by favorited status of true or false\n\t\t\t\treturn value1.isFav === value2.isFav ? 0 : value1.isFav ? -1 : 1;\n\t\t\t}\n\t\t},\n\t\t// Tree List displayed as part of group page has column for\n\t\t// adding or removing tree from group.\n\t\tgroup !== null && {\n\t\t\tfield           : 'treeInGroup',\n\t\t\theaderName      : 'Add Tree',\n\t\t\theaderClassName : 'data-grid-tree-in-group-header',\n\t\t\theaderAlign     : 'center',\n\t\t\twidth           : 120,\n\t\t\trenderCell      : (params) => {\n\t\t\t\treturn <EditTreeInGroupIconBtn group={group} treeId={parseInt(params.value.id)} />;\n\t\t\t},\n\t\t\tsortComparator  : (value1, value2, param1, param2) => {\n\t\t\t\t//sort by whether tree is in group trees of true or false\n\t\t\t\treturn value1.treeInGroup === value2.treeInGroup ? 0 : value1.treeInGroup ? -1 : 1;\n\t\t\t}\n\t\t},\n\t\t{ field: 'name', headerName: 'Name', width: 150 },\n\t\t{ field: 'common_name', headerName: 'Common Name' },\n\t\t{\n\t\t\tfield      : 'scientific_name',\n\t\t\theaderName : 'Scientific Name'\n\t\t},\n\t\t{ field: 'height', headerName: 'Ht. (ft.)', type: 'number' },\n\t\t{ field: 'dsh', headerName: 'DBH (in.)', type: 'number' },\n\t\t{\n\t\t\tfield          : 'fruit_bearing',\n\t\t\theaderName     : 'Fruit Bearing',\n\t\t\tvalueFormatter : (params) => {\n\t\t\t\treturn params.value === true ? 'Yes' : ' ';\n\t\t\t}\n\t\t},\n\t\t{ field: 'leaf_type', headerName: 'Leaf Type' },\n\t\t{\n\t\t\tfield      : 'link',\n\t\t\theaderName : 'Details',\n\t\t\trenderCell : (params) => <DetailsLinkBtn to={params.value} />\n\t\t}\n\t];\n\n\tif (!username) columns.shift();\n\n\treturn (\n\t\t<div className={classes.treeListContainer}>\n\t\t\t<div style={{ flexGrow: 1 }}>\n\t\t\t\t<DataGrid rows={treeRows} columns={columns} pageSize={10} autoHeight />\n\t\t\t</div>\n\t\t</div>\n\t);\n}\nexport default TreeList;\n","import React, { useState, useRef, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Box from '@material-ui/core/Box';\n\nimport { getTrees } from '../actions/trees';\nimport TreeSearchForm from './TreeSearchForm';\nimport TreeList from './TreeList';\nimport LeafletMap from '../leafletMap/LeafletMap';\n\nfunction TabPanel(props) {\n\tconst { children, value, index, ...other } = props;\n\n\treturn (\n\t\t<div\n\t\t\trole=\"tabpanel\"\n\t\t\thidden={value !== index}\n\t\t\tid={`map-list-tabpanel-${index}`}\n\t\t\taria-labelledby={`map-list-tab-${index}`}\n\t\t\t{...other}\n\t\t>\n\t\t\t{value === index && <Box>{children}</Box>}\n\t\t</div>\n\t);\n}\n\nfunction a11yProps(index) {\n\treturn {\n\t\tid              : `map-list-tab-${index}`,\n\t\t'aria-controls' : `map-list-tabpanel-${index}`\n\t};\n}\n\nconst useStyles = makeStyles((theme) => ({\n\tindicator    : {\n\t\tbackgroundColor : theme.palette.secondary.main\n\t},\n\tinnerContent : {\n\t\tbackgroundColor : theme.palette.background.paper,\n\t\tpadding         : 20\n\t}\n}));\n\nfunction ExploreTrees() {\n\tconst theme = useTheme();\n\tconst classes = useStyles(theme);\n\tconst dispatch = useDispatch();\n\n\tconst [ isLoading, setIsLoading ] = useState(true);\n\tconst [ value, setValue ] = useState(0);\n\tconst [ centerOnUser, setCenterOnUser ] = useState(false);\n\tconst [ mapCenter, setMapCenter ] = useState([ 48.09933034129291, -123.42563836030864 ]);\n\n\t// Changes visible panel between Map and List\n\tconst handleChange = (event, newValue) => {\n\t\tsetValue(newValue);\n\t};\n\n\t// Get trees from API\n\tuseEffect(\n\t\t() => {\n\t\t\tif (isLoading) {\n\t\t\t\tdispatch(getTrees());\n\t\t\t\tsetIsLoading(false);\n\t\t\t}\n\t\t},\n\t\t[ isLoading, dispatch ]\n\t);\n\n\tlet trees = useSelector((st) => Object.values(st.trees.entities).map((tree) => tree));\n\n\tif (isLoading) {\n\t\treturn <div>Loading</div>;\n\t}\n\n\treturn (\n\t\t<div className={classes.innerContent}>\n\t\t\t<Typography variant=\"h3\" gutterBottom>\n\t\t\t\tExplore Trees\n\t\t\t</Typography>\n\t\t\t<Typography gutterBottom>\n\t\t\t\t**DISCLAIMER: Some trees shown may be on private property. Please use your discretion when visiting any\n\t\t\t\tgiven tree.\n\t\t\t</Typography>\n\n\t\t\t<TreeSearchForm mapCenter={mapCenter} setCenterOnUser={setCenterOnUser} />\n\t\t\t<AppBar position=\"static\" color=\"default\">\n\t\t\t\t<Tabs\n\t\t\t\t\tvalue={value}\n\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\tindicatorColor=\"secondary\"\n\t\t\t\t\ttextColor=\"secondary\"\n\t\t\t\t\tvariant=\"fullWidth\"\n\t\t\t\t\taria-label=\"map and list view tabs\"\n\t\t\t\t>\n\t\t\t\t\t<Tab label=\"Map\" {...a11yProps(0)} />\n\t\t\t\t\t<Tab label=\"List\" {...a11yProps(1)} />\n\t\t\t\t</Tabs>\n\t\t\t</AppBar>\n\t\t\t<Paper elevation={4}>\n\t\t\t\t<TabPanel value={value} index={0}>\n\t\t\t\t\t<LeafletMap\n\t\t\t\t\t\tmapCenter={mapCenter}\n\t\t\t\t\t\tsetMapCenter={setMapCenter}\n\t\t\t\t\t\tuseCenterOnUser={centerOnUser}\n\t\t\t\t\t\tsetCenterOnUser={setCenterOnUser}\n\t\t\t\t\t\ttrees={trees}\n\t\t\t\t\t/>\n\t\t\t\t</TabPanel>\n\t\t\t\t<TabPanel value={value} index={1}>\n\t\t\t\t\t<Box\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\theight : `${120 + Math.min(trees.length, 10) * 52}px`,\n\t\t\t\t\t\t\twidth  : '100%'\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<TreeList trees={trees} />\n\t\t\t\t\t</Box>\n\t\t\t\t</TabPanel>\n\t\t\t</Paper>\n\t\t</div>\n\t);\n}\nexport default ExploreTrees;\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Divider from '@material-ui/core/Divider';\nimport Box from '@material-ui/core/Box';\nimport TextField from '@material-ui/core/TextField';\nimport Slider from '@material-ui/core/Slider';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Paper from '@material-ui/core/Paper';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\n\nimport { getGroups } from '../actions/groups';\n\nimport useStyles from '../styles/formStyle';\n\nfunction GroupSearchForm() {\n\tconst classes = useStyles();\n\tconst dispatch = useDispatch();\n\n\tconst [ formData, setFormData ] = useState({\n\t\tsearch : ''\n\t});\n\n\tconst handleChange = (evt) => {\n\t\tconst { name, value } = evt.target;\n\n\t\tsetFormData((fData) => ({\n\t\t\t...fData,\n\t\t\t[name] : value\n\t\t}));\n\t};\n\n\tconst handleSubmit = (evt) => {\n\t\tevt.preventDefault();\n\t\tsetFormData(formData);\n\n\t\tconst searchParams = {\n\t\t\tsearch : formData.search\n\t\t};\n\n\t\tfor (let field in searchParams) {\n\t\t\tif (searchParams[field] === '') {\n\t\t\t\tdelete searchParams[field];\n\t\t\t}\n\t\t}\n\n\t\tconsole.log('Searchparams', searchParams);\n\t\tdispatch(getGroups(searchParams));\n\t};\n\n\treturn (\n\t\t<form onSubmit={handleSubmit} className={classes.form}>\n\t\t\t<Grid container>\n\t\t\t\t<Typography variant=\"h3\" gutterBottom>\n\t\t\t\t\tExplore Groups\n\t\t\t\t</Typography>\n\t\t\t\t<Grid container item xs={12}>\n\t\t\t\t\t<Grid item xs>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tid=\"search\"\n\t\t\t\t\t\t\tname=\"search\"\n\t\t\t\t\t\t\tlabel=\"Search Term\"\n\t\t\t\t\t\t\tplaceholder=\"Search Group Name...\"\n\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\tvalue={formData.search}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item xs={2}>\n\t\t\t\t\t\t<Button variant=\"outlined\" color=\"secondary\" type=\"submit\">\n\t\t\t\t\t\t\tSearch\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t</form>\n\t);\n}\n\nexport default GroupSearchForm;\n","import React, { useState, useRef, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport { DataGrid } from '@material-ui/data-grid';\n\nimport { FavoriteBorder as FavoriteBorderIcon, Favorite as FavoriteIcon } from '@material-ui/icons';\n\nimport { getTreesFromApi } from '../actions/trees';\nimport SelectLocationMap from '../leafletMap/LeafletMap';\nimport { treesRef, uploadImagesToFirebase } from '../firebase/firebaseStorage';\nimport ImagesInput from '../imageHandling/ImagesInput';\nimport { addToSavedTrees, removeFromSavedTrees } from '../actions/currUser';\n\nconst useStyles = makeStyles((theme) => ({\n\troot : {\n\t\twidth                     : '100%',\n\t\tbackgroundColor           : theme.palette.background.paper,\n\t\t'& .data-grid-fav-header' : {\n\t\t\t'& .MuiDataGrid-colCellTitleContainer' : {\n\t\t\t\talignItems : 'center'\n\t\t\t}\n\t\t}\n\t}\n}));\n\nfunction DetailsLinkBtn(props) {\n\treturn (\n\t\t<Button color=\"primary\" component={Link} {...props}>\n\t\t\tShow\n\t\t</Button>\n\t);\n}\n\nconst checkTreeIdInUserFavs = (userFavTreeIds, treeId) => {\n\treturn userFavTreeIds.includes(treeId);\n};\n\nfunction GroupList({ groups }) {\n\tconst classes = useStyles();\n\tconst dispatch = useDispatch();\n\tconst { uid, username, savedGroupIds } = useSelector((st) => st.currUser);\n\tconst groupRows = groups.map((group) => ({\n\t\t...group,\n\t\tcreated_at : new Date(group.created_at).toLocaleDateString('en-gb', {\n\t\t\tyear  : 'numeric',\n\t\t\tmonth : 'long',\n\t\t\tday   : 'numeric'\n\t\t}),\n\t\tlink       : `groups/${group.id}`\n\t}));\n\n\t// const handleUnfavoriteClick = (evt) => {\n\t// \tconst groupId = parseInt(evt.currentTarget.dataset.groupId);\n\t// \tdispatch(removeFromSavedTrees(uid, groupId));\n\t// };\n\t// const handleFavoriteClick = (evt) => {\n\t// \tconst groupId = parseInt(evt.currentTarget.dataset.groupId);\n\t// \tdispatch(addToSavedTrees(uid, groupId));\n\t// };\n\n\tconst columns = [\n\t\t{ field: 'name', headerName: 'Name', width: 200 },\n\t\t{ field: 'description', headerName: 'Description', width: 200 },\n\t\t{\n\t\t\tfield      : 'link',\n\t\t\theaderName : 'Details',\n\t\t\trenderCell : (params) => <DetailsLinkBtn to={params.value} />\n\t\t},\n\t\t{ field: 'created_at', headerName: 'Created', width: 150 }\n\t];\n\n\treturn (\n\t\t<div style={{ width: '100%' }} className={classes.root}>\n\t\t\t<DataGrid rows={groupRows} columns={columns} pageSize={10} autoHeight />\n\t\t</div>\n\t);\n}\nexport default GroupList;\n","import React, { useState, useRef, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport SwipeableViews from 'react-swipeable-views';\n\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Box from '@material-ui/core/Box';\n\nimport { getGroups } from '../actions/groups';\nimport GroupSearchForm from './GroupSearchForm';\nimport GroupList from './GroupList';\n\nconst useStyles = makeStyles((theme) => ({\n\tinnerContent : {\n\t\tbackgroundColor : theme.palette.background.paper,\n\t\tpadding         : 20\n\t}\n}));\n\nfunction ExploreGroups() {\n\tconst theme = useTheme();\n\tconst classes = useStyles(theme);\n\tconst dispatch = useDispatch();\n\n\tconst [ isLoading, setIsLoading ] = useState(true);\n\n\tuseEffect(\n\t\t() => {\n\t\t\tif (isLoading) {\n\t\t\t\tdispatch(getGroups());\n\t\t\t\tsetIsLoading(false);\n\t\t\t}\n\t\t},\n\t\t[ isLoading, dispatch ]\n\t);\n\n\tlet groups = useSelector((st) => Object.values(st.groups.entities).map((group) => group));\n\n\tconsole.log('ExploreGroups - groups', groups);\n\n\tif (isLoading) {\n\t\treturn <div>Loading</div>;\n\t}\n\n\treturn (\n\t\t<div className={classes.innerContent}>\n\t\t\t<GroupSearchForm />\n\n\t\t\t<GroupList groups={groups} />\n\t\t</div>\n\t);\n}\nexport default ExploreGroups;\n","import React, { useState } from 'react';\n\nimport {\n\tNavigateNext as NavigateNextIcon,\n\tNavigateBefore as NavigateBeforeIcon\n} from '@material-ui/icons/';\nimport Card from '@material-ui/core/Card';\nimport Fade from '@material-ui/core/Fade';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport IconButton from '@material-ui/core/IconButton';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n\troot  : {\n\t\twidth        : '100%',\n\t\tborderRadius : '0px'\n\t},\n\n\tmedia : {\n\t\theight         : 600,\n\t\tdisplay        : 'flex',\n\t\tjustifyContent : 'space-between',\n\t\talignItems     : 'center'\n\t}\n});\n\nfunction Carousel({ imageUrls }) {\n\tconst classes = useStyles();\n\tconst [ cardIdx, setCardIdx ] = useState(0);\n\tconst total = imageUrls.length;\n\tconst leftIconHidden = cardIdx === 0 ? true : false;\n\tconst rightIconHidden = cardIdx === total - 1 ? true : false;\n\tconst goForward = () => setCardIdx(cardIdx + 1);\n\tconst goBack = () => setCardIdx(cardIdx - 1);\n\n\treturn (\n\t\t<div className=\"Carousel\">\n\t\t\t<Card className={classes.root}>\n\t\t\t\t<CardMedia\n\t\t\t\t\tclassName={classes.media}\n\t\t\t\t\timage={imageUrls[cardIdx]}\n\t\t\t\t>\n\t\t\t\t\t{!leftIconHidden ? (\n\t\t\t\t\t\t<IconButton onClick={goBack}>\n\t\t\t\t\t\t\t<NavigateBeforeIcon\n\t\t\t\t\t\t\t\tfontSize=\"large\"\n\t\t\t\t\t\t\t\thtmlColor=\"rgba(255,255,255, 0.9)\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<div />\n\t\t\t\t\t)}\n\t\t\t\t\t{!rightIconHidden ? (\n\t\t\t\t\t\t<IconButton onClick={goForward}>\n\t\t\t\t\t\t\t<NavigateNextIcon\n\t\t\t\t\t\t\t\tfontSize=\"large\"\n\t\t\t\t\t\t\t\thtmlColor=\"rgba(255,255,255, 0.9)\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<div />\n\t\t\t\t\t)}\n\t\t\t\t</CardMedia>\n\t\t\t</Card>\n\t\t</div>\n\t);\n}\n\nexport default Carousel;\n","import React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport {\n\tInfo as InfoIcon,\n\tAdd as AddIcon,\n\tNature as NatureIcon,\n\tGroup as GroupIcon,\n\tExplore as ExploreIcon,\n\tHome as HomeIcon,\n\tMessage as MessageIcon,\n\tCheck as CheckIcon,\n\tFavoriteBorder as FavoriteBorderIcon,\n\tEdit as EditIcon\n} from '@material-ui/icons';\n\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nimport useStyles from '../styles/markerCard';\n\nfunction EditIconBtn({ type, id }) {\n\tconst classes = useStyles();\n\tconst history = useHistory();\n\n\tconst handleClick = () => {\n\t\thistory.push(`/${type}/${id}/edit`);\n\t};\n\n\treturn (\n\t\t<Tooltip title={'Edit'}>\n\t\t\t<IconButton onClick={handleClick}>\n\t\t\t\t<EditIcon />\n\t\t\t</IconButton>\n\t\t</Tooltip>\n\t);\n}\nexport default EditIconBtn;\n","import React, { useState, useRef, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useParams } from 'react-router-dom';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Avatar from '@material-ui/core/Avatar';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { MoreVert as MoreVertIcon, Send as SendIcon } from '@material-ui/icons';\n\nimport TreeMarkableApi from '../TreeMarkableApi';\nimport EditIconBtn from '../iconBtns/EditIconBtn';\n\nconst useStyles = makeStyles((theme) => ({\n\tavatarOther : {\n\t\tbackgroundColor : theme.palette.secondary.light\n\t},\n\tavatarOwn   : {\n\t\tbackgroundColor : theme.palette.primary.light\n\t}\n}));\n\nfunction Comment({ onDelete, username, comment, isCreatorOrModerator }) {\n\tconst classes = useStyles();\n\tconst [ editing, setEditing ] = useState(false);\n\tconst [ editText, setEditText ] = useState(comment.text);\n\tconst [ anchorEl, setAnchorEl ] = useState(null);\n\tconst open = Boolean(anchorEl);\n\tconst isCommentAuthor = username === comment.author_name;\n\n\tconst handleClick = (evt) => {\n\t\tsetAnchorEl(evt.currentTarget);\n\t};\n\n\tconst handleEditClick = () => {\n\t\tsetAnchorEl(null);\n\t\tsetEditing(true);\n\t};\n\tconst handleDeleteClick = async () => {\n\t\tsetAnchorEl(null);\n\t\tawait TreeMarkableApi.deleteComment(comment.id);\n\t\tonDelete();\n\t};\n\n\tconst handleClose = () => {\n\t\tsetAnchorEl(null);\n\t};\n\n\tconst handleChange = (evt) => {\n\t\tsetEditText(evt.target.value);\n\t};\n\n\tconst handleSubmit = async (evt) => {\n\t\tevt.preventDefault();\n\t\tsetEditText(editText.trim());\n\t\tif (editText !== comment.text) {\n\t\t\tconst res = await TreeMarkableApi.updateComment(comment.id, {\n\t\t\t\ttext : editText\n\t\t\t});\n\t\t\tcomment.text = res.text;\n\t\t}\n\t\tsetEditing(false);\n\t};\n\n\treturn (\n\t\t<Grid container item wrap=\"nowrap\" style={{ marginBottom: 15 }}>\n\t\t\t<Grid item style={{ marginRight: 15 }}>\n\t\t\t\t<Avatar className={isCommentAuthor ? classes.avatarOwn : classes.avatarOther}>\n\t\t\t\t\t{comment.author_name[0]}\n\t\t\t\t</Avatar>\n\t\t\t</Grid>\n\t\t\t<Grid container item alignItems=\"center\">\n\t\t\t\t{editing ? (\n\t\t\t\t\t<Grid container wrap=\"nowrap\" item justify=\"space-between\">\n\t\t\t\t\t\t<Grid item style={{ width: '100%' }}>\n\t\t\t\t\t\t\t<form onSubmit={handleSubmit} id=\"edit-comment\">\n\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\tid=\"text\"\n\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\tmultiline\n\t\t\t\t\t\t\t\t\tvalue={editText}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</form>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t<IconButton form=\"edit-comment\" type=\"submit\">\n\t\t\t\t\t\t\t\t<SendIcon />\n\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Grid>\n\t\t\t\t) : (\n\t\t\t\t\t<Grid container wrap=\"nowrap\" item justify=\"space-between\">\n\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t<Typography style={{ whiteSpace: 'pre-line' }}>{comment.text}</Typography>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t{(isCommentAuthor || isCreatorOrModerator) && (\n\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\t\t\taria-label=\"more\"\n\t\t\t\t\t\t\t\t\taria-controls=\"long-menu\"\n\t\t\t\t\t\t\t\t\taria-haspopup=\"true\"\n\t\t\t\t\t\t\t\t\tonClick={handleClick}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<MoreVertIcon fontSize=\"small\" />\n\t\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t\t\t<Menu id=\"long-menu\" anchorEl={anchorEl} keepMounted open={open} onClose={handleClose}>\n\t\t\t\t\t\t\t\t\t{isCommentAuthor && <MenuItem onClick={handleEditClick}>Edit</MenuItem>}\n\t\t\t\t\t\t\t\t\t<MenuItem onClick={handleDeleteClick}>Delete</MenuItem>\n\t\t\t\t\t\t\t\t</Menu>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</Grid>\n\t\t\t\t)}\n\t\t\t\t<Grid container item justify=\"space-between\">\n\t\t\t\t\t<Typography variant=\"caption\">Posted By: {comment.author_name}</Typography>\n\t\t\t\t\t<Typography variant=\"caption\">\n\t\t\t\t\t\t{new Date(comment.created_at).toLocaleDateString('en-gb', {\n\t\t\t\t\t\t\tyear  : 'numeric',\n\t\t\t\t\t\t\tmonth : 'long',\n\t\t\t\t\t\t\tday   : 'numeric'\n\t\t\t\t\t\t})}\n\t\t\t\t\t</Typography>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t</Grid>\n\t);\n}\nexport default Comment;\n","import React, { useState, useRef, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Link as RouterLink, useParams } from 'react-router-dom';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport Link from '@material-ui/core/Link';\nimport Box from '@material-ui/core/Box';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport Card from '@material-ui/core/Card';\nimport Divider from '@material-ui/core/Divider';\nimport CardContent from '@material-ui/core/CardContent';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport SendIcon from '@material-ui/icons/Send';\n\nimport { getTreeFromApi, getTreesFromApi } from '../actions/trees';\nimport LeafletMap from '../leafletMap/LeafletMap';\nimport ImagesInput from '../imageHandling/ImagesInput';\nimport Carousel from '../imageHandling/Carousel';\nimport Comment from './Comment';\n\nimport TreeMarkableApi from '../TreeMarkableApi';\n\nconst useStyles = makeStyles((theme) => ({\n\tuserAvatar : {\n\t\tbackgroundColor : theme.palette.primary.light\n\t}\n}));\n\n/**\n * Component accepts a string type ('groups' or 'trees') and an id\n * and returns the comments associated with that item in the\n * database. \n */\n\nfunction CommentsContainer({ type, id, isCreatorOrModerator }) {\n\tconsole.log('CommentsContainer - Start', type, id);\n\n\tconst classes = useStyles();\n\tconst INITIAL_STATE = {\n\t\ttext : '',\n\t\ttype,\n\t\tid\n\t};\n\tconst [ formData, setFormData ] = useState(INITIAL_STATE);\n\tconst [ isLoading, setIsLoading ] = useState(true);\n\tconst [ commentDeleted, setCommentDeleted ] = useState(false);\n\tconst [ comments, setComments ] = useState([]);\n\tconst username = useSelector((st) => st.currUser.username);\n\n\tuseEffect(\n\t\t() => {\n\t\t\tconst getComments = async (type, id) => {\n\t\t\t\tconst comments = await TreeMarkableApi.getComments(type, id);\n\t\t\t\tsetComments(comments);\n\t\t\t\tsetIsLoading(false);\n\t\t\t\tsetCommentDeleted(false);\n\t\t\t};\n\t\t\tgetComments(type, id);\n\t\t},\n\t\t[ isLoading, type, id, commentDeleted ]\n\t);\n\n\tconst handleDeleteComment = () => {\n\t\tsetCommentDeleted(true);\n\t};\n\n\tconst handleChange = (evt) => {\n\t\tconst { name, value } = evt.target;\n\n\t\tsetFormData((fData) => ({\n\t\t\t...fData,\n\t\t\t[name] : value\n\t\t}));\n\t};\n\n\tconst handleSubmit = async (evt) => {\n\t\tevt.preventDefault();\n\t\tawait TreeMarkableApi.createComment(formData);\n\t\tsetFormData(INITIAL_STATE);\n\t\tsetIsLoading(true);\n\t};\n\n\treturn (\n\t\t<Grid container className=\"CommentsContainer\">\n\t\t\t<Typography variant=\"h4\">Comments</Typography>\n\t\t\t<Grid container item xs={12}>\n\t\t\t\t<Box mt={2} mb={2} style={{ width: '100%' }}>\n\t\t\t\t\t{comments.length > 0 ? (\n\t\t\t\t\t\tcomments.map((comment) => (\n\t\t\t\t\t\t\t<Comment\n\t\t\t\t\t\t\t\tkey={`comment-${comment.id}`}\n\t\t\t\t\t\t\t\tonDelete={handleDeleteComment}\n\t\t\t\t\t\t\t\tcomment={comment}\n\t\t\t\t\t\t\t\tusername={username}\n\t\t\t\t\t\t\t\tisCreatorOrModerator={isCreatorOrModerator}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t))\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<Typography>No Comments</Typography>\n\t\t\t\t\t)}\n\t\t\t\t</Box>\n\t\t\t</Grid>\n\t\t\t{username ? (\n\t\t\t\t<Grid container item>\n\t\t\t\t\t<Grid container alignItems=\"center\" spacing={2} item xs={12} wrap=\"nowrap\">\n\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t<Avatar className={classes.userAvatar}>{username[0]}</Avatar>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t<form id=\"comment\" onSubmit={handleSubmit}>\n\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\tid=\"text\"\n\t\t\t\t\t\t\t\t\tname=\"text\"\n\t\t\t\t\t\t\t\t\tplaceholder=\"Add comment...\"\n\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\tvalue={formData.text}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</form>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t<IconButton form=\"comment\" type=\"submit\">\n\t\t\t\t\t\t\t\t<SendIcon />\n\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t) : (\n\t\t\t\t<Typography>\n\t\t\t\t\t<Link component={RouterLink} to=\"/signup\">\n\t\t\t\t\t\tSign Up\n\t\t\t\t\t</Link>{' '}\n\t\t\t\t\tor{' '}\n\t\t\t\t\t<Link component={RouterLink} to=\"/signin\">\n\t\t\t\t\t\tSign In\n\t\t\t\t\t</Link>{' '}\n\t\t\t\t\tto add comments.\n\t\t\t\t</Typography>\n\t\t\t)}\n\t\t</Grid>\n\t);\n}\nexport default CommentsContainer;\n","import React, { useState, useRef, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useParams } from 'react-router-dom';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n\nimport { getTree } from '../actions/trees';\nimport Carousel from '../imageHandling/Carousel';\nimport LeafletMap from '../leafletMap/LeafletMap';\nimport CommentsContainer from '../comment/CommentsContainer';\nimport { treesRef, downloadImageUrlsFromFirebase } from '../firebase/firebaseStorage';\nimport FavoriteIconBtn from '../iconBtns/FavoriteIconBtn';\nimport EditIconBtn from '../iconBtns/EditIconBtn';\n\nconst useStyles = makeStyles({\n\tinnerContent   : {\n\t\tpadding : 20\n\t},\n\ttableContainer : {\n\t\tmarginRight : 10\n\t}\n});\n\nfunction TreePage() {\n\tconsole.log('TreePage - start');\n\tconst classes = useStyles();\n\tconst { id } = useParams();\n\tconst tree = useSelector((st) => st.trees.entities[id]);\n\tconst uid = useSelector((st) => st.currUser.uid);\n\tconst isCreator = tree.creator === uid;\n\tconst [ isLoading, setIsLoading ] = useState(true);\n\tconst [ imageUrls, setImageUrls ] = useState({\n\t\tprimary : '',\n\t\talbum   : []\n\t});\n\n\tconst dispatch = useDispatch();\n\n\t// If Tree not already in store, request it from API\n\tuseEffect(\n\t\t() => {\n\t\t\tconsole.log('TreePage UseEffect tree - Start');\n\n\t\t\tconst getTreeFromApi = async (treeId) => {\n\t\t\t\tdispatch(getTree(treeId));\n\t\t\t};\n\t\t\tif (!tree) {\n\t\t\t\tgetTreeFromApi(id);\n\t\t\t}\n\t\t},\n\t\t[ tree, id, dispatch ]\n\t);\n\n\t// Get Tree Images from FirebaseStorage\n\tuseEffect(\n\t\t() => {\n\t\t\tconsole.log('TreePage UseEffect Images - Start');\n\t\t\tconst getImageUrls = async (collectionRef, id) => {\n\t\t\t\tconst imgUrls = await downloadImageUrlsFromFirebase(collectionRef, id);\n\t\t\t\tconsole.log('TreePage UseEffect - ', imgUrls);\n\t\t\t\tif (imgUrls) {\n\t\t\t\t\tsetImageUrls(imgUrls);\n\t\t\t\t}\n\t\t\t\tsetIsLoading(false);\n\t\t\t};\n\n\t\t\tif (isLoading) {\n\t\t\t\tgetImageUrls(treesRef, id);\n\t\t\t}\n\t\t},\n\t\t[ isLoading, id ]\n\t);\n\n\tif (isLoading) {\n\t\treturn <div>Loading</div>;\n\t}\n\n\tconst displayImages = (imageUrls) => {\n\t\tif (imageUrls.primary === '') return null;\n\t\telse {\n\t\t\treturn <Carousel imageUrls={[ imageUrls.primary, ...imageUrls.album ]} />;\n\t\t}\n\t};\n\n\tconst treeFieldLabels = [\n\t\t{\n\t\t\tfield : 'common_name',\n\t\t\tlabel : 'Common Name',\n\t\t\tvalue : tree.common_name\n\t\t},\n\t\t{\n\t\t\tfield : 'scientific_name',\n\t\t\tlabel : 'Scientific Name',\n\t\t\tvalue : tree.scientifc_name && <i>{tree.scientific_name}</i>\n\t\t},\n\t\t{ field: 'height', label: 'Height (ft.)', value: tree.height },\n\t\t{ field: 'dsh', label: 'DSH (in.)', value: tree.dsh },\n\t\t{ field: 'leaf_type', label: 'Leaf Type', value: tree.leaf_type },\n\t\t{\n\t\t\tfield : 'fruit_bearing',\n\t\t\tlabel : 'Fruit Bearing',\n\t\t\tvalue : tree.fruit_bearing && 'Yes'\n\t\t},\n\t\t{\n\t\t\tfield : 'geolocation',\n\t\t\tlabel : 'Coordinates',\n\t\t\tvalue : `(${tree.geolocation.y}, ${tree.geolocation.x})`\n\t\t}\n\t];\n\n\treturn (\n\t\t<Grid container direction=\"column\">\n\t\t\t<Grid item xs={12}>\n\t\t\t\t{displayImages(imageUrls)}\n\t\t\t</Grid>\n\t\t\t<Grid className={classes.innerContent} container item xs={12} alignItems=\"flex-start\">\n\t\t\t\t<Grid container item xs={12} md={6}>\n\t\t\t\t\t<Grid container item xs={12} wrap=\"nowrap\">\n\t\t\t\t\t\t<Typography variant=\"h3\" gutterBottom>\n\t\t\t\t\t\t\t{tree.name}\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t<FavoriteIconBtn treeId={tree.id} />\n\t\t\t\t\t\t\t{uid === tree.creator && <EditIconBtn type={'trees'} id={tree.id} />}\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t{tree.description && (\n\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t<Typography gutterBottom style={{ paddingRight: 10, whiteSpace: 'pre-line' }}>\n\t\t\t\t\t\t\t\t{tree.description}\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t)}\n\t\t\t\t\t<Grid container item>\n\t\t\t\t\t\t<TableContainer className={classes.tableContainer}>\n\t\t\t\t\t\t\t<Table aria-label=\"tree details\">\n\t\t\t\t\t\t\t\t<TableBody>\n\t\t\t\t\t\t\t\t\t{treeFieldLabels.map((item, idx) => {\n\t\t\t\t\t\t\t\t\t\treturn item.value ? (\n\t\t\t\t\t\t\t\t\t\t\t<TableRow key={item.label}>\n\t\t\t\t\t\t\t\t\t\t\t\t<TableCell>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<b>{item.label}</b>\n\t\t\t\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t\t\t\t<TableCell>{item.value}</TableCell>\n\t\t\t\t\t\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t\t\t\t\t\t) : null;\n\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t</TableBody>\n\t\t\t\t\t\t\t</Table>\n\t\t\t\t\t\t</TableContainer>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item xs={12} md={6}>\n\t\t\t\t\t<Paper elevation={3}>\n\t\t\t\t\t\t<LeafletMap\n\t\t\t\t\t\t\ttrees={[ tree ]}\n\t\t\t\t\t\t\tmapCenter={[ tree.geolocation.y, tree.geolocation.x ]}\n\t\t\t\t\t\t\tallowWheelZoom={false}\n\t\t\t\t\t\t\tuseSearchComponent={false}\n\t\t\t\t\t\t\tsmall={true}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Paper>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item xs={12} style={{ marginTop: 15 }}>\n\t\t\t\t\t<CommentsContainer type=\"trees\" id={tree.id} isCreatorOrModerator={isCreator} />\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t</Grid>\n\t);\n}\nexport default TreePage;\n","import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useHistory, useParams } from 'react-router-dom';\n\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport Button from '@material-ui/core/Button';\n\nimport TreeFormBasicFields from './TreeFormBasicFields';\nimport SelectCoordinates from '../leafletMap/SelectCoordinates';\nimport ImagesInput from '../imageHandling/ImagesInput';\nimport { updateTree, deleteTree } from '../actions/trees';\nimport { removeFromSavedTrees } from '../actions/currUser';\n\nconst useStyles = makeStyles({\n\tinnerContent : {\n\t\tpadding : 20\n\t},\n\tform         : {\n\t\tdisplay       : 'flex',\n\t\tflexDirection : 'column',\n\t\t'& div'       : {\n\t\t\tmarginBottom : 10\n\t\t}\n\t}\n});\n\nfunction EditTree() {\n\tconsole.log('EditTree - start');\n\tconst classes = useStyles();\n\tconst theme = useTheme();\n\tconst { id } = useParams();\n\tconst dispatch = useDispatch();\n\tconst [ action, setAction ] = useState(null);\n\tconst status = useSelector((st) => st.trees.status);\n\tconst tree = useSelector((st) => st.trees.entities[id]);\n\tconst history = useHistory();\n\n\t//Check if there was a successful action dispatched. If there was,\n\t//push to appropriate path depending on action set in state.\n\n\tif (status === 'success') {\n\t\tif (action === 'delete') history.push('/trees');\n\t\tif (action === 'update') history.push(`/trees/${id}`);\n\t}\n\n\tconst INITIAL_TREE_FORM_DATA =\n\t\ttree !== undefined\n\t\t\t? {\n\t\t\t\t\tname            : tree.name,\n\t\t\t\t\tdescription     : tree.description || '',\n\t\t\t\t\tcommon_name     : tree.common_name || '',\n\t\t\t\t\tscientific_name : tree.scientific_name || '',\n\t\t\t\t\theight          : tree.height || '',\n\t\t\t\t\tdsh             : tree.dsh || '',\n\t\t\t\t\tleaf_type       : tree.leaf_type || '',\n\t\t\t\t\tfruit_bearing   : tree.fruit_bearing || false\n\t\t\t\t}\n\t\t\t: null;\n\tconst [ treeFormData, setTreeFormData ] = useState(INITIAL_TREE_FORM_DATA);\n\tconst [ coordinates, setCoordinates ] = useState({\n\t\tlat : tree !== undefined ? tree.geolocation.y : null,\n\t\tlng : tree !== undefined ? tree.geolocation.x : null\n\t});\n\tconst [ imageFiles, setImageFiles ] = useState([]);\n\n\tconst handleTreeFormChange = (data) => {\n\t\tlet { name, value } = data;\n\t\tif (name === 'fruit_bearing') {\n\t\t\tvalue = data.checked;\n\t\t}\n\n\t\tsetTreeFormData((fData) => ({\n\t\t\t...fData,\n\t\t\t[name] : value\n\t\t}));\n\t};\n\n\tconst handleCoordinatesChange = (data) => {\n\t\t// console.log('EditTree - handleCoordinatesChange', data);\n\t\tconst { name, value } = data;\n\t\tsetCoordinates((fData) => ({\n\t\t\t...fData,\n\t\t\t[name] : value\n\t\t}));\n\t};\n\n\tconst handleMapCoordinatesChange = (coords) => {\n\t\t// console.log('EditTree - handleMapCoordinatesChange', coords);\n\t\tsetCoordinates(coords);\n\t};\n\n\tconst handleImageFilesChange = (files) => {\n\t\t// console.log('EditTree - handleImageFilesChange', files);\n\t\tsetImageFiles(files);\n\t};\n\n\t// On form submit, convert data to type expected by server\n\t// and make POST request to edit tree\n\tconst handleSubmit = async (evt) => {\n\t\tevt.preventDefault();\n\n\t\tlet editTree = {\n\t\t\t...treeFormData,\n\t\t\tgeolocation : {\n\t\t\t\tlatitude  : parseFloat(coordinates.lat),\n\t\t\t\tlongitude : parseFloat(coordinates.lng)\n\t\t\t},\n\t\t\theight      : treeFormData.height || null,\n\t\t\tdsh         : treeFormData.dsh || null\n\t\t};\n\n\t\tsetAction('update');\n\t\tdispatch(updateTree(id, editTree, imageFiles));\n\t};\n\n\tconst handleDelete = async () => {\n\t\tsetAction('delete');\n\t\tdispatch(removeFromSavedTrees(tree.creator, id));\n\t\tdispatch(deleteTree(id));\n\t};\n\n\tconst handleCancel = () => {\n\t\thistory.push(`/trees/${id}`);\n\t};\n\n\treturn (\n\t\t<div className={classes.innerContent}>\n\t\t\t<Typography variant=\"h4\" gutterBottom>\n\t\t\t\tEdit Tree\n\t\t\t</Typography>\n\t\t\t<form onSubmit={handleSubmit} className={classes.form}>\n\t\t\t\t<TreeFormBasicFields edit={true} formData={treeFormData} onFormChange={handleTreeFormChange} />\n\t\t\t\t<Typography variant=\"h5\" gutterBottom>\n\t\t\t\t\tTree Location\n\t\t\t\t</Typography>\n\t\t\t\t<SelectCoordinates\n\t\t\t\t\tformData={coordinates}\n\t\t\t\t\tonCoordinatesChange={handleCoordinatesChange}\n\t\t\t\t\tonMapCoordinatesChange={handleMapCoordinatesChange}\n\t\t\t\t/>\n\t\t\t\t<Divider variant=\"middle\" />\n\t\t\t\t<div>\n\t\t\t\t\t<Typography variant=\"h5\" gutterBottom>\n\t\t\t\t\t\tEdit Images\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<Typography gutterBottom>\n\t\t\t\t\t\tIgnore this section if you want to leave them the same. Any images added will overwrite\n\t\t\t\t\t\tpreviously uploaded images.\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<ImagesInput onImageFilesChange={handleImageFilesChange} />\n\t\t\t\t\t<Divider variant=\"middle\" />\n\t\t\t\t</div>\n\t\t\t\t<div style={{ display: 'flex', justifyContent: 'space-between' }}>\n\t\t\t\t\t<Button color=\"secondary\" variant=\"contained\" onClick={handleCancel}>\n\t\t\t\t\t\tGo Back\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tstyle={{ backgroundColor: theme.palette.error.main, color: theme.palette.error.contrastText }}\n\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\tonClick={handleDelete}\n\t\t\t\t\t>\n\t\t\t\t\t\tDelete Tree\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Button color=\"primary\" variant=\"contained\" type=\"submit\">\n\t\t\t\t\t\tEdit Tree\n\t\t\t\t\t</Button>\n\t\t\t\t</div>\n\t\t\t</form>\n\t\t</div>\n\t);\n}\nexport default EditTree;\n","import React, { useState, useRef, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\n\nimport Typography from '@material-ui/core/Typography';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\n\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Slider from '@material-ui/core/Slider';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Button from '@material-ui/core/Button';\n\nimport useStyles from '../styles/formStyle';\nimport { errorDisplay } from '../helpers/formErrorDisplay';\n\nfunction GroupFormBasicFields({ formData, onFormChange, edit = false }) {\n\tconst classes = useStyles();\n\tconst groupError = useSelector((st) => st.groups.error);\n\tconsole.log(groupError);\n\tconst handleChange = (evt) => {\n\t\tonFormChange(evt.target);\n\t};\n\n\tconst handleErrorDisplay = (field) => {\n\t\treturn errorDisplay(field, groupError);\n\t};\n\n\treturn (\n\t\t<Grid container className={classes.form}>\n\t\t\t<TextField\n\t\t\t\tid=\"name\"\n\t\t\t\tname=\"name\"\n\t\t\t\tlabel=\"Group Name\"\n\t\t\t\tplaceholder=\"Clallam Tree Alliance\"\n\t\t\t\tonChange={handleChange}\n\t\t\t\tvalue={formData.name}\n\t\t\t\trequired={!edit}\n\t\t\t\terror={Boolean(handleErrorDisplay('group_name'))}\n\t\t\t\thelperText={handleErrorDisplay('group_name')}\n\t\t\t/>\n\t\t\t<TextField\n\t\t\t\tid=\"description\"\n\t\t\t\tname=\"description\"\n\t\t\t\tlabel=\"Description\"\n\t\t\t\tmultiline\n\t\t\t\tinputProps={{ maxLength: 2000 }}\n\t\t\t\tplaceholder=\"What is the main purpose of your group?\"\n\t\t\t\tonChange={handleChange}\n\t\t\t\tvalue={formData.description}\n\t\t\t/>\n\n\t\t\t{/* TODO add in the future */}\n\t\t\t{/* <FormControlLabel\n\t\t\t\tcontrol={\n\t\t\t\t\t<Checkbox\n\t\t\t\t\t\tid=\"is_public\"\n\t\t\t\t\t\tname=\"is_public\"\n\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\tchecked={formData.is_public}\n\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t/>\n\t\t\t\t}\n\t\t\t\tlabel=\"Do you want this group to be visable for others to join?\"\n\t\t\t/> */}\n\t\t</Grid>\n\t);\n}\nexport default GroupFormBasicFields;\n","import React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\n\nimport Divider from '@material-ui/core/Divider';\nimport Button from '@material-ui/core/Button';\n\nimport GroupFormBasicFields from './GroupFormBasicFields';\n\nimport ImagesInput from '../imageHandling/ImagesInput';\nimport { addToFollowedGroups } from '../actions/currUser';\nimport { createGroup } from '../actions/groups';\n\nconst useStyles = makeStyles({\n\tinnerContent : {\n\t\tpadding : 20\n\t},\n\tform         : {\n\t\tdisplay       : 'flex',\n\t\tflexDirection : 'column',\n\t\t'& div'       : {\n\t\t\tmarginBottom : 10\n\t\t}\n\t}\n});\n\nfunction CreateNewGroup() {\n\tconst classes = useStyles();\n\tconst dispatch = useDispatch();\n\tconst history = useHistory();\n\tconst userId = useSelector((st) => st.currUser.uid);\n\tconst INITIAL_GROUP_FORM_DATA = {\n\t\tname        : '',\n\t\tdescription : '',\n\t\tis_public   : true\n\t};\n\tconst [ groupFormData, setGroupFormData ] = useState(INITIAL_GROUP_FORM_DATA);\n\tconst [ imageFiles, setImageFiles ] = useState([]);\n\n\tconst handleGroupFormChange = (data) => {\n\t\tlet { name, value } = data;\n\t\tif (name === 'is_public') {\n\t\t\tvalue = data.checked;\n\t\t}\n\n\t\tsetGroupFormData((fData) => ({\n\t\t\t...fData,\n\t\t\t[name] : value\n\t\t}));\n\t};\n\n\tconst handleImageFilesChange = (files) => {\n\t\tconsole.log('handleImageFilesChange', files);\n\t\tsetImageFiles(files);\n\t};\n\n\t// On form submit, convert data to type expected by server\n\t// and make POST request to create new group\n\t// Add group to creator's followed groups\n\tconst handleSubmit = async (evt) => {\n\t\tevt.preventDefault();\n\n\t\tlet newGroup = { ...groupFormData };\n\n\t\tfor (let field in newGroup) {\n\t\t\tif (newGroup[field] === '') {\n\t\t\t\tdelete newGroup[field];\n\t\t\t}\n\t\t}\n\n\t\tconsole.log('new group', newGroup);\n\t\tconst groupId = await dispatch(createGroup(newGroup, imageFiles));\n\t\tdispatch(addToFollowedGroups(userId, groupId, true));\n\n\t\tif (groupId) {\n\t\t\tconsole.log('CreateNewGroup - groupId', groupId);\n\t\t\thistory.push(`/groups/${groupId}`);\n\t\t}\n\t};\n\n\treturn (\n\t\t<div className={classes.innerContent}>\n\t\t\t<Typography variant=\"h4\" gutterBottom>\n\t\t\t\tCreate New Group\n\t\t\t</Typography>\n\t\t\t<form onSubmit={handleSubmit} className={classes.form}>\n\t\t\t\t<GroupFormBasicFields formData={groupFormData} onFormChange={handleGroupFormChange} />\n\t\t\t\t<Divider variant=\"middle\" style={{ marginTop: 15, marginBottom: 15 }} />\n\t\t\t\t<div>\n\t\t\t\t\t<Typography variant=\"h5\" gutterBottom>\n\t\t\t\t\t\tGroup Header Image\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<ImagesInput allowMultiple={false} onImageFilesChange={handleImageFilesChange} />\n\t\t\t\t\t<Divider variant=\"middle\" style={{ marginBottom: 15 }} />\n\t\t\t\t</div>\n\n\t\t\t\t<Button color=\"secondary\" variant=\"contained\" type=\"submit\">\n\t\t\t\t\tCreate Group\n\t\t\t\t</Button>\n\t\t\t</form>\n\t\t</div>\n\t);\n}\nexport default CreateNewGroup;\n","export default __webpack_public_path__ + \"static/media/profile-page-header.9539a791.jpg\";","import Grid from '@material-ui/core/Grid';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport profileHeaderImg from '../images/profile-page-header.jpg';\n\nconst useStyles = makeStyles((theme) => ({\n\theading             : {\n\t\tfontSize   : theme.typography.pxToRem(15),\n\t\tfontWeight : theme.typography.fontWeightRegular\n\t},\n\theaderImgBackground : {\n\t\theight             : 300,\n\t\tbackgroundImage    : `url(${profileHeaderImg})`,\n\t\tbackgroundRepeat   : 'no-repeat',\n\t\tbackgroundPosition : 'center',\n\t\tbackgroundSize     : 'cover',\n\t\tbackgroundColor    : theme.palette.secondary.dark\n\t}\n}));\n\n/**\n * Shows the current logged in user's profile. Allows user to edit\n * their information or delete their account.\n * \n * \n * If this is changed to allow users to view each other's profiles\n * in the future, then change getting user info from store and make\n * a request to the API for it. \n */\nfunction CurrUserInfo() {\n\tconst theme = useTheme();\n\tconst classes = useStyles(theme);\n\n\tconst history = useHistory();\n\n\tconst { uid, username, email, img_url, created_at, is_admin, savedTreeIds, groupIds } = useSelector(\n\t\t(st) => st.currUser\n\t);\n\n\tconst handleEdit = (evt) => {\n\t\thistory.push(`/users/${username}/edit`);\n\t};\n\n\treturn (\n\t\t<Grid container item xs={12}>\n\t\t\t<Grid container direction=\"column\">\n\t\t\t\t<Typography variant=\"h5\">User Info</Typography>\n\t\t\t\t<Typography variant=\"subtitle1\">Username: {username}</Typography>\n\t\t\t\t<Typography variant=\"subtitle1\">Email: {email}</Typography>\n\t\t\t\t<Typography variant=\"subtitle1\">\n\t\t\t\t\tJoined:{' '}\n\t\t\t\t\t{new Date(created_at).toLocaleDateString('en-gb', {\n\t\t\t\t\t\tyear  : 'numeric',\n\t\t\t\t\t\tmonth : 'long',\n\t\t\t\t\t\tday   : 'numeric'\n\t\t\t\t\t})}\n\t\t\t\t</Typography>\n\t\t\t</Grid>\n\t\t</Grid>\n\t);\n}\nexport default CurrUserInfo;\n","import React from 'react';\nimport { Link as RouterLink, useParams, useHistory } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\n\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport Link from '@material-ui/core/Link';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Paper from '@material-ui/core/Paper';\n\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Hidden from '@material-ui/core/Hidden';\nimport Button from '@material-ui/core/Button';\nimport Divider from '@material-ui/core/Divider';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\n\nimport profileHeaderImg from '../images/profile-page-header.jpg';\nimport CurrUserInfo from './CurrUserInfo';\n\nconst useStyles = makeStyles((theme) => ({\n\taccordianContainer  : {\n\t\twidth : '100%'\n\t},\n\theading             : {\n\t\tfontSize   : theme.typography.pxToRem(15),\n\t\tfontWeight : theme.typography.fontWeightRegular\n\t},\n\theaderImgBackground : {\n\t\theight             : 300,\n\t\tbackgroundImage    : `url(${profileHeaderImg})`,\n\t\tbackgroundRepeat   : 'no-repeat',\n\t\tbackgroundPosition : 'center',\n\t\tbackgroundSize     : 'cover',\n\t\tbackgroundColor    : theme.palette.secondary.dark\n\t},\n\tinnerContent        : {\n\t\tpadding : 20\n\t},\n\tdivider             : {\n\t\twidth        : '90%',\n\t\tmarginTop    : 10,\n\t\tmarginBottom : 10\n\t}\n}));\n\n/**\n * Shows the current logged in user's profile. Allows use to edit\n * their information or delete their account.\n * \n * \n * If this is changed to allow users to view each other's profiles\n * in the future, then change getting user info from store and make\n * a request to the API for it. \n */\nfunction UserProfilePage() {\n\tconst theme = useTheme();\n\tconst classes = useStyles(theme);\n\n\tconst history = useHistory();\n\n\tconst { uid, username, email, img_url, created_at, is_admin, savedTreeIds, followedGroupIds } = useSelector(\n\t\t(st) => st.currUser\n\t);\n\tconst favTrees = useSelector((st) =>\n\t\tObject.values(st.trees.entities).filter((tree) => savedTreeIds.includes(tree.id))\n\t);\n\tconst userCreatedTrees = useSelector((st) =>\n\t\tObject.values(st.trees.entities).filter((tree) => tree.creator === uid)\n\t);\n\tconst followedGroups = useSelector((st) =>\n\t\tObject.values(st.groups.entities).filter((group) => followedGroupIds.includes(group.id))\n\t);\n\tconst userCreatedGroups = useSelector((st) =>\n\t\tObject.values(st.groups.entities).filter((group) => group.creator === uid)\n\t);\n\n\t// const favTrees = Object.values(userTrees).filter((tree) => savedTreeIds.includes(tree.id));\n\tconst favGroups = useSelector((st) => st.groups.entities);\n\n\tconst pushToEditForm = () => {\n\t\thistory.push(`/users/${username}/edit`);\n\t};\n\n\treturn (\n\t\t<Grid container direction=\"column\">\n\t\t\t<Grid className={classes.headerImgBackground} container justify=\"center\" alignItems=\"flex-end\" item xs={12}>\n\t\t\t\t<div style={{ height: 300 }} />\n\t\t\t</Grid>\n\t\t\t<Grid container item className={classes.innerContent}>\n\t\t\t\t<Grid container item>\n\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t<CurrUserInfo />\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t<Button color=\"secondary\" variant=\"outlined\" onClick={pushToEditForm}>\n\t\t\t\t\t\t\tEdit User\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\n\t\t\t\t<Divider className={classes.divider} />\n\n\t\t\t\t<Grid container item xs={12}>\n\t\t\t\t\t{/* User Created Trees */}\n\t\t\t\t\t<Grid container item xs={12} md={6} lg={3} direction=\"column\">\n\t\t\t\t\t\t<Box mr={2}>\n\t\t\t\t\t\t\t<Typography variant=\"h5\">My Trees</Typography>\n\t\t\t\t\t\t</Box>\n\n\t\t\t\t\t\t<List dense={true}>\n\t\t\t\t\t\t\t{userCreatedTrees.length > 0 ? (\n\t\t\t\t\t\t\t\tuserCreatedTrees.map((tree) => (\n\t\t\t\t\t\t\t\t\t<ListItem\n\t\t\t\t\t\t\t\t\t\tbutton\n\t\t\t\t\t\t\t\t\t\tcomponent={RouterLink}\n\t\t\t\t\t\t\t\t\t\tto={`/trees/${tree.id}`}\n\t\t\t\t\t\t\t\t\t\tkey={`tree-${tree.id}`}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<ListItemText>{tree.name}</ListItemText>\n\t\t\t\t\t\t\t\t\t</ListItem>\n\t\t\t\t\t\t\t\t))\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<Grid>\n\t\t\t\t\t\t\t\t\t<Typography>No Created Trees</Typography>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</List>\n\t\t\t\t\t</Grid>\n\n\t\t\t\t\t<Hidden smUp>\n\t\t\t\t\t\t<Divider className={classes.divider} />\n\t\t\t\t\t</Hidden>\n\n\t\t\t\t\t{/* User Favorite Trees */}\n\t\t\t\t\t<Grid container item xs={12} md={6} lg={3} direction=\"column\">\n\t\t\t\t\t\t<Box mr={2}>\n\t\t\t\t\t\t\t<Typography variant=\"h5\">Favorite Trees</Typography>\n\t\t\t\t\t\t</Box>\n\n\t\t\t\t\t\t<List dense={true}>\n\t\t\t\t\t\t\t{favTrees.length > 0 ? (\n\t\t\t\t\t\t\t\tfavTrees.map((tree) => (\n\t\t\t\t\t\t\t\t\t<ListItem\n\t\t\t\t\t\t\t\t\t\tbutton\n\t\t\t\t\t\t\t\t\t\tcomponent={RouterLink}\n\t\t\t\t\t\t\t\t\t\tto={`/trees/${tree.id}`}\n\t\t\t\t\t\t\t\t\t\tkey={`tree-${tree.id}`}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<ListItemText>{tree.name}</ListItemText>\n\t\t\t\t\t\t\t\t\t</ListItem>\n\t\t\t\t\t\t\t\t))\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<Grid>\n\t\t\t\t\t\t\t\t\t<Typography>No Favorite Trees</Typography>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</List>\n\t\t\t\t\t</Grid>\n\n\t\t\t\t\t<Hidden lgUp>\n\t\t\t\t\t\t<Divider className={classes.divider} />\n\t\t\t\t\t</Hidden>\n\n\t\t\t\t\t{/* User Created Groups */}\n\t\t\t\t\t<Grid container item xs={12} md={6} lg={3} direction=\"column\">\n\t\t\t\t\t\t<Box mr={2}>\n\t\t\t\t\t\t\t<Typography variant=\"h5\">My Groups</Typography>\n\t\t\t\t\t\t</Box>\n\n\t\t\t\t\t\t<List dense={true}>\n\t\t\t\t\t\t\t{userCreatedGroups.length > 0 ? (\n\t\t\t\t\t\t\t\tuserCreatedGroups.map((group) => (\n\t\t\t\t\t\t\t\t\t<ListItem\n\t\t\t\t\t\t\t\t\t\tbutton\n\t\t\t\t\t\t\t\t\t\tcomponent={RouterLink}\n\t\t\t\t\t\t\t\t\t\tto={`/groups/${group.id}`}\n\t\t\t\t\t\t\t\t\t\tkey={`group-${group.id}`}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<ListItemText>{group.name}</ListItemText>\n\t\t\t\t\t\t\t\t\t</ListItem>\n\t\t\t\t\t\t\t\t))\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<Grid>\n\t\t\t\t\t\t\t\t\t<Typography>No Created Groups</Typography>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</List>\n\t\t\t\t\t</Grid>\n\n\t\t\t\t\t<Hidden smUp>\n\t\t\t\t\t\t<Divider className={classes.divider} />\n\t\t\t\t\t</Hidden>\n\n\t\t\t\t\t{/* User Followed Groups */}\n\t\t\t\t\t<Grid container item xs={12} md={6} lg={3} direction=\"column\">\n\t\t\t\t\t\t<Box mr={2}>\n\t\t\t\t\t\t\t<Typography variant=\"h5\">Followed Groups</Typography>\n\t\t\t\t\t\t</Box>\n\n\t\t\t\t\t\t<List dense={true}>\n\t\t\t\t\t\t\t{followedGroups.length > 0 ? (\n\t\t\t\t\t\t\t\tfollowedGroups.map((group) => (\n\t\t\t\t\t\t\t\t\t<ListItem\n\t\t\t\t\t\t\t\t\t\tbutton\n\t\t\t\t\t\t\t\t\t\tcomponent={RouterLink}\n\t\t\t\t\t\t\t\t\t\tto={`/groups/${group.id}`}\n\t\t\t\t\t\t\t\t\t\tkey={`group-${group.id}`}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<ListItemText>{group.name}</ListItemText>\n\t\t\t\t\t\t\t\t\t</ListItem>\n\t\t\t\t\t\t\t\t))\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<Grid>\n\t\t\t\t\t\t\t\t\t<Typography>No Followed Groups</Typography>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</List>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t</Grid>\n\t);\n}\nexport default UserProfilePage;\n","import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { Group as GroupIcon, PeopleOutline as PeopleOutlineIcon } from '@material-ui/icons';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { useTheme } from '@material-ui/core/styles';\n\nimport { addToFollowedGroups, removeFromFollowedGroups } from '../actions/currUser';\n\nfunction FollowGroupIconBtn({ groupId }) {\n\tconst theme = useTheme();\n\tconst [ isFollowed, setIsFollowed ] = useState(null);\n\tconst userId = useSelector((st) => st.currUser.uid);\n\tconst followedGroupIds = useSelector((st) => st.currUser.followedGroupIds);\n\tconst dispatch = useDispatch();\n\n\tuseEffect(\n\t\t() => {\n\t\t\tconst checkFollowStatus = (groupId, followedGroupIds) => {\n\t\t\t\tsetIsFollowed(followedGroupIds.includes(groupId));\n\t\t\t};\n\t\t\tcheckFollowStatus(groupId, followedGroupIds);\n\t\t},\n\t\t[ followedGroupIds, groupId ]\n\t);\n\n\tconst handleClick = async () => {\n\t\tif (isFollowed) {\n\t\t\tdispatch(removeFromFollowedGroups(userId, groupId));\n\t\t}\n\t\telse {\n\t\t\tdispatch(addToFollowedGroups(userId, groupId));\n\t\t}\n\t\tsetIsFollowed(!isFollowed);\n\t};\n\n\treturn (\n\t\t<Tooltip title={isFollowed ? 'Unfollow' : 'Follow'}>\n\t\t\t<IconButton onClick={handleClick}>\n\t\t\t\t{isFollowed ? (\n\t\t\t\t\t<GroupIcon htmlColor={theme.palette.primary.light} />\n\t\t\t\t) : (\n\t\t\t\t\t<PeopleOutlineIcon htmlColor={theme.palette.primary.light} />\n\t\t\t\t)}\n\t\t\t</IconButton>\n\t\t</Tooltip>\n\t);\n}\nexport default FollowGroupIconBtn;\n","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport TreeList from '../tree/TreeList';\nimport { getTree } from '../actions/trees';\n\nfunction GroupTreeEditTable({ group, groupTrees }) {\n\tconsole.log('GroupTreeEditTable - Start', group, groupTrees);\n\tconst dispatch = useDispatch();\n\n\tconst currUserFavTreeIds = useSelector((st) => st.currUser.savedTreeIds);\n\n\tconsole.log('GroupTreeEditTable - currUserFavTreeIds', currUserFavTreeIds);\n\n\t// Get any trees that are already in store\n\tlet userFavTrees = useSelector((st) => currUserFavTreeIds.map((id) => st.trees.entities[id]));\n\n\t// Get array of any tree ids that were not already in store\n\tconst remainingSelectionTreeIds = currUserFavTreeIds.filter(\n\t\t(id) => !userFavTrees.map((tree) => tree.id).includes(id)\n\t);\n\t// console.log('GroupTreeEditTable userFavTrees', userFavTrees);\n\t// console.log('GroupTreeEditTable remainingSelectionTrees', remainingSelectionTreeIds);\n\n\t// Get any other user fav or group tree that is not in store from API\n\tuseEffect(() => {\n\t\tremainingSelectionTreeIds.forEach((id) => {\n\t\t\tconst tree = dispatch(getTree(id));\n\t\t\tuserFavTrees.push(tree);\n\t\t});\n\t}, []);\n\tconst treesSet = new Set([ ...groupTrees, ...userFavTrees ]);\n\t// console.log('GroupTreeEditTable treesSet', treesSet);\n\n\treturn <TreeList trees={[ ...treesSet ]} group={group} />;\n}\nexport default GroupTreeEditTable;\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\n\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\n\nimport { addModToGroup, removeMemberFromGroup, removeModFromGroup } from '../actions/groups';\n\nconst useStyles = makeStyles((theme) => ({\n\tbutton   : {\n\t\tmarginTop    : 5,\n\t\tmarginBottom : 5\n\t},\n\tuserInfo : {\n\t\tdisplay    : 'flex',\n\t\talignItems : 'center'\n\t},\n\tlistItem : {\n\t\tdisplay                      : 'flex',\n\t\tflexDirection                : 'column',\n\t\talignItems                   : 'flex-start',\n\n\t\t[theme.breakpoints.up('md')]: {\n\t\t\tdisplay        : 'flex',\n\t\t\tflexDirection  : 'row',\n\t\t\tjustifyContent : 'space-between'\n\t\t}\n\t}\n\t// style={{ display: 'flex', flexDirection: 'column', alignItems: 'flex-start' }}\n}));\n\n/**\n * List of provided array of users. Showing user pic/icon, Name, and \n * optional additions such as add/remove user button.\n */\nfunction UserList({ isCreator, isModerator, groupId, users, type }) {\n\tconst theme = useTheme();\n\tconst dispatch = useDispatch();\n\tconst classes = useStyles(theme);\n\tconst isAuthorized = useSelector((st) => st.auth.authenticated);\n\n\tconst actionBtns = (type, userId) => {\n\t\tif (!isAuthorized) return null;\n\t\tif (isCreator && type === 'mods') {\n\t\t\treturn (\n\t\t\t\t<Button\n\t\t\t\t\tclassName={classes.button}\n\t\t\t\t\tsize=\"small\"\n\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\tonClick={() => dispatch(removeModFromGroup(groupId, userId))}\n\t\t\t\t>\n\t\t\t\t\tRemove As Mod\n\t\t\t\t</Button>\n\t\t\t);\n\t\t}\n\t\telse if (type === 'members')\n\t\t\treturn (\n\t\t\t\t<div>\n\t\t\t\t\t{isModerator && (\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tclassName={classes.button}\n\t\t\t\t\t\t\tstyle={{ marginRight: 5 }}\n\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\tonClick={() => dispatch(removeMemberFromGroup(groupId, userId))}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tRemove Member\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t)}\n\t\t\t\t\t{isCreator && (\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tclassName={classes.button}\n\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\tonClick={() => dispatch(addModToGroup(groupId, userId))}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tAdd As Mod\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t);\n\t\telse return null;\n\t};\n\n\treturn (\n\t\t<List dense={true}>\n\t\t\t{users.map((user) => (\n\t\t\t\t<ListItem key={user.username} className={classes.listItem} divider>\n\t\t\t\t\t<div className={classes.userInfo}>\n\t\t\t\t\t\t<ListItemAvatar>\n\t\t\t\t\t\t\t<Avatar>{user.username[0]}</Avatar>\n\t\t\t\t\t\t</ListItemAvatar>\n\t\t\t\t\t\t<ListItemText primary={user.username} />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div style={{ display: 'flex' }}>{actionBtns(type, user.user_id)}</div>\n\t\t\t\t</ListItem>\n\t\t\t))}\n\t\t</List>\n\t);\n}\nexport default UserList;\n","import React, { useState, useRef, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useParams } from 'react-router-dom';\n\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Paper from '@material-ui/core/Paper';\n\nimport LeafletMap from '../leafletMap/LeafletMap';\nimport TreeList from '../tree/TreeList';\nimport UserList from './UserList';\nimport GroupTreeEditTable from './GroupTreeEditTable';\nimport { getTreeFromApi } from '../actions/trees';\n\nconst useStyles = makeStyles((theme) => {\n\treturn {\n\t\ttabPanel : {\n\t\t\tflexGrow        : 1,\n\t\t\tbackgroundColor : 'white',\n\t\t\t// backgroundColor : theme.palette.background.paper,\n\t\t\twidth           : '100%'\n\t\t},\n\t\tbackdrop : {\n\t\t\tzIndex : theme.zIndex.drawer + 1,\n\t\t\tcolor  : '#fff'\n\t\t}\n\t};\n});\n\nfunction GroupMembersPanel({ isCreator, isModerator, group }) {\n\tconsole.log('GroupMembersPanel - Start');\n\tconst theme = useTheme();\n\tconst classes = useStyles(theme);\n\tconst dispatch = useDispatch();\n\tconst groupStatus = useSelector((st) => st.groups.status);\n\n\tconsole.log('GroupMembersPanel', group);\n\n\tconst admin = group.members.find((member) => member.user_id === group.creator);\n\n\tconst moderators = group.members.filter(\n\t\t(member) => member.is_moderator === true && member.user_id !== group.creator\n\t);\n\n\tconst members = group.members.filter((member) => member.is_moderator === false);\n\n\tconsole.log('GroupMembersPanel', admin, Boolean(moderators), members);\n\n\t//add remove moderator\n\treturn (\n\t\t<div>\n\t\t\t<Typography gutterBottom variant=\"h6\">\n\t\t\t\tCreator\n\t\t\t</Typography>\n\t\t\t<UserList groupId={group.id} users={[ admin ]} />\n\n\t\t\t<Typography gutterBottom variant=\"h6\">\n\t\t\t\tModerators\n\t\t\t</Typography>\n\t\t\t{moderators.length ? (\n\t\t\t\t<UserList\n\t\t\t\t\tisCreator={isCreator}\n\t\t\t\t\tisModerator={isModerator}\n\t\t\t\t\tgroupId={group.id}\n\t\t\t\t\tusers={moderators}\n\t\t\t\t\ttype={'mods'}\n\t\t\t\t/>\n\t\t\t) : (\n\t\t\t\t<Typography gutterBottom>No moderators in this group.</Typography>\n\t\t\t)}\n\n\t\t\t<Typography gutterBottom variant=\"h6\">\n\t\t\t\tMembers\n\t\t\t</Typography>\n\t\t\t{members.length ? (\n\t\t\t\t<UserList\n\t\t\t\t\tisCreator={isCreator}\n\t\t\t\t\tisModerator={isModerator}\n\t\t\t\t\tgroupId={group.id}\n\t\t\t\t\tusers={members}\n\t\t\t\t\ttype={'members'}\n\t\t\t\t/>\n\t\t\t) : (\n\t\t\t\t<Typography gutterBottom>No members in this group.</Typography>\n\t\t\t)}\n\t\t</div>\n\t);\n}\nexport default GroupMembersPanel;\n","import React, { useState, useRef, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useParams } from 'react-router-dom';\n\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Paper from '@material-ui/core/Paper';\n\nimport LeafletMap from '../leafletMap/LeafletMap';\nimport TreeList from '../tree/TreeList';\nimport GroupTreeEditTable from './GroupTreeEditTable';\nimport { getTree } from '../actions/trees';\nimport GroupMembersPanel from './GroupMembersPanel';\n\nconst useStyles = makeStyles((theme) => {\n\treturn {\n\t\ttabPanel : {\n\t\t\tflexGrow        : 1,\n\t\t\tbackgroundColor : 'white',\n\t\t\t// backgroundColor : theme.palette.background.paper,\n\t\t\twidth           : '100%'\n\t\t},\n\t\tbackdrop : {\n\t\t\tzIndex : theme.zIndex.drawer + 1,\n\t\t\tcolor  : '#fff'\n\t\t}\n\t};\n});\n\nfunction TabPanel(props) {\n\tconst { children, value, index, ...other } = props;\n\n\treturn (\n\t\t<div\n\t\t\trole=\"tabpanel\"\n\t\t\thidden={value !== index}\n\t\t\tid={`group-tabpanel-${index}`}\n\t\t\taria-labelledby={`group-tab-${index}`}\n\t\t\t{...other}\n\t\t>\n\t\t\t{value === index && <Box p={3}>{children}</Box>}\n\t\t</div>\n\t);\n}\n\nfunction a11yProps(index) {\n\treturn {\n\t\tid              : `group-tab-${index}`,\n\t\t'aria-controls' : `group-tabpanel-${index}`\n\t};\n}\n\nfunction GroupTabPanel({ group, isCreator, imageUrls }) {\n\tconst theme = useTheme();\n\tconst classes = useStyles(theme);\n\tconst dispatch = useDispatch();\n\tconst [ value, setValue ] = useState(0);\n\tconst [ open, setOpen ] = useState(false);\n\tconst currUserUid = useSelector((st) => st.currUser.uid);\n\n\t// check if currUser is a moderator of this group\n\tconst isModerator = Boolean(\n\t\tgroup.members.find((member) => member.user_id === currUserUid && member.is_moderator === true)\n\t);\n\n\t// Get any group trees that are already in store\n\tlet groupTrees = useSelector((st) => [ ...group.trees ].map((id) => st.trees.entities[id]));\n\n\t// Get array of any group tree ids that were not already in store\n\tconst remainingSelectionTreeIds = group.trees.filter((id) => !groupTrees.map((tree) => tree.id).includes(id));\n\tconsole.log('GroupTapPanal remainingSelectionTree', remainingSelectionTreeIds);\n\n\tconsole.log('GroupTapPanal groupTrees', groupTrees);\n\t// Get any other group tree that is not in store from API\n\tuseEffect(\n\t\t() => {\n\t\t\tremainingSelectionTreeIds.forEach((id) => {\n\t\t\t\tconst tree = dispatch(getTree(id));\n\t\t\t\tgroupTrees.push(tree);\n\t\t\t});\n\t\t},\n\t\t[ dispatch, groupTrees, remainingSelectionTreeIds ]\n\t);\n\n\tconst handleChange = (event, newValue) => {\n\t\tsetValue(newValue);\n\t};\n\n\tconst displayTreeSelection = () => {\n\t\tsetOpen(true);\n\t};\n\tconst closeTreeSelection = (evt) => {\n\t\tsetOpen(false);\n\t};\n\treturn (\n\t\t<div className={classes.tabPanel}>\n\t\t\t<AppBar position=\"static\">\n\t\t\t\t<Tabs value={value} onChange={handleChange} variant=\"fullWidth\" aria-label=\"group tabs\" centered>\n\t\t\t\t\t<Tab label=\"Trees\" {...a11yProps(0)} />\n\t\t\t\t\t<Tab label=\"Album\" {...a11yProps(1)} />\n\t\t\t\t\t<Tab label=\"Members\" {...a11yProps(2)} />\n\t\t\t\t</Tabs>\n\t\t\t</AppBar>\n\t\t\t<TabPanel value={value} index={0}>\n\t\t\t\t<Grid container direction=\"column\">\n\t\t\t\t\t<Grid container item xs={12} justify=\"center\">\n\t\t\t\t\t\t{isModerator && (\n\t\t\t\t\t\t\t<Button color=\"primary\" onClick={displayTreeSelection} style={{ marginBottom: 20 }}>\n\t\t\t\t\t\t\t\tEdit Group Trees\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<Backdrop className={classes.backdrop} open={open} onClick={closeTreeSelection}>\n\t\t\t\t\t\t\t<Box\n\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\tbackgroundColor : 'white',\n\t\t\t\t\t\t\t\t\twidth           : '85vw',\n\t\t\t\t\t\t\t\t\tmaxWidth        : 1500,\n\t\t\t\t\t\t\t\t\theight          : `${120 + Math.min(groupTrees.length, 10) * 52}px`,\n\t\t\t\t\t\t\t\t\tzIndex          : 10,\n\t\t\t\t\t\t\t\t\tcolor           : 'white'\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tonClick={(evt) => {\n\t\t\t\t\t\t\t\t\tevt.stopPropagation();\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<GroupTreeEditTable group={group} groupTrees={groupTrees} />\n\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t</Backdrop>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid container item xs={12} justify=\"center\">\n\t\t\t\t\t\t{groupTrees.length > 0 ? (\n\t\t\t\t\t\t\t<Grid container item xs={12}>\n\t\t\t\t\t\t\t\t<Grid item xs={12} xl={6}>\n\t\t\t\t\t\t\t\t\t<Paper elevation={3}>\n\t\t\t\t\t\t\t\t\t\t<LeafletMap trees={groupTrees} />\n\t\t\t\t\t\t\t\t\t</Paper>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t<Grid container item xs={12} xl={6}>\n\t\t\t\t\t\t\t\t\t<Box\n\t\t\t\t\t\t\t\t\t\tp={2}\n\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\theight : `${120 + Math.min(groupTrees.length, 10) * 52}px`,\n\t\t\t\t\t\t\t\t\t\t\twidth  : '100%'\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<TreeList trees={groupTrees} />\n\t\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<Typography align=\"center\">\n\t\t\t\t\t\t\t\tNo trees within this group yet. Only moderators can edit trees of this group.\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t</TabPanel>\n\t\t\t<TabPanel value={value} index={1}>\n\t\t\t\tAlbum\n\t\t\t</TabPanel>\n\t\t\t<TabPanel value={value} index={2}>\n\t\t\t\t<GroupMembersPanel isCreator={isCreator} isModerator={isModerator} group={group} />\n\t\t\t</TabPanel>\n\t\t</div>\n\t);\n}\nexport default GroupTabPanel;\n","import React, { useState, useRef, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useParams, useHistory } from 'react-router-dom';\n\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Button from '@material-ui/core/Button';\n\nimport { getGroup, getGroups } from '../actions/groups';\nimport SelectLocationMap from '../leafletMap/LeafletMap';\nimport ImagesInput from '../imageHandling/ImagesInput';\nimport Carousel from '../imageHandling/Carousel';\nimport CommentsContainer from '../comment/CommentsContainer';\nimport { groupsRef, downloadImageUrlsFromFirebase } from '../firebase/firebaseStorage';\nimport FollowGroupIconBtn from '../iconBtns/FollowGroupIconBtn';\nimport EditIconBtn from '../iconBtns/EditIconBtn';\nimport LeafletMap from '../leafletMap/LeafletMap';\nimport GroupTabPanel from '../group/GroupTabPanel';\n\nconst useStyles = makeStyles((theme) => {\n\treturn {\n\t\tinnerContent   : {\n\t\t\tpadding : 15\n\t\t},\n\t\ttableContainer : {\n\t\t\tmarginRight : 10\n\t\t}\n\t};\n});\n\nfunction GroupPage() {\n\tconsole.log('GroupPage - start');\n\n\tconst classes = useStyles();\n\tconst history = useHistory();\n\tconst theme = useTheme();\n\tconst { id } = useParams();\n\tconst isAuthenticated = useSelector((st) => st.auth.authenticated);\n\tconst group = useSelector((st) => st.groups.entities[id]);\n\tconst uid = useSelector((st) => st.currUser.uid);\n\tconst error = useSelector((st) => st.groups.error);\n\tconst isCreator = uid === group.creator;\n\tconst isModerator = group.members.find((member) => member.is_moderator === true && member.user_id === uid);\n\n\tconsole.log('GroupPage - group', group);\n\tconst [ isLoading, setIsLoading ] = useState(true);\n\tconst [ imageUrls, setImageUrls ] = useState({\n\t\tprimary : '',\n\t\talbum   : []\n\t});\n\n\tconst dispatch = useDispatch();\n\n\t// Get specific group from API\n\tuseEffect(\n\t\t() => {\n\t\t\tconst getGroupFromApi = async (groupId) => {\n\t\t\t\tdispatch(getGroup(groupId));\n\t\t\t};\n\t\t\tgetGroupFromApi(id);\n\t\t},\n\t\t[ id, error, dispatch, history ]\n\t);\n\n\t// Get Group Images from FirebaseStorage\n\tuseEffect(\n\t\t() => {\n\t\t\tconst getImageUrls = async (collectionRef, id) => {\n\t\t\t\tconst imgUrls = await downloadImageUrlsFromFirebase(collectionRef, id);\n\t\t\t\tconsole.log('imgUrls', imgUrls);\n\t\t\t\tif (imgUrls) {\n\t\t\t\t\tsetImageUrls(imgUrls);\n\t\t\t\t}\n\t\t\t\tsetIsLoading(false);\n\t\t\t};\n\n\t\t\tif (isLoading) {\n\t\t\t\tgetImageUrls(groupsRef, id);\n\t\t\t}\n\t\t},\n\t\t[ isLoading, id ]\n\t);\n\n\tif (isLoading) {\n\t\treturn <div>Loading</div>;\n\t}\n\n\tconst displayImages = (imageUrls) => {\n\t\tif (imageUrls.primary === '') return null;\n\t\telse {\n\t\t\treturn (\n\t\t\t\t<Grid\n\t\t\t\t\tcontainer\n\t\t\t\t\tjustify=\"center\"\n\t\t\t\t\talignItems=\"flex-end\"\n\t\t\t\t\titem\n\t\t\t\t\txs={12}\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\theight             : 300,\n\t\t\t\t\t\tbackgroundImage    : `url(${imageUrls.primary})`,\n\t\t\t\t\t\tbackgroundRepeat   : 'no-repeat',\n\t\t\t\t\t\tbackgroundPosition : 'center',\n\t\t\t\t\t\tbackgroundSize     : 'cover',\n\t\t\t\t\t\tbackgroundColor    : theme.palette.secondary.dark\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<div style={{ height: 300 }} />\n\t\t\t\t</Grid>\n\t\t\t);\n\t\t}\n\t};\n\n\treturn (\n\t\t<Grid className=\"GroupPage\" container direction=\"column\">\n\t\t\t<Grid item xs={12}>\n\t\t\t\t{displayImages(imageUrls)}\n\t\t\t</Grid>\n\n\t\t\t<Grid className={classes.innerContent} container item xs={12} alignItems=\"flex-start\">\n\t\t\t\t<Grid container item xs={12} wrap=\"nowrap\" justify=\"space-between\">\n\t\t\t\t\t<Typography variant=\"h3\" gutterBottom>\n\t\t\t\t\t\t{group.name}\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t{isAuthenticated && !isCreator && <FollowGroupIconBtn groupId={group.id} />}\n\t\t\t\t\t\t{isCreator && <EditIconBtn type={'groups'} id={group.id} />}\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t\t{group.description && (\n\t\t\t\t\t<Grid item xs={12} style={{ marginBottom: 15 }}>\n\t\t\t\t\t\t<Typography gutterBottom style={{ whiteSpace: 'pre-line' }}>\n\t\t\t\t\t\t\t{group.description}\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t</Grid>\n\t\t\t\t)}\n\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t<GroupTabPanel isCreator={isCreator} group={group} imageUrls={imageUrls} />\n\t\t\t\t</Grid>\n\n\t\t\t\t<Grid item xs={12} style={{ marginTop: 15 }}>\n\t\t\t\t\t<CommentsContainer type=\"groups\" id={group.id} isCreatorOrModerator={isCreator || isModerator} />\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t</Grid>\n\t);\n}\nexport default GroupPage;\n","import React, { useState } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\n\nimport GroupFormBasicFields from './GroupFormBasicFields';\nimport { updateGroup, deleteGroup } from '../actions/groups';\nimport { removeFromFollowedGroups } from '../actions/currUser';\n\nconst useStyles = makeStyles({\n\tinnerContent : {\n\t\tpadding : 20\n\t},\n\tform         : {\n\t\tdisplay       : 'flex',\n\t\tflexDirection : 'column',\n\t\t'& div'       : {\n\t\t\tmarginBottom : 10\n\t\t}\n\t}\n});\n\nfunction EditGroup() {\n\tconst classes = useStyles();\n\tconst theme = useTheme();\n\tconst dispatch = useDispatch();\n\tconst { id } = useParams();\n\tconst history = useHistory();\n\tconst [ action, setAction ] = useState(null);\n\tconst status = useSelector((st) => st.groups.status);\n\tconst group = useSelector((st) => st.groups.entities[id]);\n\n\tif (status === 'success') {\n\t\tif (action === 'edit') history.push(`/groups/${id}`);\n\t\tif (action === 'delete') history.push(`/groups`);\n\t}\n\n\tconst INITIAL_GROUP_FORM_DATA = {\n\t\tname        : '',\n\t\tdescription : '',\n\t\tis_public   : true\n\t};\n\tconst [ groupFormData, setGroupFormData ] = useState(INITIAL_GROUP_FORM_DATA);\n\n\tconst handleGroupFormChange = (data) => {\n\t\tlet { name, value } = data;\n\t\tif (name === 'is_public') {\n\t\t\tvalue = data.checked;\n\t\t}\n\n\t\tsetGroupFormData((fData) => ({\n\t\t\t...fData,\n\t\t\t[name] : value\n\t\t}));\n\t};\n\n\t// On form submit, convert data to type expected by server\n\t// and make POST request to create new group\n\tconst handleSubmit = async (evt) => {\n\t\tevt.preventDefault();\n\n\t\tlet editGroup = { ...groupFormData };\n\n\t\tfor (let field in editGroup) {\n\t\t\tif (editGroup[field] === '') {\n\t\t\t\tdelete editGroup[field];\n\t\t\t}\n\t\t}\n\n\t\tconsole.log('EditGroup - editGroup', editGroup);\n\t\tsetAction('edit');\n\t\tdispatch(updateGroup(id, editGroup));\n\t};\n\n\tconst handleDelete = async () => {\n\t\tsetAction('delete');\n\t\tdispatch(removeFromFollowedGroups(group.creator, id));\n\t\tdispatch(deleteGroup(id));\n\t};\n\n\tconst handleCancel = () => {\n\t\thistory.push(`/groups/${id}`);\n\t};\n\n\treturn (\n\t\t<div className={classes.innerContent}>\n\t\t\t<Typography variant=\"h4\" gutterBottom>\n\t\t\t\tEdit Group\n\t\t\t</Typography>\n\t\t\t<form onSubmit={handleSubmit} className={classes.form}>\n\t\t\t\t<GroupFormBasicFields formData={groupFormData} onFormChange={handleGroupFormChange} edit={true} />\n\n\t\t\t\t<Grid container item justify=\"space-between\" style={{ paddingLeft: 40, paddingRight: 40 }}>\n\t\t\t\t\t<Button onClick={handleCancel} variant=\"contained\" color=\"secondary\">\n\t\t\t\t\t\tGo Back\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tonClick={handleDelete}\n\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\tstyle={{ backgroundColor: theme.palette.error.dark, color: theme.palette.error.contrastText }}\n\t\t\t\t\t>\n\t\t\t\t\t\tDelete Group\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Button variant=\"contained\" color=\"primary\" type=\"submit\">\n\t\t\t\t\t\tSave Edits\n\t\t\t\t\t</Button>\n\t\t\t\t</Grid>\n\t\t\t</form>\n\t\t</div>\n\t);\n}\nexport default EditGroup;\n","import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport lostWoods from './images/not-found-page.jpg';\n\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Link from '@material-ui/core/Link';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => {\n\treturn {\n\t\tinnerContent : {\n\t\t\tpadding         : 20,\n\t\t\tbackgroundColor : theme.palette.background.paper,\n\t\t\tboxShadow       : theme.shadows[4],\n\t\t\t'& > h5'        : {\n\t\t\t\tmarginTop : 10\n\t\t\t},\n\t\t\t'& > p'         : {\n\t\t\t\tmarginLeft : 20\n\t\t\t}\n\t\t}\n\t};\n});\n\nfunction About() {\n\tconst theme = useTheme();\n\tconst classes = useStyles(theme);\n\n\treturn (\n\t\t<Grid container className={classes.innerContent} direction=\"column\">\n\t\t\t<Typography align=\"center\" variant=\"h3\" style={{ fontWeight: 'bold' }} gutterBottom>\n\t\t\t\tAbout Tree-Markable\n\t\t\t</Typography>\n\t\t\t<Typography variant=\"h5\" gutterBottom>\n\t\t\t\tWhat is Tree-Markable?\n\t\t\t</Typography>\n\t\t\t<Typography gutterBottom>\n\t\t\t\tTree-Markable began as an idea inspired by some of the amazing ways in which local communities enable\n\t\t\t\ttheir residents to have meaningful engagement with their local urban forest.\n\t\t\t</Typography>\n\t\t\t<Typography gutterBottom>\n\t\t\t\tUsers can share trees that they find remarkable to give some recognition to the silent heroes that do so\n\t\t\t\tmuch for our communities through ecosystem services, climate change resilience, and their intrinsic\n\t\t\t\tvalue. Users can also make and join groups for more specific purposes or collections of trees such as\n\t\t\t\tfor neighborhoods, national champion trees, favorite species, etc.\n\t\t\t</Typography>\n\t\t\t<Typography gutterBottom>\n\t\t\t\tAnyone can search through the shared trees or groups, but signing up with Tree-Markable (no cost or\n\t\t\t\tspam) allows you to share your own, join groups, and comment on trees or groups.\n\t\t\t</Typography>\n\t\t\t<Typography variant=\"h5\" gutterBottom>\n\t\t\t\tWho made Tree-Markable?\n\t\t\t</Typography>\n\t\t\t<Typography gutterBottom>\n\t\t\t\tTree-Markable is a personal, open source project by the Clallam Tree Alliance, and as such is an\n\t\t\t\tevolving project that is subject to change in the future. This web app was created with the goal of\n\t\t\t\tenabling anyone interested in finding and sharing remarkable trees with their local communities and the\n\t\t\t\tworld at large. Check the{' '}\n\t\t\t\t<Link\n\t\t\t\t\thref=\"https://github.com/jvendettuoli/tree-markable\"\n\t\t\t\t\trel=\"norefferer\"\n\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\tstyle={{ color: theme.palette.primary.light }}\n\t\t\t\t>\n\t\t\t\t\tGitHub\n\t\t\t\t</Link>{' '}\n\t\t\t\tfor the project if you are interested in the technology used, or seeing the features that are planned\n\t\t\t\tfor the future, like paths to add tree walks, expanded image handling, custom map markers, and more!\n\t\t\t</Typography>\n\t\t\t<Typography variant=\"h5\" gutterBottom>\n\t\t\t\tWhat is the{' '}\n\t\t\t\t<Link\n\t\t\t\t\thref=\"https://www.facebook.com/clallamtreealliance\"\n\t\t\t\t\trel=\"norefferer\"\n\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\tstyle={{ color: theme.palette.primary.light }}\n\t\t\t\t>\n\t\t\t\t\tClallam Tree Alliance\n\t\t\t\t</Link>?\n\t\t\t</Typography>\n\t\t\t<Typography gutterBottom>\n\t\t\t\tClallam Tree Alliance started as a group of individuals looking to form an officially recognized tree\n\t\t\t\tboard for the City of Port Angeles, WA. After some assessment and evolution of priorities, we are now a\n\t\t\t\tgroup of dedicated volunteers that aims to strengthen our understanding and deepen our appreciation of\n\t\t\t\tthe economic, social, environmental and aesthetic gifts that trees bring to our lives. We hold planting\n\t\t\t\tevents to increase the cover of native plants and trees within the city, engage with the public and\n\t\t\t\tlocal policy makers about the importance of a healthy urban forest canopy, and occasionally donate happy\n\t\t\t\tplants to loving homes.\n\t\t\t</Typography>\n\t\t\t<Typography align=\"center\" variant=\"h4\" gutterBottom style={{ marginTop: 15 }} color=\"primary\">\n\t\t\t\tWe hope you enjoy sharing and exploring remarkable trees, and be sure to check back in as this project\n\t\t\t\tgrows from a sapling to a full-fledged tree!\n\t\t\t</Typography>\n\t\t</Grid>\n\t);\n}\nexport default About;\n","import React from 'react';\nimport { Route, Redirect, useParams } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\n\n/** \n * Wrapper Component for Route. Ensures that the user is autheticated\n * before passing protected component. If unauthenticated the user \n * is redirected to the login page.\n*/\nconst ProtectedRoute = ({ component: Component, ...rest }) => {\n\tconst uid = useSelector((st) => st.currUser.uid);\n\treturn <Route {...rest} render={(props) => (uid ? <Component {...props} /> : <Redirect to=\"/signin\" />)} />;\n};\n\nexport default ProtectedRoute;\n","import React from 'react';\nimport { Route, Redirect, useParams } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\n\n/** \n * Wrapper Component for Route. Ensures that the user is autheticated\n * and is allowed to view the page before passing private component. \n * If unauthenticated or the incorrect user, they are redirected \n * to the login page, trees page, or groups page.\n*/\nconst PrivateEntityRoute = ({ component: Component, ...rest }) => {\n\tconst { location: { pathname } } = rest;\n\tconst [ blank, type, id ] = pathname.split('/');\n\tconst uid = useSelector((st) => st.currUser.uid);\n\tconst itemCreator = useSelector((st) => st[type].entities[id].creator);\n\tconst isCreator = uid === itemCreator;\n\n\treturn (\n\t\t<Route {...rest} render={(props) => (isCreator ? <Component {...props} /> : <Redirect to={`/${type}`} />)} />\n\t);\n};\n\nexport default PrivateEntityRoute;\n","import React from 'react';\nimport { Route, Redirect, useParams } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\n\n/** \n * Wrapper Component for Route. Ensures that the user is autheticated\n * and is allowed to view the page before passing private component. \n * If unauthenticated or the incorrect user, they are redirected \n * to the login page, trees page, or groups page.\n*/\nconst PrivateUserRoute = ({ component: Component, ...rest }) => {\n\tconst { location: { pathname } } = rest;\n\tconsole.log('PATHNAME:', pathname);\n\n\tconsole.log('PATHNAME:', pathname.split('/'));\n\tconst [ blank, type, id ] = pathname.split('/');\n\tconsole.log('blank:', blank);\n\tconsole.log('type:', type);\n\tconsole.log('id:', id);\n\n\tconst username = useSelector((st) => st.currUser.username);\n\tconst isUser = username === id;\n\n\treturn <Route {...rest} render={(props) => (isUser ? <Component {...props} /> : <Redirect to=\"/signin\" />)} />;\n};\n\nexport default PrivateUserRoute;\n","import React, { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\n\nimport { Switch, Route, useHistory } from 'react-router-dom';\n\nimport LandingPage from './LandingPage';\nimport SignUp from './user/SignUp';\nimport SignIn from './user/SignIn';\nimport EditUser from './user/EditUser';\nimport CreateNewTree from './tree/CreateNewTree';\nimport NotFound from './NotFound';\nimport ExploreTrees from './tree/ExploreTrees';\nimport ExploreGroups from './group/ExploreGroups';\nimport TreePage from './tree/TreePage';\nimport EditTree from './tree/EditTree';\nimport CreateNewGroup from './group/CreateNewGroup';\nimport UserProfilePage from './user/UserProfilePage';\nimport GroupPage from './group/GroupPage';\nimport EditGroup from './group/EditGroup';\nimport About from './About';\nimport ProtectedRoute from './ProtectedRoute';\nimport PrivateEntityRoute from './PrivateEntityRoute';\nimport PrivateUserRoute from './PrivateUserRoute';\n\nfunction Routes() {\n\tconst history = useHistory();\n\tconst authErrorStatus = useSelector((st) => st.auth.error);\n\tconst currUserErrorStatus = useSelector((st) => st.currUser.error);\n\tconst groupsErrorStatus = useSelector((st) => st.groups.error);\n\tconst treesErrorStatus = useSelector((st) => st.trees.error);\n\tconst errorStatuses = [ authErrorStatus, currUserErrorStatus, groupsErrorStatus, treesErrorStatus ];\n\n\t// useEffect(\n\t// \t() => {\n\t// \t\tconsole.log('ROUTES 404', errorStatuses);\n\t// \t\terrorStatuses.forEach((error) => {\n\t// \t\t\tif (error !== null && error[0].status === 404) {\n\t// \t\t\t\thistory.push('/404');\n\t// \t\t\t}\n\t// \t\t});\n\t// \t},\n\t// \t[\n\t// \t\tauthErrorStatus,\n\t// \t\tcurrUserErrorStatus,\n\t// \t\tgroupsErrorStatus,\n\t// \t\ttreesErrorStatus\n\t// \t]\n\t// );\n\n\treturn (\n\t\t<Switch>\n\t\t\t<Route exact path=\"/\">\n\t\t\t\t<LandingPage />\n\t\t\t</Route>\n\t\t\t<Route exact path=\"/about\">\n\t\t\t\t<About />\n\t\t\t</Route>\n\t\t\t<PrivateUserRoute component={UserProfilePage} exact path=\"/users/:username\" />\n\t\t\t<PrivateUserRoute component={EditUser} exact path=\"/users/:username/edit\" />\n\t\t\t<Route exact path=\"/signup\">\n\t\t\t\t<SignUp />\n\t\t\t</Route>\n\t\t\t<Route exact path=\"/signin\">\n\t\t\t\t<SignIn />\n\t\t\t</Route>\n\t\t\t<Route exact path=\"/trees\">\n\t\t\t\t<ExploreTrees />\n\t\t\t</Route>\n\t\t\t<ProtectedRoute component={CreateNewTree} exact path=\"/trees/new\" />\n\t\t\t<Route exact path=\"/trees/:id\">\n\t\t\t\t<TreePage />\n\t\t\t</Route>\n\t\t\t<PrivateEntityRoute component={EditTree} exact path=\"/trees/:id/edit\" />\n\t\t\t<Route exact path=\"/groups\">\n\t\t\t\t<ExploreGroups />\n\t\t\t</Route>\n\t\t\t<ProtectedRoute component={CreateNewGroup} exact path=\"/groups/new\" />\n\t\t\t<Route exact path=\"/groups/:id\">\n\t\t\t\t<GroupPage />\n\t\t\t</Route>\n\t\t\t<PrivateEntityRoute component={EditGroup} exact path=\"/groups/:id/edit\" />\n\t\t\t<Route exact path=\"/404\">\n\t\t\t\t<NotFound />\n\t\t\t</Route>\n\t\t\t<Route>\n\t\t\t\t<NotFound />\n\t\t\t</Route>\n\t\t</Switch>\n\t);\n}\n\nexport default Routes;\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst drawerWidth = 200;\n\nconst useStyles = makeStyles((theme) => {\n\treturn {\n\t\troot        : {\n\t\t\tdisplay : 'flex'\n\t\t},\n\t\tdrawer      : {\n\t\t\t[theme.breakpoints.up('md')]: {\n\t\t\t\twidth      : drawerWidth,\n\t\t\t\tflexShrink : 0\n\t\t\t},\n\t\t\t'& .MuiDrawer-paperAnchorDockedLeft' : {\n\t\t\t\tborderRightColor : theme.palette.primary.dark\n\t\t\t}\n\t\t},\n\t\tappBar      : {\n\t\t\t[theme.breakpoints.up('md')]: {\n\t\t\t\twidth      : `calc(100% - ${drawerWidth}px)`,\n\t\t\t\tmarginLeft : drawerWidth\n\t\t\t}\n\t\t},\n\t\tmenuButton  : {\n\t\t\tmarginRight                  : theme.spacing(2),\n\t\t\t[theme.breakpoints.up('md')]: {\n\t\t\t\tdisplay : 'none'\n\t\t\t}\n\t\t},\n\t\t// necessary for content to be below app bar\n\t\ttoolbar     : {\n\t\t\t...theme.mixins.toolbar,\n\t\t\tdisplay         : 'flex',\n\t\t\tjustifyContent  : 'space-between',\n\t\t\tbackgroundColor : theme.palette.primary.dark\n\t\t},\n\t\tdrawerPaper : {\n\t\t\twidth : drawerWidth\n\t\t},\n\t\tcontent     : {\n\t\t\tflexGrow                     : 1,\n\t\t\tbackgroundColor              : theme.palette.primary.lightest,\n\t\t\t[theme.breakpoints.up('lg')]: {\n\t\t\t\tpaddingLeft  : theme.spacing(20),\n\t\t\t\tpaddingRight : theme.spacing(20)\n\t\t\t},\n\t\t\t[theme.breakpoints.up('xl')]: {\n\t\t\t\tpaddingLeft  : theme.spacing(40),\n\t\t\t\tpaddingRight : theme.spacing(40)\n\t\t\t}\n\t\t},\n\t\tnested      : {\n\t\t\tpaddingLeft : theme.spacing(4)\n\t\t}\n\t};\n});\n\nexport default useStyles;\n","import { React } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\n\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { useTheme } from '@material-ui/core/styles';\nimport {\n\tInfo as InfoIcon,\n\tAdd as AddIcon,\n\tNature as NatureIcon,\n\tGroup as GroupIcon,\n\tExplore as ExploreIcon,\n\tHome as HomeIcon\n} from '@material-ui/icons';\n\nimport useStyles from './styles/navDrawer';\n\nfunction NavDrawer(props) {\n\tconst { location: { pathname } } = props;\n\n\tconst isAuthenticated = useSelector((st) => st.auth.authenticated);\n\tconst theme = useTheme();\n\tconst classes = useStyles(theme);\n\n\treturn (\n\t\t<div>\n\t\t\t<Paper\n\t\t\t\tclassName={classes.toolbar}\n\t\t\t\tstyle={{\n\t\t\t\t\tbackgroundColor : theme.palette.primary.dark,\n\t\t\t\t\tjustifyContent  : 'center',\n\t\t\t\t\talignItems      : 'center'\n\t\t\t\t}}\n\t\t\t\tsquare\n\t\t\t\televation={5}\n\t\t\t>\n\t\t\t\t<Typography align=\"center\" variant=\"h5\" noWrap style={{ color: 'white' }}>\n\t\t\t\t\tTree-Markable\n\t\t\t\t</Typography>\n\t\t\t</Paper>\n\n\t\t\t<Divider />\n\t\t\t<List>\n\t\t\t\t<ListItem button component={Link} to=\"/\" selected={'/' === pathname}>\n\t\t\t\t\t<ListItemIcon>\n\t\t\t\t\t\t<HomeIcon />\n\t\t\t\t\t</ListItemIcon>\n\t\t\t\t\t<ListItemText primary=\"Home\" />\n\t\t\t\t</ListItem>\n\t\t\t\t<Divider />\n\n\t\t\t\t<ListItem style={{ backgroundColor: theme.palette.secondary.lightest }} disabled={!isAuthenticated}>\n\t\t\t\t\t<ListItemIcon>\n\t\t\t\t\t\t<AddIcon />\n\t\t\t\t\t</ListItemIcon>\n\t\t\t\t\t<ListItemText primary=\"Create\" />\n\t\t\t\t</ListItem>\n\t\t\t\t<List component=\"div\" disablePadding>\n\t\t\t\t\t<ListItem\n\t\t\t\t\t\tbutton\n\t\t\t\t\t\tclassName={classes.nested}\n\t\t\t\t\t\tcomponent={Link}\n\t\t\t\t\t\tto=\"/trees/new\"\n\t\t\t\t\t\tselected={'/trees/new' === pathname}\n\t\t\t\t\t\tdisabled={!isAuthenticated}\n\t\t\t\t\t>\n\t\t\t\t\t\t<ListItemIcon>\n\t\t\t\t\t\t\t<NatureIcon />\n\t\t\t\t\t\t</ListItemIcon>\n\t\t\t\t\t\t<ListItemText primary=\"Tree\" />\n\t\t\t\t\t</ListItem>\n\t\t\t\t\t<ListItem\n\t\t\t\t\t\tbutton\n\t\t\t\t\t\tclassName={classes.nested}\n\t\t\t\t\t\tcomponent={Link}\n\t\t\t\t\t\tto=\"/groups/new\"\n\t\t\t\t\t\tselected={'/groups/new' === pathname}\n\t\t\t\t\t\tdisabled={!isAuthenticated}\n\t\t\t\t\t>\n\t\t\t\t\t\t<ListItemIcon>\n\t\t\t\t\t\t\t<GroupIcon />\n\t\t\t\t\t\t</ListItemIcon>\n\t\t\t\t\t\t<ListItemText primary=\"Group\" />\n\t\t\t\t\t</ListItem>\n\t\t\t\t</List>\n\t\t\t</List>\n\t\t\t<Divider />\n\t\t\t<List style={{ paddingTop: 0 }}>\n\t\t\t\t<ListItem style={{ backgroundColor: theme.palette.secondary.lightest }}>\n\t\t\t\t\t<ListItemIcon>\n\t\t\t\t\t\t<ExploreIcon />\n\t\t\t\t\t</ListItemIcon>\n\t\t\t\t\t<ListItemText primary=\"Explore\" />\n\t\t\t\t</ListItem>\n\t\t\t\t<List component=\"div\" disablePadding>\n\t\t\t\t\t<ListItem\n\t\t\t\t\t\tbutton\n\t\t\t\t\t\tclassName={classes.nested}\n\t\t\t\t\t\tcomponent={Link}\n\t\t\t\t\t\tto=\"/trees\"\n\t\t\t\t\t\tselected={'/trees' === pathname}\n\t\t\t\t\t>\n\t\t\t\t\t\t<ListItemIcon>\n\t\t\t\t\t\t\t<NatureIcon />\n\t\t\t\t\t\t</ListItemIcon>\n\t\t\t\t\t\t<ListItemText primary=\"Trees\" />\n\t\t\t\t\t</ListItem>\n\t\t\t\t\t<ListItem\n\t\t\t\t\t\tbutton\n\t\t\t\t\t\tclassName={classes.nested}\n\t\t\t\t\t\tcomponent={Link}\n\t\t\t\t\t\tto=\"/groups\"\n\t\t\t\t\t\tselected={'/groups' === pathname}\n\t\t\t\t\t>\n\t\t\t\t\t\t<ListItemIcon>\n\t\t\t\t\t\t\t<GroupIcon />\n\t\t\t\t\t\t</ListItemIcon>\n\t\t\t\t\t\t<ListItemText primary=\"Groups\" />\n\t\t\t\t\t</ListItem>\n\t\t\t\t</List>\n\t\t\t\t<Divider />\n\t\t\t\t<ListItem button component={Link} to=\"/about\" selected={'/about' === pathname}>\n\t\t\t\t\t<ListItemIcon>\n\t\t\t\t\t\t<InfoIcon />\n\t\t\t\t\t</ListItemIcon>\n\t\t\t\t\t<ListItemText primary=\"About\" />\n\t\t\t\t</ListItem>\n\t\t\t</List>\n\t\t</div>\n\t);\n}\n\nexport default withRouter(NavDrawer);\n","import React, { useState } from 'react';\nimport { Link, withRouter, useHistory } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Paper from '@material-ui/core/Paper';\n\nimport Divider from '@material-ui/core/Divider';\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport Grid from '@material-ui/core/Grid';\nimport Hidden from '@material-ui/core/Hidden';\nimport IconButton from '@material-ui/core/IconButton';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport {\n\tMenu as MenuIcon,\n\tAccountCircle as AccountCircleIcon\n} from '@material-ui/icons';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { useTheme } from '@material-ui/core/styles';\n\nimport useStyles from './styles/navDrawer';\nimport { signOutUser } from './actions/auth';\n\nfunction NavAppBar({ handleDrawerToggle, ...props }) {\n\tconst history = useHistory();\n\tconst theme = useTheme();\n\tconst classes = useStyles(theme);\n\tconst isLoggedIn = useSelector((st) => st.auth.authenticated);\n\tconst username = useSelector((st) => st.currUser.username);\n\tconst dispatch = useDispatch();\n\tconst [ anchorEl, setAnchorEl ] = useState(null);\n\tconst open = Boolean(anchorEl);\n\n\tconst handleMenu = (event) => {\n\t\tsetAnchorEl(event.currentTarget);\n\t};\n\n\tconst handleClose = () => {\n\t\tsetAnchorEl(null);\n\t};\n\tconst handleProfileClick = () => {\n\t\thandleClose();\n\t\thistory.push(`/users/${username}`);\n\t};\n\n\tconst handleSignOut = () => {\n\t\thandleClose();\n\t\tdispatch(signOutUser());\n\t\thistory.push('/');\n\t};\n\n\treturn (\n\t\t<AppBar position=\"fixed\" className={classes.appBar}>\n\t\t\t<Toolbar className={classes.toolbar}>\n\t\t\t\t<IconButton\n\t\t\t\t\tcolor=\"inherit\"\n\t\t\t\t\taria-label=\"open drawer\"\n\t\t\t\t\tedge=\"start\"\n\t\t\t\t\tonClick={handleDrawerToggle}\n\t\t\t\t\tclassName={classes.menuButton}\n\t\t\t\t>\n\t\t\t\t\t<MenuIcon />\n\t\t\t\t</IconButton>\n\t\t\t\t<Hidden mdUp implementation=\"js\">\n\t\t\t\t\t<Typography variant=\"h6\" noWrap>\n\t\t\t\t\t\tTree-Markable\n\t\t\t\t\t</Typography>\n\t\t\t\t</Hidden>\n\t\t\t\t<Hidden smDown implementation=\"js\">\n\t\t\t\t\t<div />\n\t\t\t\t</Hidden>\n\t\t\t\t{isLoggedIn ? (\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\taria-label=\"account of current user\"\n\t\t\t\t\t\t\taria-controls=\"menu-appbar\"\n\t\t\t\t\t\t\taria-haspopup=\"true\"\n\t\t\t\t\t\t\tonClick={handleMenu}\n\t\t\t\t\t\t\tcolor=\"inherit\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<AccountCircleIcon />\n\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t<Menu\n\t\t\t\t\t\t\tid=\"menu-appbar\"\n\t\t\t\t\t\t\tanchorEl={anchorEl}\n\t\t\t\t\t\t\tanchorOrigin={{\n\t\t\t\t\t\t\t\tvertical   : 'top',\n\t\t\t\t\t\t\t\thorizontal : 'right'\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tkeepMounted\n\t\t\t\t\t\t\ttransformOrigin={{\n\t\t\t\t\t\t\t\tvertical   : 'top',\n\t\t\t\t\t\t\t\thorizontal : 'right'\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\topen={open}\n\t\t\t\t\t\t\tonClose={handleClose}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<MenuItem onClick={handleProfileClick}>\n\t\t\t\t\t\t\t\tProfile\n\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t\t<MenuItem onClick={handleSignOut}>\n\t\t\t\t\t\t\t\tSign Out\n\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t</Menu>\n\t\t\t\t\t</div>\n\t\t\t\t) : (\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<ButtonGroup size=\"small\" variant=\"text\">\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tstyle={{ color: 'white' }}\n\t\t\t\t\t\t\t\tcomponent={Link}\n\t\t\t\t\t\t\t\tto=\"/signup\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tSign Up\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tstyle={{ color: 'white' }}\n\t\t\t\t\t\t\t\tcomponent={Link}\n\t\t\t\t\t\t\t\tto=\"/signin\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tSign In\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</ButtonGroup>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t</Toolbar>\n\t\t</AppBar>\n\t);\n}\n\nexport default NavAppBar;\n","import React, { useState } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Paper from '@material-ui/core/Paper';\n\nimport Divider from '@material-ui/core/Divider';\nimport Button from '@material-ui/core/Button';\nimport Drawer from '@material-ui/core/Drawer';\nimport Hidden from '@material-ui/core/Hidden';\nimport IconButton from '@material-ui/core/IconButton';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport {\n\tMenu as MenuIcon,\n\tAccountCircle as AccountCircleIcon\n} from '@material-ui/icons';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { useTheme } from '@material-ui/core/styles';\n\nimport useStyles from './styles/navDrawer';\nimport { signOutUser } from './actions/auth';\nimport NavDrawer from './NavDrawer';\nimport NavAppBar from './NavAppBar';\n\nfunction Navigation(props) {\n\tconst { window, children } = props;\n\tconst theme = useTheme();\n\tconst classes = useStyles(theme);\n\tconst [ mobileOpen, setMobileOpen ] = useState(false);\n\tconst isLoggedIn = useSelector((st) => st.auth.authenticated);\n\tconst dispatch = useDispatch();\n\tconst [ anchorEl, setAnchorEl ] = React.useState(null);\n\tconst open = Boolean(anchorEl);\n\n\tconst handleDrawerToggle = () => {\n\t\tsetMobileOpen(!mobileOpen);\n\t};\n\n\tconst container =\n\t\twindow !== undefined ? () => window().document.body : undefined;\n\n\treturn (\n\t\t<div className={classes.root}>\n\t\t\t<NavAppBar handleDrawerToggle={handleDrawerToggle} />\n\t\t\t<nav className={classes.drawer} aria-label=\"navigation drawer\">\n\t\t\t\t<Hidden mdUp implementation=\"js\">\n\t\t\t\t\t<Drawer\n\t\t\t\t\t\tcontainer={container}\n\t\t\t\t\t\tvariant=\"temporary\"\n\t\t\t\t\t\tanchor={\n\t\t\t\t\t\t\ttheme.direction === 'rtl' ? 'right' : 'left'\n\t\t\t\t\t\t}\n\t\t\t\t\t\topen={mobileOpen}\n\t\t\t\t\t\tonClose={handleDrawerToggle}\n\t\t\t\t\t\tclasses={{\n\t\t\t\t\t\t\tpaper : classes.drawerPaper\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tModalProps={{\n\t\t\t\t\t\t\tkeepMounted : true // Better open performance on mobile.\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<NavDrawer />\n\t\t\t\t\t</Drawer>\n\t\t\t\t</Hidden>\n\t\t\t\t<Hidden smDown implementation=\"js\">\n\t\t\t\t\t<Drawer\n\t\t\t\t\t\tclasses={{\n\t\t\t\t\t\t\tpaper : classes.drawerPaper\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tvariant=\"permanent\"\n\t\t\t\t\t\topen\n\t\t\t\t\t>\n\t\t\t\t\t\t<NavDrawer />\n\t\t\t\t\t</Drawer>\n\t\t\t\t</Hidden>\n\t\t\t</nav>\n\t\t\t<main className={classes.content}>\n\t\t\t\t<div className={classes.toolbar} />\n\t\t\t\t{children}\n\t\t\t</main>\n\t\t</div>\n\t);\n}\n\nexport default Navigation;\n","import React, { useEffect } from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\n\nimport { verifyAuth } from './actions/auth';\nimport { useTheme } from '@material-ui/core/styles';\n\nimport Routes from './Routes';\nimport Navigation from './Navigation';\n\nimport useStyles from './styles/navDrawer';\n\nfunction App() {\n\tconst theme = useTheme();\n\tconst classes = useStyles(theme);\n\tconst dispatch = useDispatch();\n\t// Set Firebase Auth Listener, onAuthStateChanged, on App\n\t// initialization. unsubscribe removes listener on dismount.\n\n\tuseEffect(\n\t\t() => {\n\t\t\tconst unsubscribe = dispatch(verifyAuth());\n\t\t\treturn () => unsubscribe();\n\t\t},\n\t\t[ dispatch ]\n\t);\n\n\treturn (\n\t\t<BrowserRouter>\n\t\t\t<div className=\"App\">\n\t\t\t\t<Navigation>\n\t\t\t\t\t<Routes />\n\t\t\t\t</Navigation>\n\t\t\t</div>\n\t\t</BrowserRouter>\n\t);\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\n// Redux\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { Provider } from 'react-redux';\nimport { store, persistedStore } from './store';\n\nimport App from './App';\n\n// Baseline Styles for Material-UI\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport { ThemeProvider } from '@material-ui/styles';\nimport { lightGreen, brown } from '@material-ui/core/colors';\n\nconst theme = createMuiTheme({\n\tpalette : {\n\t\tprimary   : {\n\t\t\tmain     : lightGreen[900],\n\t\t\taccent   : lightGreen.A400,\n\t\t\tlightest : lightGreen[50]\n\t\t},\n\t\tsecondary : {\n\t\t\tmain     : brown[500],\n\t\t\tlightest : brown[50]\n\t\t}\n\t}\n});\n\nReactDOM.render(\n\t<Provider store={store}>\n\t\t<PersistGate loading={null} persistor={persistedStore}>\n\t\t\t<ThemeProvider theme={theme}>\n\t\t\t\t<CssBaseline>\n\t\t\t\t\t<App />\n\t\t\t\t</CssBaseline>\n\t\t\t</ThemeProvider>\n\t\t</PersistGate>\n\t</Provider>,\n\tdocument.getElementById('root')\n);\n"],"sourceRoot":""}